<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2009-2014 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="Simulink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../matlab/resources/schema/msgcat.xsd">
  <message> 
    <entry key="BusTypeInvPortBusTypeChange">Cannot change bus type of ''{0}'' while simulation is running.</entry>
    <entry key="BusTypePropBlockHasUnequalInputs">The signals feeding into block ''{0}'' do not have the same bus types. All input signals to this block must have the same bus types.</entry>
    <entry key="BusTypePropBlockHasUnsetInputInfo">''{0}'' has unset signal bus type information for input port {1,number,integer}. Currently there is not enough information to solve the model. Please consider adding a Signal Specification block with a bus object before the input port. To set the bus type to nonvirtual, check the ''Require nonvirtual bus'' checkbox in the Signal Specification block parameters dialog. </entry>
    <entry key="BusTypePropBlockHasUnsetOutputInfo">''{0}'' has unset signal bus type information for output port {1,number,integer}. Currently there is not enough information to solve the model. Please consider adding a Signal Specification block with a bus object after the output port. To set the bus type to nonvirtual, check the ''Require nonvirtual bus'' checkbox in the Signal Specification block parameters dialog.</entry>
    <entry key="BusTypePropBusConfiguredForNVB">Block ''{0}'' is configured to require a nonvirtual bus or non-bus signal, however the type of the input signal to the block is virtual. Please see Simulink documentation for further information on composite (i.e. bus) signals and their proper usage. Alternately, if the input bus signal consists only of scalar elements, 1-D elements, or either row or column vectors; and all elements have the same data type, signal type, and sampling mode, consider inserting a Bus to Vector conversion block in the signal path.</entry>
    <entry key="BusTypePropSrcDstMismatchBusSrc">Cannot propagate bus signal from output port {0,number,integer} of ''{1}'' to input port {2,number,integer} of ''{3}'' because this input port requires a non-bus signal.\n\nIf the destination block is a bus-capable block, ensure that the block configuration and its input signal(s) meet the requirements for bus support. Please see Simulink documentation for further information on composite (i.e. bus) signals and their proper usage. Alternately, if the input bus signal is virtual; consists only of scalar elements, 1-D elements, or either row or column vectors; and all elements have the same data type, signal type, and sampling mode, consider inserting a Bus to Vector conversion block in the signal path. Otherwise, consider using a Bus Selector block in the signal path.</entry>
   <entry key="BusTypePropSrcDstMismatchBusSrcStateflow">Cannot propagate bus signal to input port {0,number,integer} of ''{1}'' because this input port requires a non-bus signal. \n\nIf the destination block is a bus-capable block, ensure that the block configuration and its input signal(s) meet the requirements for bus support. Please see Simulink documentation for further information on composite (i.e. bus) signals and their proper usage. Alternately, if the input bus signal is virtual; consists only of scalar elements, 1-D elements, or either row or column vectors; and all elements have the same data type, signal type, and sampling mode, consider inserting a Bus to Vector conversion block in the signal path. Otherwise, consider using a Bus Selector block in the signal path.</entry>
    <entry key="BusTypePropSrcDstMismatchVB">All input signals to the block ''{0}'' must be of the same type (bus or non-bus). The signal at input port {1,number,integer}  is a virtual bus while the signal at input port {2,number,integer} is not a bus signal. If the input bus signal consists only of scalar elements, 1-D elements, or either row or column vectors; and all elements have the same data type, signal type, and sampling mode, consider inserting a Bus to Vector conversion block in the signal path.</entry>
    <entry key="BusTypePropSrcsCannotHaveDynamicSetting">Source ''{0}'' cannot have dynamic bus type setting for its output port {1,number,integer}. All sources should explicitly set all their bus types. If this error message references a built-in Simulink block, please contact MathWorks for assistance.</entry>
    <entry key="BusTypePropTooManyOutputs">Block ''{0}'' uses the default set function in the signal bus type propagator but it has more than one output. This block must implement a custom set function. If this error message references a built-in Simulink block, please contact MathWorks for assistance.</entry>
    <entry key="BusTypePropVirtualityMismatchNVToV">All input buses to the block ''{0}'' must be of the same virtuality. The bus at input port {1,number,integer} is nonvirtual, while the bus at input port {2,number,integer} is virtual.</entry>
    <entry key="BusTypePropVirtualityMismatchNVToVVariantMerge">All input buses from Variant Subsystem choices to the Outport block ''{0}'' must be of the same virtuality (all Virtual or all Nonvirtual). To fix this issue the output of ''{1}'' must be a nonvirtual bus which can be created by adding a Signal Conversion block which is configured to convert virtual buses to nonvirtual buses.</entry>
 <entry key="BusTypePropVirtualityMismatchNVToVVariantMergeHier">All input buses from Variant Subsystem choices to the Outport block ''{0}'' must be of the same virtuality. One way to fix this issue, is to set all the Variant choice blocks' outport bus types to be nonvirtual.</entry>
    <entry key="BusTypePropVirtualityMismatchNVToNB">All input buses to the block ''{0}'' must be of the same virtuality. The bus at input port {1,number,integer} is nonvirtual, while the signal at input port {2,number,integer} is not a bus.</entry>
    <entry key="BusTypePropVirtualityMismatchVToNV">All input buses to the block ''{0}'' must be of the same virtuality. The bus at input port {1,number,integer} is virtual, while the bus at input port {2,number,integer} is nonvirtual.</entry>
    <entry key="BusVectorCompilationRequired">Cannot get the list of BusAsVector ports unless the model is in compiled state.</entry>
    <entry key="BusVectorStrictBusesRequired">To be able to call get_param(sys, ''BusInputIntoNonBusBlock'') you must first set the diagnostic "Use of Mux blocks to create bus signals" to ''error''. To do this, go to the Configuration Parameters dialog box, select ''Connectivity'' on the left pane, and go to the ''Buses'' control group on the right side panel.</entry>
    <entry key="EditTimeBusPropFailureInputPort">Unable to determine the signal hierarchy entering input port {0,number,integer} of ''{1}''. In order to determine the signal hierarchy, Simulink must inspect upstream blocks and propagate information about the signal hierarchy to this block. Simulink encountered an error condition during this process. The specific diagnostic message is:</entry>
    <entry key="EditTimeBusPropFailureOutputPort">Unable to determine the signal hierarchy at the output port {0,number,integer} of ''{1}''. In order to determine the signal hierarchy, Simulink must inspect upstream blocks and propagate information about the signal hierarchy to this block. Simulink encountered an error condition during this process. The specific diagnostic message is:</entry>
    <entry key="EditTimeBusPropFailureSFcnStateOwner">Unable to determine the signal hierarchy at the output port of a State Reader block ''{0}''. If the state owner S-Function block ''{1}'' declared a DWork vector used as a discrete state with a bus object, consider inserting a Signal Specification block at the output port of the State Reader block. In the Signal Specification dialog box, set 'Data type' to 'Bus:' with the same bus object name as that for the S-Function DWork vector, and select the 'Require nonvirtual bus' check box.</entry>
    <entry key="NonBusInputToBusToVectorBlock">The signal connected to the Bus to Vector block ''{0}'' is not a Bus. The Bus to Vector block requires a bus signal connected to its input.</entry>
    <entry key="SigHierPropBlockBusSettingDoesntMatchPropInfo">Cannot propagate bus signal to block ''{0}'' because the bus object specified on the block does not match the hierarchy of the bus signal propagated to it.</entry>
    <entry key="SigHierPropBlockBusSettingDoesntMatchPropInfoNonBus">Cannot propagate non-bus signal to block ''{0}'' because the block has a bus object specified. A bus signal matching the bus object specification must be passed in.</entry>
    <entry key="SigHierPropBlockBusSettingSubBusDoesntMatchPropInfo">Error occurred while propagating bus signal hierarchy to input port {0,number,integer} of the block ''{1}''. The propagated signal hierarchy is inconsistent with the bus object ''{2}'' specified on the block. This bus object directly or indirectly has a bus element with data type ''{3}'' that does not match the propagated signal hierarchy.</entry>
    <entry key="SigHierPropBlockHasUnequalBusInputs">The bus signals feeding into block ''{0}'' do not have the same signal names and hierarchies. All bus input signals to this block must have the same names and hierarchical structure.</entry>
    <entry key="SigHierPropBlockHasUnequalInputs">The signals feeding into block ''{0}'' do not have the same signal names and hierarchies. All input signals to this block must have the same names and hierarchical structure.</entry>
    <entry key="SigHierPropBlockHasUnsetInputInfo">''{0}'' has unset signal name and hierarchy information for input port {1,number,integer}. If this error message references a built-in Simulink block, please contact MathWorks for assistance.</entry>
    <entry key="SigHierPropBlockHasUnsetOutputInfo">''{0}'' has unset signal name and hierarchy information for output port {1,number,integer}. If this error message references a built-in Simulink block, please contact MathWorks for assistance.</entry>
    <entry key="SigHierPropBusAssignOutputDoesNotMatchInput">Selected signal ''{0}'' in the Bus Assignment block ''{1}'' cannot be found in the input bus signal.</entry>
    <entry key="SigHierPropBusSelOutputDoesNotMatchInput">Selected signal ''{0}'' in the Bus Selector block ''{1}'' cannot be found in the input bus signal.</entry>
    <entry key="SigHierPropSubrefInportDoesNotMatchInput">Selected signal ''{0}'' in the Subref Inport block ''{1}'' cannot be found in the input bus signal.</entry>
    <entry key="SigHierPropInputToBlockMustBeABus">Input port {0,number,integer} for ''{1}'' must be a bus signal.</entry>
    <entry key="BusToVectorBlockShouldAcceptVirtualBus">A non-bus signal is connected to the input port of Bus to Vector block ''{0}'', which is functional only when the input signal is a virtual bus. Therefore, please consider removing the Bus to Vector block. </entry>
    <entry key="SigHierPropMaxRecursionExceeded">Hierarchical depth of a bus signal has exceeded the logical limit imposed by the Bus Creator blocks in the model.</entry>
    <entry key="SigHierPropNoSolutionLoop">Unable to determine signal hierarchy. The output of ''{0}'' is fed back to the input port of the same block through other bus capable blocks. This loop cannot be resolved because signal hierarchy is defined by a  recursive relationship. To resolve this issue, consider breaking the loop by selecting the correct signal with a Bus Selector block.</entry>
    <entry key="SigHierPropSrcDstMismatch">Cannot propagate bus signal from output port {0,number,integer} of ''{1}'' to input port {2,number,integer} of ''{3}'' because the destination block requires a bus signal with different structure than the signal that is connected to it.</entry>
    <entry key="SigHierPropSrcDstMismatchBusSrc">Cannot propagate bus signal from output port {0,number,integer} of ''{1}'' to input port {2,number,integer} of ''{3}'' because this input port requires a non-bus signal.\n\nIf the destination block is a bus-capable block, ensure that the block configuration and its input signal(s) meet the requirements for bus support. Please see Simulink documentation for further information on composite (i.e. bus) signals and their proper usage. Alternately, if the input bus signal is virtual; consists only of scalar elements, 1-D elements, or either row or column vectors; and all elements have the same data type, signal type, and sampling mode, consider inserting a Bus to Vector conversion block in the signal path. Otherwise, consider using a Bus Selector block in the signal path.</entry>
    <entry key="SigHierPropSrcDstMismatchNonBusSrc">Cannot propagate non-bus signal from output port {0,number,integer} of ''{1}'' to input port {2,number,integer} of ''{3}'' because the destination block requires a bus signal.</entry>
    <entry key="SigHierPropSrcsCannotHaveDynamicSetting">Source ''{0}'' cannot have dynamic signal hierarchy setting for its output port {1,number,integer}. All sources should explicitly set all their signal name and hierarchy in Block Eval params. If this error message references a built-in Simulink block, please contact MathWorks for assistance.</entry>
    <entry key="SigHierPropTooManyOutputs">Block ''{0}'' uses the default set function in the signal hierarchy propagator but it has more than one output. This block must implement a custom set function. If this error message references a built-in Simulink block, please contact MathWorks for assistance.</entry>
    <entry key="busTypePropVirtualToNonVirtualNoAutoConversion">Block ''{0}'' requires a nonvirtual bus signal, however the input signal is a virtual bus. If the virtual bus originates from a block that supports bus data types, consider specifying a bus object as the data type of this block and check 'Output as nonvirtual bus' to output a nonvirtual bus. If not, consider inserting a Signal Conversion block which is configured to convert virtual buses to nonvirtual buses at the input port of ''{1}''.</entry>
    <entry key="busTypePropNonVirtualSupport">Block ''{0}'' requires a non-bus or a virtual bus signal, however the input signal is a non-virtual bus. Consider inserting a Signal Conversion block which is configured to convert non-virtual buses to virtual buses at the input port of ''{1}''.</entry>
    <entry key="VarDimsNotSupportedForUnconnectedBusSources">The bus object ''{0}'' specified by the unconnected bus source block ''{1}'' contains one or more variable-sized elements. You cannot associate unconnected bus sources with bus objects that contain variable-sized elements. </entry>
    <entry key="VarDimsNotPermittedForAoB1">The bus object ''{0}'' associated with the block ''{1}'' contains both a variable sized element and an array of sub-buses. Arrays of buses cannot be used in conjunction with bus objects that contain variable sized elements. </entry>
    <entry key="VarDimsNotPermittedForAoB2">The bus object ''{0}'' associated with the block ''{1}'' contains a variable sized element and the block specifies non-scalar dimensions. Arrays of buses cannot be used in conjunction with bus objects that contain variable sized elements. </entry>
    <entry key="VarDimsNotPermittedForAoB3">The input non-virtual bus signal to port {0,number,integer} of block ''{1}'', and defined by bus object ''{2}'', contains one or more variable sized bus elements. This block cannot operate on non-virtual bus signals that contain variable sized elements. </entry>
    <entry key="FramesNotPermittedForAoB1">The bus object ''{0}'' associated with the block ''{1}'' contains both an element with frame based sampling mode and an array of sub-buses. Arrays of buses cannot be used in conjunction with bus objects that contain frame based elements. </entry>
    <entry key="FramesNotPermittedForAoB2">The bus object ''{0}'' associated with the block ''{1}'' contains an element with frame based sampling mode and the block specifies non-scalar dimensions. Arrays of buses cannot be used in conjunction with bus objects that contain frame based elements. </entry>
    <entry key="FramesNotPermittedForAoB3">The input non-virtual bus signal to port {0,number,integer} of block ''{1}'', and defined by bus object ''{2}'', contains one or more elements with frame based sampling mode. This block cannot operate on non-virtual bus signals that contain bus elements with frame based sampling mode. </entry>
    <entry key="ExpansionNotPermittedForAoB1">Input to block ''{0}'' is an array of bus signal or contains an element which is an array of bus. The block's ''Initial condition'' parameter is a non-zero scalar or vector value. Consider using a matching MATLAB structure (see Simulink.Bus.createMATLABStruct) or a scalar zero to initialize the array of buses.</entry>
    <entry key="ExpansionNotPermittedForAoB2">An array of bus signal cannot transition its bus type to virtual bus. Consider using a bus object as the data type of ''{0}'' to maintain nonvirtual status.</entry>
    <entry key="ExpansionNotPermittedForAoB3">Input to block ''{0}'' is an array of bus signal. This {1} block's ''Output'' parameter is configured to produce a virtual bus, which is not supported with array of bus inputs.</entry>
    <entry key="NVToVConversionNotSupportAOB">Input port {0,number,integer} of block ''{1}'' contains an array of bus signal. This {2} block is configured to require a virtual bus. An array of bus signal is only supported in a non-virtual bus.</entry>
    <entry key="SlUpdateArraysOfBusesReason">Incompatible dimensions setting detected for root Inport or Outport block. A model created prior to R2010a cannot have root Inport or Outport blocks with non-scalar dimensions if a bus data type is specified for those blocks.</entry>
    <entry key="StrictBusRequiredForAOBWarn">The block ''{0}'' specifies a bus for its data type and a nonscalar value for its dimension field. The signal associated with this block is being treated as a scalar bus. Arrays of bus signals require that the ''Mux blocks used to create bus signals'' diagnostic be set to ''error''. This diagnostic is in the Configuration Parameters Dialog -> Diagnostics -> Connectivity pane.</entry>
    <!-- SlReplaceMux -->
    <entry key="StrictBusUpgradeNotification">The &lt;a href="matlab:modeladvisorprivate openCSAndHighlight {0} 'StrictBusMsg';"&gt;Mux blocks used to create bus signals&lt;/a&gt; diagnostic must be set to ''Error'' to prevent modeling errors (see the Mux block documentation for more information).</entry>
    <entry key="StrictBusMigrationStub1">Mux blocks used to create bus signals</entry>
    <entry key="StrictBusMigrationStub2">Open Upgrade Advisor</entry>
    <entry key="StrictBusMigrationError"><![CDATA[The block diagram ''{0}'' uses bus signals or has signals/parameters that are associated with bus objects. However, the ''{1}'' diagnostic is not configured to ''error''.<actions exclusiveFixIts="yes"><action cmd="matlab:slprivate(''simulinkfixes'',''StrictBusMigrationError'',''{0}'')" type="suggestion">Run the 'Check Bus Usage' check in Upgrade Advisor and follow the recommendations</action></actions>]]></entry>
    <entry key="SlReplaceMuxUsage"> Usage: slreplace_mux(''model'', reportOnly).</entry>
    <entry key="SlReplaceMuxNoMuxUsedAsBusCreator"> ### No Mux block is used as Bus Creator.</entry>
    <entry key="SlReplaceMuxConfigsetChanged"> ### Modified the following Configuration Set variables. Save these to retain changes for future: {0}</entry>
    <entry key="SlReplaceMuxByBusCreator"> ### Mux blocks were replaced by Bus Creators. </entry>
    <entry key="SlReplaceMuxSuccess"> ### Successfully replaced Mux blocks used as Bus Creators. </entry>
    <entry key="SlReplaceMuxSetStrictBusMsg"> ### Configured the ''Mux blocks used to create bus signals'' diagnostic in Configuration parameter dialog, Diagnostic/Connectivity tab to ''error''.</entry>
    <entry key="SlReplaceMuxDifferentInputParams"> \n### The ''Number of inputs'' parameter of the following Mux blocks is different from their number of input ports. The number of input ports will be used for the ''Number of inputs'' parameter of the corresponding Bus Creator blocks:\n</entry>
    <entry key="SlReplaceMuxInputParams"> \nMux block: ''{0}''\n  ''Number of Inputs'' parameter: ''{1}''\n  Number of input ports       : ''{2}''\n</entry>
    <entry key="SlReplaceMuxBadSimulationStatus">Simulation status of this model is ''{0}''. This indicates that the model is being run. Please stop it, and rerun slreplace_mux command.</entry>
    <entry key="SlReplaceMuxUnsavedChanges">The model has unsaved changes. Please save the model and rerun slreplace_mux command.</entry>
    <entry key="SlReplaceMuxSavingAndClosingLibs">### Some of the libraries have been modified. Saving and closing the model and libraries.</entry>
    <entry key="SlReplaceMuxUnableToSave">Was not able to save and close some of the block diagrams. Please save and close the model and libraries.</entry>
    <entry key="SlReplaceMuxUnableToSaveErr">Was not able to save block diagram ''{0}'' due to this error: {1} </entry>
    <entry key="SlReplaceMuxInfo"> ### Number of Mux block instances used as Bus Creators: {0,number,integer} \n### Number of unique Mux blocks used as Bus Creators: {1,number,integer}</entry>
    <entry key="SlReplaceMuxCompilationError">Was not able to compile the model and gather information about Mux blocks due to this error: {0} </entry>
    <entry key="SlReplaceMuxUnableToWireBusCreator">Error occurred when wiring the input and output ports of block ''{0}'' in system ''{1}''. Please connect the block, save this block diagram, close the models and libraries using ''bdclose all'' and rerun the slreplace_mux command.</entry>
    <entry key="ExplicitBusSetupRequiredForSfcnOutput">S-function block ''{0}'' has a bus data type ''{1}'' propagating out of output port {2,number,integer}. For S-function blocks to operate with bus signals, bus data type information must be specified in the mdlInitializeSizes method using the ssSetBusOutputObjectName and ssSetBusOutputAsStruct macros.</entry>
  </message>
</rsccat>

<!-- LocalWords:  virtuality SLbus Hier nonvirtual Subref
-->
