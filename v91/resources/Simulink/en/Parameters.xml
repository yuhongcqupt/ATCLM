<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2009-2016 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="Simulink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../matlab/resources/schema/msgcat.xsd">
  <message>
    <entry key="ASTInvalidExpression">Error occurred while parsing expression.</entry>
    <entry key="ASTModelArgsBeingInlined"><![CDATA[Model arguments can not be used in non-tunable expressions. The expression ''{0}'' in parameter ''{1}'' of ''{2}'' can not be tuned but it refers to variables ({3}). For more information about non-tunable expressions, see <a href="matlab: helpview(fullfile(docroot,''rtw'',''helptargets.map''),''rtw_tunable_expr'')">the documentation</a>.]]></entry>
    <entry key="ASTModelArgsBeingInlinedForSFcn"><![CDATA[Model arguments can not be used in non-tunable expressions. Parameter {0,number,integer} of S-function ''{1}'' can not be tuned but it refers to variables ({2}). For more information about non-tunable expressions, see <a href="matlab: helpview(fullfile(docroot,''rtw'',''helptargets.map''),''rtw_tunable_expr'')">the documentation</a>.]]></entry>
    <entry key="ASTModelArgsInNonTunableParam">Model arguments can not be used in non-tunable expressions. Parameter ''{0}'' of ''{1}'' is non-tunable but refers to variables ({2}).</entry>
    <entry key="ASTModelArgsInTransRTP">Model arguments can not be used in non-tunable expressions. Run-time parameter ''{0}'' of ''{1}'' is not tunable because it is a transformation of one or more dialog parameters but it refers to variables ({2}).</entry>
    <entry key="ASTReadOnlyIfCompiledMaskField">The generated code will inline the numeric value of the expression ''{0}'' (used in parameter ''{1}'' of ''{2}'') because this mask parameter is marked not tunable. The code for this block will not use the tunable variables ({3}).</entry>
    <entry key="ASTTuneWarnAlteredMaskVar">The generated code will inline the numeric value of the expression ''{0}'' (used in parameter ''{1}'' of ''{2}'') because the expression refers to one or more mask variables that are either created or altered by mask initialization commands. The code for this block will not use the tunable variables ({3}).</entry>
    <entry key="ASTTuneWarnArrayReference">The generated code will inline the numeric value of the expression ''{0}'' (used in parameter ''{1}'' of ''{2}'') because the expression is either referencing an element of a variable which is a mask parameter or has two or more dimensions, or is referencing an element of a one-dimensional variable using multiple indices. This expression resolves to tunable variables ({3}).</entry>
    <entry key="ASTTuneWarnDualParameterOperator"><![CDATA[The generated code will inline the numeric value of the expression ''{0}'' (used in parameter ''{1}'' of ''{2}'') because the expression has one or more unsupported operators (see <a href="matlab: helpview(fullfile(docroot,''rtw'',''helptargets.map''),''rtw_tunable_expr'')">the documentation</a>). The code for this block will not use the tunable variables ({3}). A possible cause for this problem is that the expression contains unnecessary spaces between MATLAB functions such as ''pi'' and an operator.]]></entry>
    <entry key="ASTTuneWarnExprWithComplexVars">The generated code will inline the numeric value of the expression ''{0}'' (used in parameter ''{1}'' of ''{2}'') because the expression involves complex operands. The code for this block will not use the tunable variables ({3}).</entry>
    <entry key="ASTTuneWarnExprWithImaginaryNums">The generated code will inline the numeric value of the expression ''{0}'' (used in parameter ''{1}'' of ''{2}'') because the expression contains imaginary numbers. The code for this block will not use the tunable variables ({3}).</entry>
    <entry key="ASTTuneWarnMatrixMultOrDiv">The generated code will inline the numeric value of the expression ''{0}'' (used in parameter ''{1}'' of ''{2}'') because the expression contains a multiplication/division of non-scalar operands. The code for this block will not use the tunable variables ({3}).</entry>
    <entry key="ASTTuneWarnNonDoubleMath">The generated code will inline the numeric value of the expression ''{0}'' (used in parameter ''{1}'' of ''{2}'') because tunable parameters are only supported in double-precision expressions. The code for this block will not use the tunable variables ({3}).</entry>
    <entry key="ASTTuneWarnNonDoubleMathUnlessConstFor">The generated code will inline the numeric value of the expression ''{0}'' (used in parameter ''{1}'' of ''{2}'') because tunable parameters are only supported in double-precision expressions. The code for this block will not use the tunable variables ({3}).</entry>
    <entry key="ASTTuneWarnNonDoubleMathUnlessCGIR">The generated code will inline the numeric value of the expression ''{0}'' (used in parameter ''{1}'' of ''{2}'') because block ''{2}'' only supports double-precision tunable parameter expressions. The code for this block will not use the tunable variables ({3}).</entry>
    <entry key="ASTTuneWarnSfcnNoninlineSfcn">The generated code will inline the numeric value of parameter {0,number,integer} of S-function ''{1}'' because it is a non-inlined S-function. A parameter of a non-inlined S-function can only be tuned if it maps to a single tunable variable. This parameter refers to tunable variables ({2}).</entry>
    <entry key="ASTTuneWarnSfcnNontunableField">Parameter {0,number,integer} of S-function ''{1}'' is specified to be non-tunable but refers to tunable variables ({2}).</entry>
    <entry key="ASTTuneWarnTransTuneRTPIsExpr">The generated code will inline the numeric value of the expression ''{0}'' (used in parameter ''{1}'' of ''{2}'') because this parameter corresponds to a transformed run-time parameter, and is constrained to contain only the name of a tunable variable (and not an expression) in order for it to remain tunable. The code for this block will not use the tunable variables ({3}).</entry>
    <entry key="ASTTuneWarnUnsupportedFunction"><![CDATA[The generated code will inline the numeric value of the expression ''{0}'' (used in parameter ''{1}'' of ''{2}'') because the expression contains one or more unsupported function calls (see <a href="matlab: helpview(fullfile(docroot,''rtw'',''helptargets.map''),''rtw_tunable_expr'')">the documentation</a>). The code for this block will not use the tunable variables ({3}).]]></entry>
    <entry key="ASTTuneWarnUnsupportedOperators"><![CDATA[The generated code will inline the numeric value of the expression ''{0}'' (used in parameter ''{1}'' of ''{2}'') because the expression has one or more unsupported operators (see <a href="matlab: helpview(fullfile(docroot,''rtw'',''helptargets.map''),''rtw_tunable_expr'')">the documentation</a>). The code for this block will not use the tunable variables ({3}).]]></entry>
    <entry key="ASTTuneUnaddressableExprInlineOff">Expression ''{0}'' in parameter ''{1}'' of ''{2}'' is not addressable as required by the parameter because it refers to tunable variables ({3}). These variables will not be preserved in the generated code.</entry>
    <entry key="ASTTuneUnaddressableExprInlineOn">Expression ''{0}'' in parameter ''{1}'' of ''{2}'' is not addressable as required by the parameter because it refers to tunable variables ({3}).</entry>
    <entry key="ASTTuneWarnNontrivialExprInlineOff">Expression ''{0}'' in parameter ''{1}'' of ''{2}'' is not a simple tunable variable name. The tunable variables ({3}) in this expression will not be preserved in the generated code.</entry>  
    <entry key="ASTTuneInconsistentUsageInlineOff">The generated code will inline the numeric value of the expression ''{0}'' (used in parameter ''{1}'' of ''{2}'') because the expression refers to tunable variables ({3}), at least one of which is used in incompatible ways. These variables will not be preserved in the generated code.</entry>
    <entry key="ASTTuneDowncastInlineOff">The generated code will inline the numeric value of the expression ''{0}'' (used in parameter ''{1}'' of ''{2}'') because the expression refers to tunable variables ({3}), at least one of which requires a type cast. This is to avoid downcast and signed/unsigned mismatches of tunable variables, which can lead to inconsistent behavior between simulation and generated code. These variables will not be preserved in the generated code.</entry>
    <entry key="ASTTuneKeywordAsStructField">The generated code will inline the numeric value of the expression ''{0}'' (used in parameter ''{1}'' of ''{2}'') because the expression refers to tunable variables ({3}), at least one of which is a structure with a field name that conflicts with a programming language reserved identifier. These variables will not be preserved in the generated code.</entry>
    <entry key="AST_DuplicateStorageClassDefn">Parameter ''{0}'' is a Simulink parameter object but its storage class is also specified in the model''s parameter configuration dialog. The setting in the dialog is being ignored</entry>
    <entry key="AST_OnlyAutoInMaskWS">The storage class for parameter ''{0}'' (in workspace ''{1}'') is invalid because only ''Auto'' storage class is permitted for parameters in mask workspaces.</entry>
    <entry key="AST_OnlyAutoInModelWS">The storage class for parameter ''{0}'' (in workspace ''{1}'') is ignored because only ''Auto'' storage class is permitted for parameters in the model workspace. Either correct the storage class or move the parameter to the base workspace or a data dictionary.</entry>
    <entry key="ArrayCannotBeCellArrayOfRealInt">This value cannot be used as a cell array of integers.</entry>
    <entry key="BadRTPPoolingWithRTP">Invalid registration of run-time parameter {0,number,integer} (''{1}'') in ''{2}''. The data for this parameter is being pooled with the run-time parameter {3,number,integer} (''{4}'') in ''{5}'' even though the two parameters have different data. This error could possibly have occurred because the data for the run-time parameters was not available at the time when the run-time parameters were registered</entry>
    <entry key="BadRunTimeParamDlgIndices">The number of dialog indices for non-transformed run-time parameter in ''{0}'' must be 1</entry>
    <entry key="BlkParamBusInconsistentElementDType"><![CDATA[The data type of the signal ''{0}'' in the bus is ''{1}'', while the data type of the corresponding field element of the structure parameter ''{2}'' of block ''{3}'' is ''{4}''.\n\nFor tunable structure parameters, the data types of all elements of the parameters must match the corresponding elements of the target bus signal. You can make parameter non-tunable by (1) selecting ''inlined'' from the ''Default parameter behavior:'' dropdown list in the Configuration Parameters > Optimization > Signal and Parameters pane and (2) clicking adjacent ''Configure button'' to ensure the parameter does not appear in global tunable parameter list. Click <a href="matlab:helpview(fullfile(docroot,''fixedpoint'',''fixedpoint.map''), ''parameterTunabilityLoss'')"> here </a> for more information.]]></entry>
    <entry key="BlkParamBusInconsistentElementDims">The dimensions of the signal ''{0}'' in the bus is ''{1}'', while the dimensions of the corresponding field element of the structure parameter ''{2}'' of block ''{3}'' is ''{4}''. Please make them consistent.</entry>
    <entry key="BlkParamBusInconsistentElementSignalType">The complexity of the signal ''{0}'' in the bus is ''{1}'', while the complexity of the corresponding field element of the structure parameter ''{2}'' of block ''{3}'' is ''{4}''. Please make them consistent.</entry>
    <entry key="BlkParamBusInvalidPartialStructureUnknownFields">The following signals ''{0}'' were not found in the bus, however they were specified in the structure parameter ''{1}'' of block ''{2}''. Please remove the extra fields from the structure parameter or add them to the bus signal.</entry>
    <entry key="BlkParamBusInvalidPartialSubStructureAssignment">''{0}'' is a sub-bus signal while the corresponding field in the structure parameter ''{1}'' of block ''{2}'' is a non-struct value. Structures are not supported as bus parameters when non-terminal fields specify scalar/matrix values. Please modify the parameter such that only terminal fields specify scalar/matrix values.</entry>
    <entry key="BlkParamBusStructureCompatibilityMsg">The signal ''{0}'' is incompatible with the parameter ''{1}'' of block ''{2}'':\n{3}</entry>
    <entry key="InvStructTypeCastMsg">Invalid struct type conversion</entry>
    <entry key="InvStructCastDimMismatch">The field ''{0}'' in the struct type ''{1}'' has {2,number,integer} dimensions but its counterpart in the bus type ''{3}'' has {4,number,integer} dimensions. Please adjust the 'Dimension' property of the corresponding bus element for generating proper type conversion codes.</entry>
    <entry key="BlkParamStructSpecifiedForArrayOfSubBuses">Parameter ''{0}'' in block ''{1}'' specifies a MATLAB structure as the parameter value. Structure parameters are not supported for bus-capable blocks when the input bus signal contains an array of sub-buses. Please use 0 as the value of the parameter for this block.</entry>
    <entry key="BlkParamPartialStructSpecifiedForArrayOfBuses">Parameter ''{0}'' in block ''{1}'' specifies a partial MATLAB structure as the parameter value. Partially specified structure parameters are not supported for bus-capable blocks when the input bus signal is an array of buses or contains an array of sub-buses. Please use 0 as the value of the parameter if the input bus signal contains an array of sub-buses; otherwise, consider using a fully specified MATLAB structure as the value of the parameter.</entry>
    <entry key="BlkParamNonZeroParamSpecifiedForArrayOfBuses">Parameter ''{0}'' in block ''{1}'' specifies a non-zero value as the parameter value. Non-zero values are not supported for bus-capable blocks when the input bus signal is an array of buses or contains an array of sub-buses. Please use 0 as the value of the parameter if the input bus signal contains an array of sub-buses; otherwise, consider using a fully specified MATLAB structure as the value of the parameter.</entry>
    <entry key="BlkParamEvalErr">Expression ''{0}'' for parameter ''{1}'' in ''{2}'' cannot be evaluated.</entry>
    <entry key="BlkParamInvalidIdentifier">The name ''{0}'' specified for a parameter of block ''{1}'' is not a valid identifier. Valid identifiers start with an alphabetic or ''_'' character, followed by alpha numeric or ''_'' characters. Identifiers starting with ''rt'' are reserved, but can be allowed by opening the Configuration Parameters dialog and setting the ''rt prefix for identifiers'' setting to ''warning'' or ''none''</entry>
    <entry key="BlkParamInvalidStructValueSpecified">The value specified for the parameter ''{0}'' of block ''{1}'' is not a finite numeric MATLAB structure. Structure parameter values are supported on bus-capable blocks only when they are finite and numeric.</entry>
    <entry key="BlkParamNotCellArrayOfRealInt">Error in ''{0}''. Parameter ''{1}'' containing expression "{2}" is invalid. The parameter must evaluate to a cell array whose elements are real integer values</entry>
    <entry key="BlkParamNotRealInt">Error in ''{0}''. Parameter ''{1}'' containing expression "{2}" is invalid. The parameter must evaluate to real integer values</entry>
    <entry key="BlkParamNotScalarInt">Error in ''{0}''. Parameter ''{1}'' containing expression "{2}" is invalid. The parameter must evaluate to a real scalar integer value</entry>
    <entry key="BlkParamStructOnBlockWithDirectMask">Structure parameters are not supported for bus-capable blocks that have direct masks and are associated with virtual bus signals. Block ''{0}'' specifies one or more structure parameters, has a direct mask and is associated with a virtual bus signal</entry>
    <entry key="BlkParamStructOnBlockWithFrameElements">Structure parameters are not supported for bus-capable blocks that have bus signals with frame-based elements. Block ''{0}'' specifies one or more structure parameters and is associated with a bus containing one or more frame-based elements</entry>
    <entry key="BlkParamStructSpecifiedForNonBus">The signal ''{0}'' is not a bus while the value specified for the parameter ''{1}'' of block ''{2}'' is a MATLAB structure. Please modify them to have a consistent hierarchy.</entry>
    <entry key="BlkParamStructSpecifiedForNonBusInBlockWithDTA">The data type specified for the block ''{0}'' is ''{1}'' and the value specified for the parameter ''{2}'' of the block is a MATLAB structure. MATLAB structures are supported only when bus types are explicitly specified. Set the data type explicitly to a matching bus object or specify an expression which resolves to a bus object.</entry>
    <entry key="BlkParamStructSpecifiedForNonBusInBlockWithDTAExtended">The data type specified for the block ''{0}'' is ''{1}'' and the value specified for the parameter ''{2}'' of the block is a MATLAB structure. MATLAB structures are supported either when bus types are explicitly specified or when 'Inherit: Inherit from 'Constant value' ' is selected. Set the data type to a matching bus object (specify a bus object explicitly or specify an expression that resolves to a bus object), or select 'Inherit: Inherit from 'Constant value' '.</entry>
    <entry key="BlkParamBusSupportIsUnavailable"><![CDATA[ The output data type of the block ''{0}'' is a bus type. This block supports bus types only when strict bus modeling is ON. To enable this diagnostic, set the ''Mux blocks used to create bus signals'' option to ''error'' in Configuration Parameters Dialog -> Diagnostics -> Connectivity pane.]]></entry>
    <entry key="BlkParamStructMismatch">The constant block ''{0}'' specifies a bus ''{1}'' as its data type and a MATLAB structure with a different signature for the parameter ''{2}'' of this block. The name, hierarchy and attributes of the fields in the MATLAB structure should exactly match the name, hierarchy and signal attributes of the elements in the bus object. Use ''Simulink.Bus.createMATLABStruct'' to create a MATLAB structure from a bus object or use ''Simulink.Bus.createObject'' to create bus object(s) from a MATLAB structure.\n\nThe inconsistencies between the bus object and the structure parameter are as follows: \n(1) Elements present in the bus that are missing from the parameter: \n{3}\n(2) Fields present in the parameter that are missing from the bus: \n{4}\n(3) Fields and Elements that are out of order or have different positions: \n{5}</entry>
    <entry key="BlkParamNonZeroScalar">The constant block ''{0}'' specifies a bus ''{1}'' as its data type and a non-zero value for the parameter ''{2}'' of this block. The supported values are zero or a MATLAB structure with the same name, hierarchy and attributes as that of the bus object. Use Simulink.Bus.createMATLABStruct to create a MATLAB structure from a bus object.</entry>
    <entry key="BlkParamStructSpecifiedWhenBusParamFeatureIsUnavailable"><![CDATA[The value specified for the parameter ''{0}'' of block ''{1}'' is a MATLAB structure. Structure parameter values are supported on bus-capable blocks only when the following diagnostics are enabled:\n 1. Strict bus modeling: To enable this diagnostic, set <sldiag objui="configset" objparam="StrictBusMsg">Mux blocks used to create bus signals</sldiag> to ''error''.\n 2. Underspecified initialization detection: To enable this diagnostic, set <sldiag objui="configset" objparam="UnderspecifiedInitializationDetection">Underspecified initialization detection</sldiag> to ''Simplified'']]></entry>
    <entry key="BlkParamUndefined"><![CDATA[Error evaluating parameter <sldiag objui="blockdlg" objparam="{0}"></sldiag> in ''{1}'']]></entry>
    <entry key="BlkParamVarUnresolved">Cannot resolve variable ''{0}''</entry>
    <entry key="BooleanExprEmpty" note="stringDatatypeUpdate">A non-empty Boolean expression is expected.</entry>
    <entry key="CannotChangeWithMaskInit">Mask variable ''{0}'' of ''{1}'' was not changed by the mask initialization commands at the time of compilation but it is being changed by the mask initialization commands now.  This is not allowed when in-lined parameters is on</entry>
    <entry key="CannotTransformLegacySymbol">It is not allowed to change the datatype of legacy symbol {0} used by block {1}. Please change your block settings.</entry>
    <entry key="CannotUpdateConstRTP">Cannot modify value of run-time parameter {0,number,integer} (''{1}'') of ''{2}'' when the simulation is running. This run-time parameter was registered as having const data and can be initialized once at the start of simulation</entry>
    <entry key="CannotModifyPrmObjectInCompilation">The value of parameter object ''{0}'' was changed during the compilation (possibly by mask initialization commands). This is not allowed.</entry>
    <entry key="ConstRTPClash">Variable ''{0}'' is used in conflicting fashions in run-time parameters of: ''{1}''. One of the run-time parameters is specifying that the variable should be declared to be const, while another is specifying that the variable should be non-const</entry>
    <entry key="CustomSCUsedInNonERTTargetedBD">Ignoring custom storage classes specified by Simulink data objects because the current target ''{0}'' is not an ERT-based target</entry>
    <entry key="DWorkDesignMaxIsOutOfDTRange">Inconsistent numeric values for DWork ''{0}'' in ''{1}'': Maximum ({2}) is out of data type range [{3}, {4}]</entry>
    <entry key="DWorkDesignMinIsOutOfDTRange">Inconsistent numeric values for DWork ''{0}'' in ''{1}'': Minimum ({2}) is out of data type range [{3}, {4}]</entry>
    <entry key="DWorkImValueGreaterThanDesignMax">Inconsistent numeric values for DWork {0,number,integer} of ''{1}'': The imaginary part of DWork value ({2}) at {3} time step {4} is greater than maximum ({5})</entry>
    <entry key="DWorkImValueLessThanDesignMin">Inconsistent numeric values for DWork {0,number,integer} of ''{1}'': The imaginary part of DWork value ({2}) at {3} time step {4} is less than minimum ({5})</entry>
    <entry key="DWorkNotSupportDesignMinMax">Cannot specify minimum and maximum for DWork ''{0}'' in ''{1}'': Minimum and maximum are not supported for data type ''{2}''</entry>
    <entry key="DWorkReValueGreaterThanDesignMax">Inconsistent numeric values for DWork {0,number,integer} of ''{1}'': The real part of DWork value ({2}) at {3} time step {4} is greater than maximum ({5})</entry>
    <entry key="DWorkReValueLessThanDesignMin">Inconsistent numeric values for DWork {0,number,integer} of ''{1}'': The real part of DWork value ({2}) at {3} time step {4} is less than minimum ({5})</entry>
    <entry key="DWorkValueGreaterThanDesignMax">Inconsistent numeric values for DWork {0,number,integer} of ''{1}'': DWork value ({2}) at {3} time step {4} is greater than maximum ({5})</entry>
    <entry key="DWorkValueLessThanDesignMin">Inconsistent numeric values for DWork {0,number,integer} of ''{1}'': DWork value ({2}) at {3} time step {4} is less than minimum ({5})</entry>
    <entry key="DWorkArrayImValueGreaterThanDesignMax">Inconsistent numeric values for DWork {0,number,integer} of ''{1}'': The imaginary part of DWork value ({2}) at {3} time step {4} is greater than maximum ({5}). This occurs for element {6}.</entry>
    <entry key="DWorkArrayImValueLessThanDesignMin">Inconsistent numeric values for DWork {0,number,integer} of ''{1}'': The imaginary part of DWork value ({2}) at {3} time step {4} is less than minimum ({5}). This occurs for element {6}.</entry>   
    <entry key="DWorkArrayReValueGreaterThanDesignMax">Inconsistent numeric values for DWork {0,number,integer} of ''{1}'': The real part of DWork value ({2}) at {3} time step {4} is greater than maximum ({5}). This occurs for element {6}.</entry>
    <entry key="DWorkArrayReValueLessThanDesignMin">Inconsistent numeric values for DWork {0,number,integer} of ''{1}'': The real part of DWork value ({2}) at {3} time step {4} is less than minimum ({5}). This occurs for element {6}.</entry>
    <entry key="DWorkArrayValueGreaterThanDesignMax">Inconsistent numeric values for DWork {0,number,integer} of ''{1}'': DWork value ({2}) at {3} time step {4} is greater than maximum ({5}). This occurs for element {6}.</entry>
    <entry key="DWorkArrayValueLessThanDesignMin">Inconsistent numeric values for DWork {0,number,integer} of ''{1}'': DWork value ({2}) at {3} time step {4} is less than minimum ({5}). This occurs for element {6}.</entry>
    <entry key="DataStoreDesignMaxInconsistent">Maximum ({0}) from ''{1}'' is not equal to maximum ({2}) from signal object ''{3}''</entry>
    <entry key="DataStoreDesignMaxLessThanMin">Maximum ({0}) from ''{1}'' is less than minimum ({2}) from signal object ''{3}''</entry>
    <entry key="DataStoreDesignMinGreaterThanMax">Minimum ({0}) from ''{1}'' is greater than maximum ({2}) from signal object ''{3}''</entry>
    <entry key="DataStoreDesignMinInconsistent">Minimum ({0}) from ''{1}'' is not equal to minimum ({2}) from signal object ''{3}''</entry>
    <entry key="DataStoreImValueGreaterThanMax">Inconsistent numeric values for ''{0}'': The imaginary part of value ({1}) set by ''{2}'' at {3} time step {4} is greater than maximum ({5})</entry>
    <entry key="DataStoreImValueLessThanMin">Inconsistent numeric values for ''{0}'': The imaginary part of value ({1}) set by ''{2}'' at {3} time step {4} is less than minimum ({5})</entry>
    <entry key="DataStoreNotSupportDesignMinMax">''{0}'' cannot specify minimum and maximum for data type ''{1}'': Minimum and maximum are not supported for data types</entry>
    <entry key="DataStoreReValueGreaterThanMax">Inconsistent numeric values for ''{0}'': The real part of value ({1}) set by ''{2}'' at {3} time step {4} is greater than maximum ({5})</entry>
    <entry key="DataStoreReValueLessThanMin">Inconsistent numeric values for ''{0}'': The real part of value ({1}) set by ''{2}'' at {3} time step {4} is less than minimum ({5})</entry>
    <entry key="DataStoreValueGreaterThanMax">Inconsistent numeric values for ''{0}'': The value ({1}) set by ''{2}'' at {3} time step {4} is greater than maximum ({5})</entry>
    <entry key="DataStoreValueLessThanMin">Inconsistent numeric values for ''{0}'': The value ({1}) set by ''{2}'' at {3} time step {4} is less than minimum ({5})</entry>
    <entry key="ErrorInParser">Syntax error: ''{0}''</entry>
    <entry key="ExprValNotBoolean">Expression ''{0}'' was expected to evaluate to a logical value</entry>
    <entry key="InfParamUnSup">The parameter ''{0}'' used by ''{1}'' has a non finite value. $PRODUCT$ does not support non finite values.</entry>    
    <entry key="ICValueLessThanPropagatedDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': Parameter value ({2}) is less than minimum ({3}) from ''{4}''</entry>  
    <entry key="ICImValueLessThanPropagatedDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The imaginary part of parameter value ({2}) is less than minimum ({3}) from ''{4}''</entry>
    <entry key="ICReValueLessThanPropagatedDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The real part of parameter value ({2}) is less than minimum ({3}) from ''{4}''</entry>
    <entry key="ICValueGreaterThanPropagatedDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': Parameter value ({2}) is greater than maximum ({3}) from ''{4}''</entry>
    <entry key="ICImValueGreaterThanPropagatedDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The imaginary part of parameter value ({2}) is greater than maximum ({3}) from ''{4}''</entry>   
    <entry key="ICReValueGreaterThanPropagatedDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The real part of parameter value ({2}) is greater than maximum ({3}) from ''{4}''</entry>
   
    <entry key="ICArrayValueLessThanPropagatedDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': Parameter value ({2}) is less than minimum ({3}) from ''{4}''. This occurs for element {5}.</entry>
    <entry key="ICArrayImValueLessThanPropagatedDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The imaginary part of parameter value ({2}) is less than minimum ({3}) from ''{4}''. This occurs for element {5}.</entry>
    <entry key="ICArrayReValueLessThanPropagatedDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The real part of parameter value ({2}) is less than minimum ({3}) from ''{4}''. This occurs for element {5}.</entry>
    <entry key="ICArrayValueGreaterThanPropagatedDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': Parameter value ({2}) is greater than maximum ({3}) from ''{4}''. This occurs for element {5}.</entry>    
    <entry key="ICArrayImValueGreaterThanPropagatedDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The imaginary part of parameter value ({2}) is greater than maximum ({3}) from ''{4}''. This occurs for element {5}.</entry>   
    <entry key="ICArrayReValueGreaterThanPropagatedDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The real part of parameter value ({2}) is greater than maximum ({3}) from ''{4}''. This occurs for element {5}.</entry>
    <entry key="ICQuantizedValueLessThanPropagatedDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': Quantized parameter value ({2}) is less than minimum ({3}) from ''{4}''</entry>  
    <entry key="ICQuantizedImValueLessThanPropagatedDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The imaginary part of quantized parameter value ({2}) is less than minimum ({3}) from ''{4}''</entry>
    <entry key="ICQuantizedReValueLessThanPropagatedDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The real part of quantized parameter value ({2}) is less than minimum ({3}) from ''{4}''</entry>
    <entry key="ICQuantizedValueGreaterThanPropagatedDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': Quantized parameter value ({2}) is greater than maximum ({3}) from ''{4}''</entry>
    <entry key="ICQuantizedImValueGreaterThanPropagatedDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The imaginary part of quantized parameter value ({2}) is greater than maximum ({3}) from ''{4}''</entry>   
    <entry key="ICQuantizedReValueGreaterThanPropagatedDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The real part of quantized parameter value ({2}) is greater than maximum ({3}) from ''{4}''</entry>
    
    <entry key="ICQuantizedArrayValueLessThanPropagatedDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': Quantized parameter value ({2}) is less than minimum ({3}) from ''{4}''. This occurs for element {5}.</entry>
    <entry key="ICQuantizedArrayImValueLessThanPropagatedDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The imaginary part of quantized parameter value ({2}) is less than minimum ({3}) from ''{4}''. This occurs for element {5}.</entry>
    <entry key="ICQuantizedArrayReValueLessThanPropagatedDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The real part of quantized parameter value ({2}) is less than minimum ({3}) from ''{4}''. This occurs for element {5}.</entry>
    <entry key="ICQuantizedArrayValueGreaterThanPropagatedDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': Quantized parameter value ({2}) is greater than maximum ({3}) from ''{4}''. This occurs for element {5}.</entry>    
    <entry key="ICQuantizedArrayImValueGreaterThanPropagatedDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The imaginary part of quantized parameter value ({2}) is greater than maximum ({3}) from ''{4}''. This occurs for element {5}.</entry>   
    <entry key="ICQuantizedArrayReValueGreaterThanPropagatedDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The real part of quantized parameter value ({2}) is greater than maximum ({3}) from ''{4}''. This occurs for element {5}.</entry>
    <entry key="IncnstParamSettings">The settings in ''{0}'' for parameters ''{1}'' and ''{2}'' are not consistent</entry>
    <entry key="InvDialogParamDim">Matrix dimension for parameter(s) in {0} are inconsistent or empty</entry>
    <entry key="InvParamBusDimension">Invalid setting in ''{0}'' for parameter ''{1}''. The parameter allows only fixed dimension bus type but ''{2}'' is a variable dimension type</entry>
    <entry key="InvParamSetting">Invalid setting in ''{0}'' for parameter ''{1}''.</entry>
    <entry key="LUTObjectInIncorrectBlock">Invalid setting in ''{0}'' for parameter ''{1}''. Use a Simulink.LookupTable either in a n-D Lookup Table block or an Interpolation Using Prelookup block.</entry>
    <entry key="LUTObjectInIncorrectParam">Invalid setting in ''{0}'' for parameter ''{1}''. To use a Simulink.LookupTable, select the "Lookup Table Object" option in ''{2}'' drop-down list in ''{0}''.</entry>
    <entry key="BPObjectInIncorrectBlock">Invalid setting in ''{0}'' for parameter ''{1}''. Use a Simulink.Breakpoint in a Prelookup block.</entry>
    <entry key="BPObjectInIncorrectParam">Invalid setting in ''{0}'' for parameter ''{1}''. To specify a Simulink.Breakpoint, select the "Breakpoint Object" option in ''{2}'' drop-down list in ''{0}''.</entry>
    <entry key="SqrtInvParamSetting">Invalid setting in ''{0}'' for parameter ''{1}'', Only the first five options are supported</entry>
    <entry key="InvParamDatatype">Invalid data type in ''{0}'' for parameter ''{1}''. The parameter allows only built-in types</entry>
    <entry key="InvParamDimensionSize">Parameter ''{0}'' in ''{1}'' has invalid dimensions of size {2,number,integer}. Simulink only supports parameter values with dimension size up to {3,number,integer}.</entry>
    <entry key="InvRTParamComplexityChange">Cannot change the complexity of run-time parameter ''{0}'' in ''{1}'' from ''{2}'' to ''{3}'' while model is executing</entry>
    <entry key="InvRTParamDTypeChange">Cannot change the data type of run-time parameter ''{0}'' in ''{1}'' from ''{2}'' to ''{3}'' while model is executing</entry>
    <entry key="InvRTParamDimChange">Cannot change the dimensions of run-time parameter ''{0}'' in ''{1}'' from {2} to {3} while model is executing</entry>
    <entry key="InvRTParamDlgMapChange">Cannot change the dialog indices mapping for run-time parameter ''{0}'' in ''{1}'' while model is executing</entry>
    <entry key="InvRTParamNameChange">Cannot change the name of run-time parameter in ''{0}'' from ''{1}'' to ''{2}'' while model is executing</entry>
    <entry key="InvRTParamTransformChange">Cannot change the transformed property of run-time parameter ''{0}'' in ''{1}'' while model is executing</entry>
    <entry key="InvTunableVarsBdParam">Block diagram ''{0}'' parameter "TunableVars" must be a comma separated list  of MATLAB variable names with no duplicate entries</entry>
    <entry key="InvTunableVarsList">Block diagram ''{0}'' parameter lists "TunableVars", "TunableVarsStorageClass", and "TunableVarsTypeQualifier" must be of same length</entry>
    <entry key="InvTunableVarsStorageClassBdParam">Block diagram ''{0}'' parameter "TunableVarsStorageClass" must be a comma  separated list of Auto, ExportedGlobal, ImportedExtern, or ImportedExternPointer</entry>
    <entry key="InvalidBusParamForBusWithFrameElements">Cannot create a MATLAB structure for Bus Object ''{0}''. Simulink.Bus.createMATLABStruct does not support bus objects that directly or indirectly contain Frame-based elements.</entry>
    <entry key="InvalidBusParamForBusWithVarDimsElements">Simulink.Bus.createMATLABStruct is not supported for use with bus objects or bus signals having variable size elements</entry>
    <entry key="InvalidBusParamForBusWithAoB">Simulink.Bus.createMATLABStruct is not supported for use with bus signals containing an array of sub-buses</entry>
    <entry key="InvParamSettingForDiscreteIntegrator">Invalid setting in ''{0}'' for parameter ''{1}''. The setting "Compatibility" is present for compatibility purposes only. See documentation for more details.</entry>
    <entry key="LegacySymbolUsedInExpressions">Legacy symbol ''{0}'' cannot by used in an expression in block ''{1}''. Please change your block settings.</entry>
    <entry key="NoChangeWhileRunning">Cannot change parameter ''{0} ({1})'' of ''{2}'' while simulation is running</entry>
    <entry key="NoPortPrmChangeWhileRunning">Cannot change parameter ''{0}'' on port {1,number,integer} of ''{2}'' while simulation is running</entry>
    <entry key="NoChangeWhenInFastRestart">Cannot change parameter ''{0} ({1})'' of ''{2}'' when initialized in Fast Restart</entry>
    <entry key="NoPortPrmChangeWhenInFastRestart">Cannot change parameter ''{0}'' on port {1,number,integer} of ''{2}'' when initialized in Fast Restart</entry>
    <entry key="NoDialogParam">Parameter ''{0}'' in ''{1}'' has not been set</entry>
    <entry key="NonAutoParamRefByNonInlinedSFcn">Non-inlined S-functions do not support parameters with storage class other than ''Auto'' for code generation. Parameter number {0,number,integer} (''{1}'') in the non-inlined S-function ''{2}'' has a storage class of ''{3}''</entry>
    <entry key="NonAutoParamsUsedInNonInlinedBD">Ignoring storage classes specified by Simulink parameter objects because the ''Inline parameters'' Configuration Parameters setting is disabled</entry>
    <entry key="NonNumericParamInTunableParamTable">Ignoring the tunability of parameter ''{0}'' from the tunable parameters table, because it is not a numeric variable nor a scalar structure containing numeric values.</entry>
    <entry key="OutAsMatrixClashingUses">Variable ''{0}'' is used in conflicting fashions in run-time parameters of: ''{1}''. One of the run-time parameters is specifying that the variable should be output as a matrix, while another is specifying that the variable should be output as a vector</entry>    
    <entry key="OutputValueLessThanPropagatedDesignMin"><![CDATA[Inconsistent numeric values for port {0,number,integer} of ''{1}'': Output value ({2}) at {3} time step {4} is less than minimum ({5}) from ''{6}''<actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>
    <entry key="OutputImValueLessThanPropagatedDesignMin"><![CDATA[Inconsistent numeric values for port {0,number,integer} of ''{1}'': The imaginary part of output value ({2}) at {3} time step {4} is less than minimum ({5}) from ''{6}''<actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>
    <entry key="OutputReValueLessThanPropagatedDesignMin"><![CDATA[Inconsistent numeric values for port {0,number,integer} of ''{1}'': The real part of output value ({2}) at {3} time step {4} is less than minimum ({5}) from ''{6}''<actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>    
    <entry key="OutputValueGreaterThanPropagatedDesignMax"><![CDATA[Inconsistent numeric values for port {0,number,integer} of ''{1}'': Output value ({2}) at {3} time step {4} is greater than maximum ({5}) from ''{6}''<actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>    
    <entry key="OutputImValueGreaterThanPropagatedDesignMax"><![CDATA[Inconsistent numeric values for port {0,number,integer} of ''{1}'': The imaginary part of output value ({2}) at {3} time step {4} is greater than maximum ({5}) from ''{6}''<actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>   
    <entry key="OutputReValueGreaterThanPropagatedDesignMax"><![CDATA[Inconsistent numeric values for port {0,number,integer} of ''{1}'': The real part of output value ({2}) at {3} time step {4} is greater than maximum ({5}) from ''{6}''<actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>   
    <entry key="OutputArrayValueLessThanPropagatedDesignMin"><![CDATA[Inconsistent numeric values for port {0,number,integer} of ''{1}'': Output value ({2}) at {3} time step {4} is less than minimum ({5}) from ''{6}''. This occurs for element {7}.<actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>
    <entry key="OutputArrayImValueLessThanPropagatedDesignMin"><![CDATA[Inconsistent numeric values for port {0,number,integer} of ''{1}'': The imaginary part of output value ({2}) at {3} time step {4} is less than minimum ({5}) from ''{6}''. This occurs for element {7}.<actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>
    <entry key="OutputArrayReValueLessThanPropagatedDesignMin"><![CDATA[Inconsistent numeric values for port {0,number,integer} of ''{1}'': The real part of output value ({2}) at {3} time step {4} is less than minimum ({5}) from ''{6}''. This occurs for element {7}.<actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>
    <entry key="OutputArrayValueGreaterThanPropagatedDesignMax"><![CDATA[Inconsistent numeric values for port {0,number,integer} of ''{1}'': Output value ({2}) at {3} time step {4} is greater than maximum ({5}) from ''{6}''. This occurs for element {7}.<actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>
    <entry key="OutputArrayImValueGreaterThanPropagatedDesignMax"><![CDATA[Inconsistent numeric values for port {0,number,integer} of ''{1}'': The imaginary part of output value ({2}) at {3} time step {4} is greater than maximum ({5}) from ''{6}''. This occurs for element {7}.<actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>     
    <entry key="OutputArrayReValueGreaterThanPropagatedDesignMax"><![CDATA[Inconsistent numeric values for port {0,number,integer} of ''{1}'': The real part of output value ({2}) at {3} time step {4} is greater than maximum ({5}) from ''{6}''. This occurs for element {7}.<actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>    
    <entry key="PortDesignMaxPropagationIsOutOfDTRange">Inconsistent numeric values for port {0,number,integer} in ''{1}'': Maximum ({2}) is out of data type range [{3}, {4}]</entry>
    <entry key="PortDesignMinPropagationGreaterThanDesignMax">Inconsistent numeric values for port {0,number,integer} in ''{1}'': Minimum ({2}) from ''{3}'' is greater than maximum ({4}) from ''{5}''</entry>
    <entry key="PortDesignMinPropagationIsOutOfDTRange">Inconsistent numeric values for port {0,number,integer} in ''{1}'': Minimum ({2}) is out of data type range [{3}, {4}]</entry>
    <entry key="PortParamEvalErr">Error evaluating parameter ''{0}'' in ''{1}'', output port {2,number,integer} (signal name: ''{3}''). MATLAB error message:\n{4}</entry>
    <entry key="PortParamNotDefined">Error evaluating parameter ''{0}'' in ''{1}'', output port {2,number,integer} (signal name: ''{3}''). {4}</entry>
    <entry key="PortSignalNotSupportDesignMinMax">''{0}'' cannot specify minimum and maximum for port {1,number,integer} with data type ''{2}'': Minimum and maximum are not supported for data types</entry>
    <entry key="PrmCollapsedArrayOfStructs">The generated code will inline the numeric value of the expression ''{0}'' (used in parameter ''{1}'' of ''{2}''). Involved variables({3}) will not be preserved in the generated code.</entry>
    <entry key="PrmInvalidArrayOfStructs">A valid array of structures must be numeric and homogeneous in terms of data type and dimensions</entry>
    <entry key="PrmEmptyStructNotSupported">Empty structures are not supported.</entry>
    <entry key="PrmArrayOfStructsNullNode">Leaf element at ''({0,number,integer}).{1}''  is null or empty.</entry>
    <entry key="PrmArrayOfStructsInvalidNode">Leaf element at ''({0,number,integer}).{1}'' is not valid/consistent. </entry>
    <entry key="PrmArrayOfStructsDTypeMismatch">Data types between leaf elements ''({0,number,integer}).{1}'' and ''({2,number,integer}).{3}'' do not match</entry>
    <entry key="PrmDesignMaxIsOutOfDTRange">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': Maximum ({2}) is out of data type range [{3}, {4}]</entry>
    <entry key="PrmDesignMinGreaterThanDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': Minimum ({2}) is greater than maximum ({3})</entry>
    <entry key="PrmDesignMinIsOutOfDTRange">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': Minimum ({2}) is out of data type range [{3}, {4}].</entry>
    <entry key="PrmDesignMinMaxShouldBeDoubleScalar">Parameter ''{0}'' for ''{1}'' must be a double scalar value</entry>
    <entry key="PrmDesignMinMaxShouldBeFiniteRealDoubleScalar">Parameter ''{0}'' for ''{1}'' must be a finite real double scalar value</entry>
    <entry key="PrmNotSupportDesignMinMax">Cannot specify minimum and maximum for parameter ''{0}'' in ''{1}'': Minimum and maximum are not supported for data type ''{2}''</entry>
    <entry key="PrmSetByDataObjChangeDisallowed">Cannot change parameter ''{0}'' in ''{1}''.  This parameter is taking its value from a data object.  Changes are only allowed from the data object</entry>
    <entry key="PrmValueLessThanDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': Parameter value ({2}) is less than minimum ({3})</entry>
    <entry key="PrmImValueLessThanDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The imaginary part of parameter value ({2}) is less than minimum ({3})</entry>
    <entry key="PrmReValueLessThanDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The real part of parameter value ({2}) is less than minimum ({3})</entry>
    <entry key="PrmValueGreaterThanDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': Parameter value ({2}) is greater than maximum ({3})</entry>
    <entry key="PrmImValueGreaterThanDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The imaginary part of parameter value ({2}) is greater than maximum ({3})</entry>    
    <entry key="PrmReValueGreaterThanDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The real part of parameter value ({2}) is greater than maximum ({3})</entry>
    <entry key="PrmArrayValueLessThanDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': Parameter value ({2}) is less than minimum ({3}). This occurs for element {4}.</entry>
    <entry key="PrmArrayImValueLessThanDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The imaginary part of parameter value ({2}) is less than minimum ({3}). This occurs for element {4}.</entry>  
    <entry key="PrmArrayReValueLessThanDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The real part of parameter value ({2}) is less than minimum ({3}). This occurs for element {4}.</entry>        
    <entry key="PrmArrayValueGreaterThanDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': Parameter value ({2}) is greater than maximum ({3}). This occurs for element {4}.</entry>
    <entry key="PrmArrayImValueGreaterThanDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The imaginary part of parameter value ({2})is greater than maximum ({3}). This occurs for element {4}.</entry>    
    <entry key="PrmArrayReValueGreaterThanDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The real part of parameter value ({2}) is greater than maximum ({3}). This occurs for element {4}.</entry>        
    <entry key="PrmQuantizedValueLessThanDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': Quantized parameter value ({2}) is less than minimum ({3})</entry>
    <entry key="PrmQuantizedImValueLessThanDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The imaginary part of quantized parameter value ({2}) is less than minimum ({3})</entry>
    <entry key="PrmQuantizedReValueLessThanDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The real part of quantized parameter value ({2}) is less than minimum ({3})</entry>
    <entry key="PrmQuantizedValueGreaterThanDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': Quantized parameter value ({2}) is greater than maximum ({3})</entry>
    <entry key="PrmQuantizedImValueGreaterThanDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The imaginary part of quantized parameter value ({2}) is greater than maximum ({3})</entry>    
    <entry key="PrmQuantizedReValueGreaterThanDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The real part of quantized parameter value ({2}) is greater than maximum ({3})</entry>
    <entry key="PrmQuantizedArrayValueLessThanDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': Quantized parameter value ({2}) is less than minimum ({3}). This occurs for element {4}.</entry>
    <entry key="PrmQuantizedArrayImValueLessThanDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The imaginary part of quantized parameter value ({2}) is less than minimum ({3}). This occurs for element {4}.</entry>  
    <entry key="PrmQuantizedArrayReValueLessThanDesignMin">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The real part of quantized parameter value ({2}) is less than minimum ({3}). This occurs for element {4}.</entry>        
    <entry key="PrmQuantizedArrayValueGreaterThanDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': Quantized parameter value ({2}) is greater than maximum ({3}). This occurs for element {4}.</entry>
    <entry key="PrmQuantizedArrayImValueGreaterThanDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The imaginary part of quantized parameter value ({2})is greater than maximum ({3}). This occurs for element {4}.</entry>    
    <entry key="PrmQuantizedArrayReValueGreaterThanDesignMax">Inconsistent numeric values for parameter ''{0}'' in ''{1}'': The real part of quantized parameter value ({2}) is greater than maximum ({3}). This occurs for element {4}.</entry>   
    <entry key="RTPInvalidDtype">Invalid run-time parameter registered by ''{0}''. All run-time parameters must resolve to a standard Simulink data type or be a scalar of value zero</entry>
    <entry key="RTPInvalidFixptDtype">Fixed-point run-time parameter registered by ''{0}'' is not supported for code generation.  For normal simulation, fixed-point parameters with word lengths of up to 128 bits are supported. For code generation including simulation with the Accelerator, fixed-point parameters are limited to word lengths of 32 bits or less</entry>
    <entry key="SameNameWSParams">Conflicting definitions for tunable variable ''{0}'' in block diagram ''{1}''. This tunable variable is defined multiple times in the following workspace contexts: {2}</entry>
    <entry key="SameNameWSParams_WithBaseWks">Conflicting definitions for tunable variable ''{0}'' in block diagram ''{1}''. This tunable variable is defined multiple times in the following workspace contexts: base workspace, {2}</entry>   
    <entry key="SetEnumValByInteger">Specifying an enumerated value by its corresponding integer value is being phased out.  This property still accepts the integer form in this MATLAB version, but will issue an error if set to an integer in a future version. Please change all occurrences of ''{0,number,integer}'' to ''{1}'' at your earliest convenience</entry>
    <entry key="SignalNamesIsNotValidMatlabVariableName">Signal names in the bus are used as field names when constructing the MATLAB structure. These names should be valid MATLAB identifiers (see the 'isvarname' function documentation). Rename the following signal names in the bus (full path is also shown) so they are valid MATLAB identifier names:\n{0}</entry> 
<entry key="SolverToleranceInvalidSetting"> Simulink detected one or more
  incorrect settings for the tolerance parameters for block ''{0}''. </entry>
<entry key="SolverToleranceRunTimeChangeNumericToAuto"> The tolerance parameter
  ''{0}'' cannot be changed to ''auto'' or -1 while the simulation is running
  because the parameter is set to a numeric value. You can only change this parameter 
  to another positive numeric value having the same width.
</entry> 
<entry key="SolverToleranceRunTimeChangeWhenAuto"> The tolerance parameter
  ''{0}'' cannot be changed while the simulation is running because the parameter is set
  to ''auto'' or -1. If you need to change this parameter during simulation,
  you must set it to a positive scalar or vector at the beginning of
  simulation. </entry>
<entry key="SolverToleranceGlobalRunTimeChangeNumericToAuto"> The tolerance
parameter ''{0}'' for model ''{1}'' cannot be changed to ''auto'' while the
simulation is running because the parameter is set to a numeric value. You can
only change this parameter to another positive finite numeric value.
</entry> 
<entry key="SolverToleranceGlobalRunTimeChangeWhenAuto"> The tolerance parameter
''{0}'' for model ''{1}'' cannot be changed while the simulation is running
because the parameter is set to ''auto''. If you need to change this parameter
during simulation, you must set it to a positive finite scalar at the beginning
of simulation. </entry>
<entry key="SolverToleranceRunTimeChangeForFixedStepSimulation">The tolerance
  parameter ''{0}'' cannot be changed during simulation because you are using
  a fixed-step solver. This parameter only applies to
  variable-step solvers.</entry>
<entry key="SolverToleranceInvalidDimension"> The tolerance parameter ''{0}'' has width 
  {1,number, integer} while the corresponding ''{2}'' has width {3,number,integer}. 
  The width of the parameter must be equal to either one or the width 
  of the ''{4}''. </entry>
<entry key="SolverToleranceInfiniteOrNegativeOrComplex"> The tolerance
  parameter ''{0}'' is {1}. Change this value to a finite positive real
  scalar or vector. Alternatively, set this parameter to the keyword
  'auto' or to -1 to indicate that Simulink should automatically calculate this
  value.</entry>
<entry key="SolverToleranceInvalidTypeOrString"> The tolerance parameter
  ''{0}'' is neither double precision type, nor set to the keyword 'auto' or to -1. This
  parameter can only be set to: a finite positive scalar or vector having a
  real type; the keyword 'auto'; or to -1 to also indicate auto.</entry>
<entry key="NumericSolverToleranceInReferencedModel"> The tolerance parameter
  ''{0}'' in block ''{1}'' is set to a numeric value and the block is in a
  referenced model. If you change this parameter, you must force a rebuild of
  the topmost model for the change to take effect, otherwise any change will be ignored by
  Simulink. You can turn off this warning by using the following MATLAB command:
  warning(''off'',''Simulink:Parameters:NumericSolverToleranceInReferencedModel''); </entry>
    <entry key="TransTuneRTPClashingUses">Cannot determine data type for variable ''{0}'' based on usage in model. The following blocks use the variable with different data types: {1}. You can resolve this issue by specifying an explicit data type for the variable.</entry>
    <entry key="TunVarLossOfPrec">Parameter {0} of ''{1}'' is being cast from a data type of ''{2}'' to the signal data type ''{3}''. Possible loss of precision</entry>
    <entry key="TunableParamsUsedInNonInlinedBD">Ignoring the tunable parameters table because the ''Inline parameters'' Configuration Parameters setting is disabled</entry>
    <entry key="TunablePrmInNonTunableField">Parameter ''{0}'' of ''{1}'' is non-tunable but refers to tunable variables ({2})</entry>
    <entry key="UnexpParamChangeDuringMdlExec">Unexpected error(s) encountered while evaluating ''{0}'' parameters for registration at the top of the model execution loop. The parameters installed in the dialog need to be corrected. Model execution will continue using the old values</entry>
    <entry key="UnexpSFcnParamChangeDuringMdlExec">Unexpected error(s) encountered while evaluating S-function ''{0}'' parameters for registration at the top of the model execution loop. This is probably due to an incorrect use of mdlCheckParameters and mdlProcessParameters. mdlProcessParameters appears to have returned an error when it shouldn''t have. The parameters installed in the dialog need to be corrected. Model execution will continue using the old values</entry>
    <entry key="WSPrmResolutionFailure">Unable to resolve workspace variables for block diagram ''{0}''</entry>
    <entry key="WSPrmUsingReservedIdent">Invalid use of identifier ''{0}'' in ''{1}''. This identifier is reserved for use by Simulink Coder</entry>
    <entry key="ExpectedWSPrmNotFound">Unable to find expected workspace variable ''{0}'' for block diagram ''{1}''</entry>
    <entry key="WarnInterfVarsInTransRTP">The generated code will inline the numeric value of run-time parameter ''{0}'' of ''{1}'' because the parameter is a transformation of one or more dialog parameters. The code for this block will not use the tunable variables ({2}).</entry>
<entry key="TunabilityLossDueToDTMismatchInStructParam">Parameter ''{0}'' of block ''{1}'' will not be tunable at run-time because the data types of all fields of the specified structure parameter do not match the target bus signal type. You will be unable to interface to the run-time parameter in the generated code even though the corresponding block parameter maps to tunable variables ({2}).\n\nTo maintain tunability, (a) redefine specified tunable variables {3} as a Simulink.Parameter object, and mark its data type as the bus object associated with the target bus signal OR (b) redefine {4} such that the data types of fields match the data types of the elements of the target bus signal.</entry>
    <entry key="OutputValueInConsistentWithBusDesignMinMaxMsg">Inconsistent numeric values for output port {0,number,integer} of ''{1}'' at {2} time step {3}:\n{4}</entry>        
    <entry key="DWorkValueInConsistentWithBusDesignMinMaxMsg">Inconsistent numeric values for DWork {0,number,integer} of ''{1}'' at {2} time step {3}:\n{4}</entry> 
    <entry key="DataStoreValueInConsistentWithBusEleDesignMinMaxMsg">Inconsistent numeric values for ''{0}'' set by ''{1}'' at {2} time step {3}:\n{4}</entry> 
    <entry key="BlkParamInConsistentWithBusEleDesignMinMaxMsg">Inconsistent numeric values for the parameter ''{0}'' on block ''{1}'':\n{2}</entry>
    <entry key="OverrideForBusEleDesignMinBlock">The minimum value ({0}) associated with the bus element in the previous diagnostic message was propagated from block ''{1}''. If this block is associated with a bus object, the source of this minimum value is a bus element within this bus object</entry>
    <entry key="OverrideForBusEleDesignMaxBlock">The maximum value ({0}) associated with the bus element in the previous diagnostic message was propagated from block ''{1}''. If this block is associated with a bus object, the source of this maximum value is a bus element within this bus object</entry>
    <entry key="ValueLessThanBusEleDesignMin">Value ({0}) is less than the minimum ({1}) of corresponding bus element ''{2}''</entry>
    <entry key="ImValueLessThanBusEleDesignMin">Imaginary part of value ({0}) is less than the minimum ({1}) of corresponding bus element ''{2}''</entry>
    <entry key="ReValueLessThanBusEleDesignMin">Real part of value ({0}) is less than the minimum ({1}) of corresponding bus element ''{2}''</entry>
    <entry key="ValueGreaterThanBusEleDesignMax">Value ({0}) is greater than the maximum ({1}) of corresponding bus element ''{2}''</entry>
    <entry key="ImValueGreaterThanBusEleDesignMax">Imaginary part of value ({0}) is greater than the maximum ({1}) of corresponding bus element ''{2}''</entry>
    <entry key="ReValueGreaterThanBusEleDesignMax">Real part of value ({0}) is greater than the maximum ({1}) of corresponding bus element ''{2}''</entry>
    <entry key="ArrayValueLessThanBusEleDesignMin">Value ({0}) at element index {1} is less than the minimum ({2}) of corresponding bus element ''{3}''</entry>
    <entry key="ArrayImValueLessThanBusEleDesignMin">Imaginary part of value ({0}) at element index {1} is less than the minimum ({2}) of corresponding bus element ''{3}''</entry>
    <entry key="ArrayReValueLessThanBusEleDesignMin">Real part of value ({0}) at element index {1} is less than the minimum ({2}) of corresponding bus element ''{3}''</entry>
    <entry key="ArrayValueGreaterThanBusEleDesignMax">Value ({0}) at element index {1} is greater than the maximum ({2}) of corresponding bus element ''{3}''</entry>
    <entry key="ArrayImValueGreaterThanBusEleDesignMax">Imaginary part of value ({0}) at element index {1} is greater than the maximum ({2}) of corresponding bus element ''{3}''</entry>
    <entry key="ArrayReValueGreaterThanBusEleDesignMax">Real part of value ({0}) at element index {1} is greater than the maximum ({2}) of corresponding bus element ''{3}''</entry>
    <entry key="DataStoreValueLessThanBusEleDesignMin">Inconsistent numeric values for ''{0}'': The value ({1}) set by ''{2}'' at {3} time step {4} is less than the minimum ({5}) of corresponding bus element ''{6}''</entry>
    <entry key="DataStoreImValueLessThanBusEleDesignMin">Inconsistent numeric values for ''{0}'': The imaginary part of value ({1}) set by ''{2}'' at {3} time step {4} is less than the minimum ({5}) of corresponding bus element ''{6}''</entry> 
    <entry key="DataStoreReValueLessThanBusEleDesignMin">Inconsistent numeric values for ''{0}'': The real part of value ({1}) set by ''{2}'' at {3} time step {4} is less than the minimum ({5}) of corresponding bus element ''{6}''</entry>
    <entry key="DataStoreValueGreaterThanBusEleDesignMax">Inconsistent numeric values for ''{0}'': The value ({1}) set by ''{2}'' at {3} time step {4} is greater than the  maximum ({5}) of corresponding bus element ''{6}''</entry>
    <entry key="DataStoreImValueGreaterThanBusEleDesignMax">Inconsistent numeric values for ''{0}'': The imaginary part of value ({1}) set by ''{2}'' at {3} time step {4} is greater than the maximum ({5}) of corresponding bus element ''{6}''</entry>
    <entry key="DataStoreReValueGreaterThanBusEleDesignMax">Inconsistent numeric values for ''{0}'': The real part of value ({1}) set by ''{2}'' at {3} time step {4} is greater than the maximum ({5}) of corresponding bus element ''{6}''</entry>  
    <entry key="StructValueLessThanBusEleDesignMin">Struct field value ({0}) is less than the minimum ({1}) of corresponding bus element ''{2}''</entry>
    <entry key="StructImValueLessThanBusEleDesignMin">Imaginary part of struct field value ({0}) is less than the minimum ({1}) of corresponding bus element ''{2}''</entry>
    <entry key="StructReValueLessThanBusEleDesignMin">Real part of struct field value ({0}) is less than the minimum ({1}) of corresponding bus element ''{2}''</entry>
    <entry key="StructValueGreaterThanBusEleDesignMax">Struct field value ({0}) is greater than the maximum ({1}) of corresponding bus element ''{2}''</entry>
    <entry key="StructImValueGreaterThanBusEleDesignMax">Imaginary part of struct field value ({0}) is greater than the maximum ({1}) of corresponding bus element ''{2}''</entry>
    <entry key="StructReValueGreaterThanBusEleDesignMax">Real part of struct field value ({0}) is greater than the maximum ({1}) of corresponding bus element ''{2}''</entry>
    <entry key="StructArrayValueLessThanBusEleDesignMin">Struct field value ({0}) at element index {1} is less than the minimum ({2}) of corresponding bus element ''{3}''</entry>
    <entry key="StructArrayImValueLessThanBusEleDesignMin">Imaginary part of struct field value ({0}) at element index {1} is less than the minimum ({2}) of corresponding bus element ''{3}''</entry>
    <entry key="StructArrayReValueLessThanBusEleDesignMin">Real part of struct field value ({0}) at element index {1} is less than the minimum ({2}) of corresponding bus element ''{3}''</entry>
    <entry key="StructArrayValueGreaterThanBusEleDesignMax">Struct field value ({0}) at element index {1} is greater than the maximum ({2}) of corresponding bus element ''{3}''</entry>
    <entry key="StructArrayImValueGreaterThanBusEleDesignMax">Imaginary part of struct field value ({0}) at element index {1} is greater than the maximum ({2}) of corresponding bus element ''{3}''</entry>
    <entry key="StructArrayReValueGreaterThanBusEleDesignMax">Real part of struct field value ({0}) at element index {1} is greater than the maximum ({2}) of corresponding bus element ''{3}''</entry>
    <entry key="NonStructParamValueLessThanBusEleDesignMin">Value ({0}) of the parameter ''{1}'' on block ''{2}'' is less than the minimum ({3}) of bus element ''{4}''</entry>
    <entry key="NonStructParamImValueLessThanBusEleDesignMin">Imaginary part of value ({0}) of the parameter ''{1}'' on block ''{2}'' is less than the minimum ({3}) of bus element ''{4}''</entry>
    <entry key="NonStrucParamReValueLessThanBusEleDesignMin">Real part of value ({0}) of the parameter ''{1}'' on block ''{2}'' is less than the minimum ({3}) of bus element ''{4}''</entry>
    <entry key="NonStructParamValueGreaterThanBusEleDesignMax">Value ({0}) of the parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of bus element ''{4}''</entry>
    <entry key="NonStrucParamImValueGreaterThanBusEleDesignMax">Imaginary part of value ({0}) of the parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of bus element ''{4}''</entry>
    <entry key="NonStrucParamReValueGreaterThanBusEleDesignMax">Real part of value ({0}) of the parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of bus element ''{4}'''</entry>
    <entry key="NonStructParamArrayValueLessThanBusEleDesignMin">Value ({0}) of the parameter ''{1}'' on block ''{2}'' is less than the minimum ({3}) of bus element ''{4}''. This occurs for element {5}.</entry>
    <entry key="NonStructParamArrayImValueLessThanBusEleDesignMin">Imaginary part of value ({0}) of the parameter ''{1}'' on block ''{2}'' is less than the minimum ({3}) of bus element ''{4}''. This occurs for element {5}.</entry>
    <entry key="NonStrucParamArrayReValueLessThanBusEleDesignMin">Real part of value ({0}) of the parameter ''{1}'' on block ''{2}'' is less than the minimum ({3}) of bus element ''{4}''. This occurs for element {5}.</entry>
    <entry key="NonStructParamArrayValueGreaterThanBusEleDesignMax">Value ({0}) of the parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of bus element ''{4}''. This occurs for element {5}.</entry>
    <entry key="NonStrucParamArrayImValueGreaterThanBusEleDesignMax">Imaginary part of value ({0}) of the parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of bus element ''{4}''. This occurs for element {5}.</entry>
    <entry key="NonStrucParamArrayReValueGreaterThanBusEleDesignMax">Real part of value ({0}) of the parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of bus element ''{4}'''. This occurs for element {5}.</entry>
    <entry key="NonStructParamQuantizedValueLessThanBusEleDesignMin">Quantized value ({0}) of the parameter ''{1}'' on block ''{2}'' is less than the minimum ({3}) of bus element ''{4}''</entry>
    <entry key="NonStructParamQuantizedImValueLessThanBusEleDesignMin">Imaginary part of quantized value ({0}) of the parameter ''{1}'' on block ''{2}'' is less than the minimum ({3}) of bus element ''{4}''</entry>
    <entry key="NonStrucParamQuantizedReValueLessThanBusEleDesignMin">Real part of quantized value ({0}) of the parameter ''{1}'' on block ''{2}'' is less than the minimum ({3}) of bus element ''{4}''</entry>
    <entry key="NonStructParamQuantizedValueGreaterThanBusEleDesignMax">Quantized value ({0}) of the parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of bus element ''{4}''</entry>
    <entry key="NonStrucParamQuantizedImValueGreaterThanBusEleDesignMax">Imaginary part of quantized value ({0}) of the parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of bus element ''{4}''</entry>
    <entry key="NonStrucParamQuantizedReValueGreaterThanBusEleDesignMax">Real part of quantized value ({0}) of the parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of bus element ''{4}'''</entry>
    <entry key="NonStructParamQuantizedArrayValueLessThanBusEleDesignMin">Quantized value ({0}) of the parameter ''{1}'' on block ''{2}'' is less than the minimum ({3}) of bus element ''{4}''. This occurs for element {5}.</entry>
    <entry key="NonStructParamQuantizedArrayImValueLessThanBusEleDesignMin">Imaginary part of quantized value ({0}) of the parameter ''{1}'' on block ''{2}'' is less than the minimum ({3}) of bus element ''{4}''. This occurs for element {5}.</entry>
    <entry key="NonStrucParamQuantizedArrayReValueLessThanBusEleDesignMin">Real part of quantized value ({0}) of the parameter ''{1}'' on block ''{2}'' is less than the minimum ({3}) of bus element ''{4}''. This occurs for element {5}.</entry>
    <entry key="NonStructParamQuantizedArrayValueGreaterThanBusEleDesignMax">Quantized value ({0}) of the parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of bus element ''{4}''. This occurs for element {5}.</entry>
    <entry key="NonStrucParamQuantizedArrayImValueGreaterThanBusEleDesignMax">Imaginary part of quantized value ({0}) of the parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of bus element ''{4}''. This occurs for element {5}.</entry>
    <entry key="NonStrucParamQuantizedArrayReValueGreaterThanBusEleDesignMax">Real part of quantized value ({0}) of the parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of bus element ''{4}'''. This occurs for element {5}.</entry>
    <entry key="StructParamSpecifiedFieldValueLessThanBusEleDesignMin">Field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is less than the  minimum ({3}) of corresponding bus element ''{4}''</entry>
    <entry key="StructParamSpecifiedFieldImValueLessThanBusEleDesignMin">Imaginary part of field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is less than the minimum ({3}) of corresponding bus element ''{4}''</entry>
    <entry key="StructParamSpecifiedFieldReValueLessThanBusEleDesignMin">Real part of field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is less than the minimum ({3}) of corresponding bus element ''{4}''</entry>
    <entry key="StructParamSpecifiedFieldValueGreaterThanBusEleDesignMax">Field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of corresponding bus element ''{4}''</entry>
    <entry key="StructParamSpecifiedFieldImValueGreaterThanBusEleDesignMax">Imaginary part of field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of corresponding bus element ''{4}''</entry>
    <entry key="StructParamSpecifiedFieldReValueGreaterThanBusEleDesignMax">Real part of field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of corresponding bus element ''{4}''</entry>
    <entry key="StructParamSpecifiedArrayFieldValueLessThanBusEleDesignMin">Field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is less than the  minimum ({3}) of corresponding bus element ''{4}''. This occurs for field element {5}.</entry>
    <entry key="StructParamSpecifiedArrayFieldImValueLessThanBusEleDesignMin">Imaginary part of field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is less than the minimum ({3}) of corresponding bus element ''{4}''. This occurs for field element {5}.</entry>
    <entry key="StructParamSpecifiedArrayFieldReValueLessThanBusEleDesignMin">Real part of field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is less than the minimum ({3}) of corresponding bus element ''{4}''. This occurs for field element {5}.</entry>
    <entry key="StructParamSpecifiedArrayFieldValueGreaterThanBusEleDesignMax">Field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of corresponding bus element ''{4}''. This occurs for field element {5}.</entry>
    <entry key="StructParamSpecifiedArrayFieldImValueGreaterThanBusEleDesignMax">Imaginary part of field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of corresponding bus element ''{4}''. This occurs for field element {5}.</entry>
    <entry key="StructParamSpecifiedArrayFieldReValueGreaterThanBusEleDesignMax">Real part of field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of corresponding bus element ''{4}''. This occurs for field element {5}.</entry>
    <entry key="StructParamDefaultFieldValueLessThanBusEleDesignMin">Default field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is less than the  minimum ({3}) of corresponding bus element ''{4}''</entry>
    <entry key="StructParamDefaultFieldImValueLessThanBusEleDesignMin">Imaginary part of default field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is less than the minimum ({3}) of corresponding bus element ''{4}''</entry>
    <entry key="StructParamDefaultFieldReValueLessThanBusEleDesignMin">Real part of default field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is less than the minimum ({3}) of corresponding bus element ''{4}''</entry>
    <entry key="StructParamDefaultFieldValueGreaterThanBusEleDesignMax">Default field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of corresponding bus element ''{4}''</entry>
    <entry key="StructParamDefaultFieldImValueGreaterThanBusEleDesignMax">Imaginary part of default field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of corresponding bus element ''{4}''</entry>
    <entry key="StructParamDefaultFieldReValueGreaterThanBusEleDesignMax">Real part of default field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of corresponding bus element ''{4}''</entry>
    <entry key="StructParamDefaultArrayFieldValueLessThanBusEleDesignMin">Default field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is less than the  minimum ({3}) of corresponding bus element ''{4}''. This occurs for field element {5}.</entry>
    <entry key="StructParamDefaultArrayFieldImValueLessThanBusEleDesignMin">Imaginary part of default field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is less than the minimum ({3}) of corresponding bus element ''{4}''. This occurs for field element {5}.</entry>
    <entry key="StructParamDefaultArrayFieldReValueLessThanBusEleDesignMin">Real part of default field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is less than the minimum ({3}) of corresponding bus element ''{4}''. This occurs for field element {5}.</entry>
    <entry key="StructParamDefaultArrayFieldValueGreaterThanBusEleDesignMax">Default field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of corresponding bus element ''{4}''. This occurs for field element {5}.</entry>
    <entry key="StructParamDefaultArrayFieldImValueGreaterThanBusEleDesignMax">Imaginary part of default field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of corresponding bus element ''{4}''. This occurs for field element {5}.</entry>
    <entry key="StructParamDefaultArrayFieldReValueGreaterThanBusEleDesignMax">Real part of default field element value ({0}) of the structure parameter ''{1}'' on block ''{2}'' is greater than the maximum ({3}) of corresponding bus element ''{4}''. This occurs for field element {5}.</entry>
    <entry key="NonNumericFieldInNumericStruct">Field ''{0}'' is not a valid numeric structure</entry>
    <entry key="NotNumericValue">A numeric value is expected</entry>
    <entry key="NotFiniteValue">A finite value is expected.</entry>
    <entry key="PrmBusWithNameNotSupportScalarMin">Minimum ''{0}'' is not supported for bus data type and has been ignored in checking parameter ''{1}'' on ''{2}''. Specify minimum on leaf elements of bus object ''{3}'' to enable this check and to avoid an error in a future release</entry>
    <entry key="PrmBusWitoutNameNotSupportScalarMin">Minimum ''{0}'' is not supported for bus data type and has been ignored in checking parameter ''{1}'' on ''{2}''. Specify minimum on leaf bus elements to enable this check and to avoid an error in a future release</entry>  
    <entry key="PrmBusWithNameNotSupportScalarMax">Maximum ''{0}'' is not supported for bus data type and has been ignored in checking parameter ''{1}'' on ''{2}''. Specify maximum on leaf elements of bus object ''{3}'' to enable this check and to avoid an error in a future release</entry>
    <entry key="PrmBusWitoutNameNotSupportScalarMax">Maximum ''{0}'' is not supported for bus data type and has been ignored in checking parameter ''{1}'' on ''{2}''. Specify maximum on leaf bus elements to enable this check and to avoid an error in a future release</entry>
    <entry key="DWorkBusWithNameNotSupportScalarMin">Minimum ''{0}'' is not supported for bus data type and has been ignored in checking DWork ''{1}'' on ''{2}''. Specify minimum on leaf elements of bus object ''{3}'' to enable this check and to avoid an error in a future release</entry>
    <entry key="DWorkBusWithoutNameNotSupportScalarMin">Minimum ''{0}'' is not supported for bus data type and has been ignored in checking DWork ''{1}'' on ''{2}''. Specify minimum on leaf bus elements to enable this check and to avoid an error in a future release</entry>
    <entry key="DWorkBusWithNameNotSupportScalarMax">Maximum ''{0}'' is not supported for bus data type and has been ignored in checking DWork ''{1}'' on ''{2}''. Specify maximum on leaf elements of bus object ''{3}'' to enable this check and to avoid an error in a future release</entry>
    <entry key="DWorkBusWithoutNameNotSupportScalarMax">Maximum ''{0}'' is not supported for bus data type and has been ignored in checking DWork ''{1}'' on ''{2}''. Specify maximum on leaf bus elements to enable this check and to avoid an error in a future release</entry>
    <entry key="PortBusWithNameNotSupportScalarMin">Minimum ''{0}'' is not supported for bus data type and has been ignored in range checking for port {1,number,integer} on ''{2}''. Specify minimum on leaf elements of bus object ''{3}'' to enable this check and to avoid an error in a future release</entry>
    <entry key="PortBusWithoutNameNotSupportScalarMin">Minimum ''{0}'' is not supported for bus data type and has been ignored in range checking for port {1,number,integer} on ''{2}''. Specify minimum on leaf bus elements to enable this check and to avoid an error in a future release</entry>
    <entry key="PortBusWithNameNotSupportScalarMax">Maximum ''{0}'' is not supported for bus data type and has been ignored in range checking for port {1,number,integer} on ''{2}''. Specify maximum on leaf elements of bus object ''{3}'' to enable this check and to avoid an error in a future release</entry>
    <entry key="PortBusWithoutNameNotSupportScalarMax">Maximum ''{0}'' is not supported for bus data type and has been ignored in range checking for port {1,number,integer} on ''{2}''. Specify maximum on leaf bus elements to enable this check and to avoid an error in a future release</entry>
    <entry key="MinMaxMapToPortionOfActSrcPortRegion">Minimum ''{0}'' and maximum ''{1}'' from ''{2}'' are mapped to a portion of the wide signal coming from output port {3,number,integer} of ''{4}'' and have been ignored during range checking. To enable the range checking for the minimum and maximum values, insert a Signal Conversion block with its 'Output' parameter set to 'Signal copy' in front of ''{5}''.</entry>
    <entry key="MinMapToPortionOfActSrcPortRegion">Minimum ''{0}'' from ''{1}'' is mapped to a portion of the wide signal coming from output port {2,number,integer} of ''{3}'' and has been ignored during range checking. To enable the range checking for the minimum value, insert a Signal Conversion block with its 'Output' parameter set to 'Signal copy' in front of ''{4}''.</entry>
    <entry key="MaxMapToPortionOfActSrcPortRegion">Maximum ''{0}'' from ''{1}'' is mapped to a portion of the wide signal coming from output port {2,number,integer} of ''{3}'' and has been ignored during range checking. To enable the range checking for the maximum value, insert a Signal Conversion block with its 'Output' parameter set to 'Signal copy' in front of ''{4}''.</entry>
    <entry key="ConflictingAlignments">Parameter ''{0}'' has conflicting alignment values: its data type ''{1}'' specifies an alignment value of {2,number,integer} but its CoderInfo specifies an alignment value of {3,number,integer}.</entry>
    <entry key="SlResolveInvalidArgType" note="stringDatatypeUpdate">Input argument {0} must be a character vector</entry>
    <entry key="SlResolveInvalidContextArgType" note="stringDatatypeUpdate">Input argument {0} must be a character vector or handle</entry>
    <entry key="SlResolveInvalidResolutionMode">Invalid resolution mode</entry>
    <entry key="SlResolveInvalidReturnMode">Invalid resolution mode</entry>
    <entry key="DictionaryIgnoreTunableParamTable">Ignoring settings in the tunable parameters table for model ''{0}'' because it is linked to a data dictionary.  Run tunablevars2parameterobjects to create parameter objects with the storage class information from the tunable parameters table.</entry>
    <entry key="WarnInlineParamsOffRevertedToR2013b">Parameter tuning with InlineParameters OFF has been reverted to the R2013b behavior. The ability to revert to the R2013b behavior will be removed in a future release.</entry>
    <entry key="WarnInlineParamsOffCouldNotRevertToR2013b">Could not revert parameter tuning behavior for InlineParameters OFF.</entry>
    <entry key="FormalPrmTypeAuditingError">Parameter {0} of block type ''{1}'' should have been declared as ''{2}''.</entry>
    <entry key="SignalSelectionOnlyAllowedForBuses">Cannot set parameter ''{0}'' on port ''{1}'' since it is not a bus. Signals can only be selected for buses.</entry>
    <entry key="PublicBlkParamUsingNonGlobalSymbol">The variable ''{0}'' used by the group parameter ''{1}'' of the block ''{2}'' has to be defined in either the base workspace or Simulink Data Dictionary.</entry>
    <entry key="AccelSimWithGroupedMdlArgs">Cannot build a model reference SIM target for model ''{0}'' because it has grouped model arguments.</entry>
    <entry key="MdlRefBlkWithGroupedArgUnderNonTrivialMask">Model block ''{0}'' cannot be under a non-trivial mask since the model it references has grouped model arguments.</entry>
  </message>
</rsccat>

<!-- LocalWords:  tunability tunablevars parameterobjects
-->

