<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2009-2013 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="Simulink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../matlab/resources/schema/msgcat.xsd">
    <message>
        <entry key="HarnessStudioTitle">Test Harness: {0}</entry>
        <entry key="HarnessMATLABBlockTitleSuffix"> (Test Harness)</entry>
        <entry key="CannotDeactivateInactiveHarness">Harness ''{0}'' cannot be closed because it is not open. </entry>
        <entry key="TestingHarnessActivationError"> Test harness ''{0}'' cannot be opened because some other harness is already open. Please close the other harness before opening this harness.</entry>
        <entry key="ObserverHarnessActivationError">Cannot open the observer harness ''{1}'' because the test harness ''{0}'' is currently open. Please close the test harness before opening this one.</entry>
        <entry key="AnotherHarnessAlreadyActivated">Cannot open the harness ''{0}'' because another harness ''{1}'' for ''{2}'' is already open. Please close the open harness before opening this one.</entry>
        <entry key="HarnessNameNotValid">''{0}'' is not a valid name for a test harness.  The name of the test harness must be a valid MATLAB identifier.</entry>
        <entry key="HarnessNameMustBeUniqueForAModel">A test harness with the same name already exists for this model. Please use a different name.</entry>
        <entry key="HarnessNameMustBeUniqueForAModelDuringLoad">A test harness ''{0}'' with the same name already exists for this model. The name is being changed to ''{1}'' to ensure harness names are unique.  Please re-save the model.</entry>
        <entry key="HarnessNameInUse">Cannot use ''{0}'' as the test harness model name because a model of the same name is currently open. Please enter a different name.</entry>   
        <entry key="HarnessOwnerBlockMustBeAtomicSSOrModelRef">Can not create a test harness for this block. Test harnesses can be created for subsystems or the block diagram.</entry>
        <entry key="HarnessOwnerBlockMustNotBeBuiltInBlock">Cannot create a test harness for built-in block. Test harnesses can be created for user defined subsystems or block diagrams.</entry>
        <entry key="ObserverHarnessNotASubsystem">''{0}'' is not a subsystem. Cannot convert to Observer harness.</entry>
        <entry key="ObserverHarnessErrMsgVerificationMaskNotSet">''{0}'' is not a verification subsystem. Cannot convert to Observer harness.</entry>
        <entry key="ObserverHarnessErrMsgNoOwnerFound">Matlab could not find out the owner subsystem for the observer to be placed on. Verification subsystem ''{0}'' must have at least one input signal which is output of the owner subsystem.</entry>
        <entry key="ObserverHarnessErrMsgNoOpsOnVerSubsys">Verification subsystem ''{0}'' cannot have outputs.</entry>
        <entry key="ObserverHarnessErrMsgNoIpsOnVerSubsys">Verification subsystem ''{0}'' must have at least one input.</entry>
        <entry key="ObserverHarnessErrMsgIpsMultipleSubsys">Verification subsystem ''{0}'' that has inputs from multiple subsystems are not supported.</entry>
        <entry key="ObserverHarnessErrMsgUnconnectedIpsOnVerSubsys">Verification subsystem ''{0}'' cannot have unconnected inputs.</entry>
        <entry key="ObserverHarnessVerSubsysOnNonAtomicSubSys">The subsystem ''{0}'' connected to verification subsystem ''{1}'' must be an atomic subsystem.</entry>
        <entry key="InvalidHarnessOwnerHandle">Harness owner handle must be either the block diagram handle or a subsystem block handle.</entry>    
        <entry key="NoHarnessFound">''{0}'' does not have any harness named ''{1}''.</entry>        
        <entry key="HarnessNameClashesWithNewModelName">Cannot rename the model to ''{0}'' because a test harness owned by ''{1}'' in this model has the same name. Please choose a new name or re-name the harness before saving again.</entry>
        <entry key="HarnessDeletedForBlock">Test harnesses associated with block ''{0}'' have been deleted as this block or its parent is being deleted.</entry>
        <entry key="CannotDeleteSUT">The harnessed component cannot be deleted in harness view.</entry>
        <entry key="CannotChangeSUTInterface">The interface of the harnessed test cannot be changed in harness view.</entry>
        <entry key="CannotCreateHarnessWhenAnotherHarnessIsActive">Cannot create harness because another test harness is currently open. Please close the test harness before creating a new harness.</entry>
        <entry key="CannotCloneWhenATestingHarnessIsActive">Cannot clone ''{0}'' because another test harness is currently open. Please close the test harness before cloning a harness.</entry>
        <entry key="CannotCreateSubsystemFromSUT">The harnessed component cannot be placed inside a subsystem in harness view.</entry>
        <entry key="CannotActivateAsBDWithHarnessNameOpen">Cannot open test harness ''{0}'' as another model with the same name is currently open. Please close the other model before opening this harness.</entry>
        <entry key="WarnABoutNameShadowingOnActivation">The test harness ''{0}'' is shadowing another name in the MATLAB workspace or path. You will not be able to work with the shadowed file or variable until you close the test harness.</entry>
        <entry key="WarnAboutNameShadowingOnCreation">The new harness name is shadowing another name in the MATLAB workspace or path. Click on "Continue" to create the harness. Otherwise, click on "Cancel" to abort harness creation.</entry>
        <entry key="WarnAboutNameShadowingOnCreationTitle">Possible name conflict</entry>
        <entry key="WarnAboutNameShadowingOnCreationfromCMD">The new harness name ''{0}'' shadows another name in the MATLAB workspace or path.</entry>
        <entry key="WarnAboutNameShadowingOnRename">The new harness name is shadowing another name in the MATLAB workspace or path. Click on "Continue" to proceed with the rename operation with this harness name. Otherwise, click on "Cancel" to select another harness name.</entry>
        <entry key="WarnAboutNameShadowingOnRenameTitle">Possible name conflict</entry>
        <entry key="DeactiveHarnessCanceledByConfigSet">Close operation for harness model ''{0}'' canceled.</entry>
        <entry key="CannotSaveHarnessWithNewName">Cannot save test harness ''{0}'' with a new name. If you would like to save the main model with a new name, please perform the save operation on the main model.</entry>
        <entry key="ContinueHarnessBuildTitle">Continue Harness creation</entry>
        <entry key="ContinueHarnessBuild">The model ''{0}'' failed to compile. Select 'No' to see error messages from compile. Select 'Yes' to create a harness configured for Prototyping (this can be changed later).</entry>
        <entry key="CreateAborted">Harness creation aborted.</entry>
        <entry key="UpdateAborted">Harness update aborted.</entry>
        <entry key="HarnessCreationAborted">Harness creation aborted due to compilation failures in the model ''{0}''.</entry>
        <entry key="HarnessCreationAbortedFileShadow">Harness creation aborted because the specified Harness name shadows another name in the MATLAB workspace or path. Please specify a different harness name.</entry>
        <entry key="CannotActivateWhenLoading">Cannot open harness because the main model ''{0}'' is being loaded.</entry>
        <entry key="CannotActivateWhenBDIsCompiled">Cannot open harness because the main model ''{0}'' is being compiled or simulated.</entry>
        <entry key="CannotActivateWhenClosing">Cannot open harness because the main model ''{0}'' is being closed.</entry>
        <entry key="CannotExportWhenLoading">Cannot export the test harness because the model ''{0}'' is being loaded.</entry>
        <entry key="CannotExportWhenBDIsCompiled">Cannot export the test harness because the model ''{0}'' is being compiled or simulated.</entry>
        <entry key="CannotExportWhenClosing">Cannot export the test harness because the model ''{0}'' is being closed.</entry>
        <entry key="CannotExportWhenSystemModelDirty">Cannot export the test harness ''{0}'' because the model ''{1}'' that it references is not saved.  Please save the model before exporting the test harness.</entry>
        <entry key="CannotEditModelAsTestingHarnessIsActive">Cannot modify ''{0}'' because a test harness is open. Please close the harness before modifying this model.</entry>
        <entry key="CannotEditLibAsTestingHarnessIsActive">Cannot modify ''{0}'' because a test harness is open. Please close the harness before modifying this library.</entry>
        <entry key="CannotUnlockModelAsTestingHarnessIsActive">Cannot unlock ''{0}'' because a test harness is open. Please close the harness and this model will be unlocked automatically.</entry>
        <entry key="CannotUnlockLibAsTestingHarnessIsActive">Cannot unlock ''{0}'' because a test harness is open. Please close the harness and this library will be unlocked automatically.</entry>
        <entry key="CannotChangeReferenceBlockForHarnessCUT">Cannot change the reference block for the component under test when harness is active. Please deactivate the harness and try.</entry>
        <entry key="CannotOpenMainMdlScopeAsTestHarnessIsActive">Cannot open the scope belonging to the locked model ''{0}'' because the test harness ''{1}'' associated with the model is open. Please close the test harness to unlock the model.</entry>
        <entry key="CannotUpdateWhenATestingHarnessIsActive"> Cannot update the test harness ''{0}'' because another test harness is open. Please close the open test harness before performing the harness update operation.</entry>
        <entry key="CannotDeleteWhenATestingHarnessIsActive"> Cannot delete the test harness ''{0}'' because a test harness is open. Please close the open test harness before performing the delete operation.</entry>
        <entry key="CannotDeleteWhenHarnessIsOpen">Cannot delete the test harness ''{0}'' because it is open. Please close it before performing the harness delete operation.</entry>
        <entry key="CannotDeleteWhenSystemIsBusy">Cannot delete the test harness ''{0}'' because the system is busy. This is possible if the main model is being compiled or simulated or if the harness cannot be opened because another model with the same name is open.</entry>
        <entry key="CannotMoveWhenHarnessIsOpen">Cannot move the test harness ''{0}'' because it is open. Please close it before performing the move operation.</entry>
        <entry key="CannotMoveWhenSystemIsBusy">Cannot move the test harness ''{0}'' because the system is busy. This is possible if the main model is being compiled or simulated or if the harness cannot be opened because another model with the same name is open.</entry>
        <entry key="CannotMoveWhenATestingHarnessIsActive"> Cannot move the test harness ''{0}'' because a test harness is open. Please close the open test harness before performing the harness move operation.</entry>
        <entry key="CannotMoveBDHarness"> ''{0}'' is a block diagram harness. Only block harnesses present on resolved link subsystems can be moved. </entry>
        <entry key="CannotMoveHarnessOfResolvedLinkedBlocks"> The harness owner is not a resolved linked subsystem. Only harnesses belonging to resolved linked subsystems can be moved to their corresponding reference blocks. </entry>
        <entry key="CannotMoveHarnessOfInactiveLinkedBlocks"> Harness can be moved only for resolved linked subsystems. Please resolve the link before moving the harness. </entry>
        <entry key="CannotMoveHarnessOfCommentedBlocks"> Harness cannot be moved for commented blocks. Please uncommented the block before moving the harness. </entry>
        <entry key="LibraryUnLockedForMove"> Library ''{0}'' was unlocked for harness move operation.  </entry>
        <entry key="HarnessMovedAndRenamed"> Harness ''{0}'' was moved but had to be renamed to ''{1}'' because it's name clashes with an existing harness.  </entry>
        <entry key="HarnessMoved"> Harness ''{0}'' was moved.  </entry>
        <entry key="CannotMoveHarnessLibraryNotFound"> Move harness has failed because the library was not found.  </entry>
        <entry key="CannotMoveHarnessOfBlocksWithSelfModifiableMask">Cannot move harnesses of blocks that have self-modifiable mask. </entry>
        <entry key="CannotMoveHarnessOfBlocksWithLocalMask">Cannot move harnesses of blocks that have local masks. </entry>
        <entry key="CannotMoveSILPILHarnesses">Cannot move harnesses that are configured for SIL/PIL mode. </entry>
        <entry key="ErrgDlgTitleForHarnessCreation">Error creating test harness</entry>
        <entry key="CannotConvertHarnessCUTToMdlRef">Cannot convert a harnessed component in an open test harness model to a Model block.</entry>
        <entry key="CannotConvertSSWithHarnessToMdlRef">Cannot convert a subsystem with harnesses to a Model block.</entry>
        <entry key="InvalidModelForHarnessList">Invalid argument. The first argument must not be a harness model.</entry>
        <entry key="InvalidStatusForHarnessList">Invalid argument. The second argument must be ''active'', ''all'', or ''deleted''.</entry>
        <entry key="CannotReorderSUTPorts">The ports of the harnessed component cannot be re-ordered in harness view.</entry>
        <entry key="InvalidOptionForGetHarnessList">''{0}'' is not a valid input for ''listOption''. Valid inputs are ''all'' or ''active''.</entry>
        <entry key="ErrorInHarnessStruct">Error while validating the harness struct. Did not find the required field ''{0}'' in harness struct.</entry>
        <entry key="ErrorInHarnessParamStruct">Error while validating the harness param struct. Did not find the required field ''{0}'' in harness param struct.</entry>
        <entry key="ConfirmDeleteDialogTitle">Delete Harness</entry>
        <entry key="ConfirmDeleteDialogText">Delete the test harness: ''{0}''?</entry>
        <entry key="ConfirmMoveDialogTitle">Move Harness</entry>
        <entry key="ConfirmMoveDialogText">Move the test harness ''{0}''? This operation will delete the harness on the linked instance and move the harness to the reference block.</entry>
        <entry key="Yes">Yes</entry>
        <entry key="No">No</entry>        
        <entry key="CannotCreateHarnessForImplicitLink">Cannot create a harness for block ''{0}'' because it is within a block that is linked (active/disabled) to a library block. Please unlink the block before creating a harness.</entry>
        <entry key="VirtualSSWithConnPortsNotSupported">Harness operations are not supported for virtual subsystems with physical modeling inputs or outputs.</entry>
        <entry key="SSWithStatePortNotSupported">Harness operations are not supported for subsystems with state ports.</entry>
        <entry key="SSWithResetPortNotSupported">Harness operations are not supported for subsystems with reset ports.</entry> 
        <entry key="HarnessCannotBeCreatedForALibraryMdl">A test harness cannot be created for a library model.</entry>
        <entry key="HarnessCannotBeCreatedForAHarnessMdl">A test harness cannot be created for a harness model or components inside them.</entry>
        <entry key="HarnessCannotBeCreatedForAMWLib">A test harness cannot be created for components inside a MathWorks library.</entry>
        <entry key="ConfigSSNotSupported">Harness operations are not supported for configurable subsystems.</entry>
        <entry key="HiddenBlocksNotSupported">Harness operations are not supported for hidden blocks.</entry>
        <entry key="CreateDialogTitle">Create Test Harness</entry>
        <entry key="ImportDialogTitle">Import Test Harness for {0}</entry>
        <entry key="ImportDialogDescription">Import Test Harness From Simulink Model</entry>
        <entry key="ImportFileName">Simulink file to import:</entry>
        <entry key="ImportFailed">Importing the test harness ''{0}'' from ''{1}'' failed for the following reason:</entry>
        <entry key="InterfaceMismatch">The interface of the saved block does not match the interface of the owner block ''{0}''</entry>
        <entry key="CreateDialogInstructions">Specify the properties of the test harness. The component under test is the system for which the harness is being created. After creation, use the block badge to find and open harnesses.</entry>
        <entry key="UpdateDialogTitle">Test Harness Properties : ''{0}''</entry>
        <entry key="UpdateDialogInstructions">Specify the properties of the test harness.</entry>
        <entry key="HarnessListDialogTitle">Test Harness List</entry>
        <entry key="HarnessListDialogInstructions">View and manage test harnesses in this model.</entry>
        <entry key="HarnessListDialogSelector">Filter by harness owner:</entry>
        <entry key="HarnessListDialogEmpty">This model has no test harnesses. Click on Analysis > Test Harness to create one.</entry>
        <entry key="HarnessListDialogTableColHeader1">Name</entry>
        <entry key="HarnessListDialogTableColHeader2">Properties</entry>
        <entry key="HarnessListDialogTableColHeader3">Delete</entry>
        <entry key="HarnessListDialogTableColHeader4">Owner Path</entry>
        <entry key="HarnessOwner">Harness Owner</entry>
        <entry key="HarnessOwnerTooltip">Click to highlight the harness owner</entry>
        <entry key="PropertiesTab">Basic Properties</entry>
        <entry key="BasicProperties">Basic Properties</entry>
        <entry key="HarnessConfig">Sources and Sinks</entry>
        <entry key="HarnessName">Name:</entry>
        <entry key="HarnessSource">Source:</entry>
        <entry key="HarnessSink">Sink:</entry>
        <entry key="OriginalSource">Original Source:</entry>
        <entry key="OriginalSink">Original Sink:</entry>
        <!-- Externally Saved Harness Messages -->
        <entry key="IndHarnessFileExists">Unable to create externally saved test harness ''{0}'' since a file ''{1}'' already exists.  Either delete the file or choose a different name.</entry>
        <entry key="CloseIndependentHarnessFailed">Unable to close the test harness ''{0}'' since it has unsaved changes.  Please save the harness and try the close operation again.</entry>
        <entry key="SaveHarnessesExternally">Save test harnesses externally</entry>
        <entry key="IndHarnessModelMustBeSaved">Model must be saved before creating externally saved test harness</entry>
        <entry key="HarnessDeletedIndependentHarness">The externally saved file ''{1}'' for test harness ''{0}'' has been deleted. </entry>
        <entry key="IndependentHarnessFileNotFound">Test harness ''{0}'' was saved externally, but the file ''{1}'' was not found on the MATLAB path. </entry>
        <entry key="ConvertToExternalTitle">Convert Internally Saved Test Harnesses</entry>
        <entry key="ConvertToInternalTitle">Convert Externally Saved Test Harnesses</entry>
	<entry key="ExportToIndependentTitle">Export Test Harness To Independent Model</entry>
	<entry key="ExportToIndependentMessage">Select 'OK' to export test harness to an independent model.  This operation will delete the test harness ''{0}'' and save it as an independent, non-harness model.</entry>
	<entry key="ExportAllToIndependentTitle">Export Test Harnesses To Independent Models</entry>
	<entry key="ExportAllToIndependentMessage">Select 'OK' to export all test harnesses to independent models.  This operation will delete all test harnesses for ''{0}'' and save them as independent, non-harness models.</entry>
        <entry key="ConvertToExternalMessage">Select 'OK' to convert test harnesses to be saved externally.  This operation will re-save ''{0}'' and save test harnesses as individual SLX files.</entry>
        <entry key="ConvertToInternalMessage">Select 'OK' to convert test harnesses to be saved internally.  This operation will re-save ''{0}'' and save all harnesses inside ''{1}'', and delete the external harnessInfo and harness SLX files.</entry>
        <entry key="SaveAsExternalHarnessesTitle">Save to new name for externally saved test harnesses</entry>
        <entry key="SaveAsExternalHarnesses">Select 'Yes' to make copies of test harnesses and harness SLX files associated with ''{0}'' for the new model ''{1}''.  Select 'No' to save the new model without test harnesses.</entry>
        <entry key="ConvertToExternalHarnessWarning">Converting ''{0}'' test harnesses to external test harnesses.</entry>
        <entry key="ConvertToInternalHarnessWarning">Converting ''{0}'' test harnesses to internal test harnesses.  This operation deletes the harnessInfo file and all harness SLX files.</entry>
        <entry key="ConvertToExternalHarnessSuccessMsg">Successfully converted ''{0}'' test harnesses to external test harnesses.</entry>
        <entry key="ConvertToInternalHarnessSuccessMsg">Successfully converted ''{0}'' test harnesses to internal test harnesses.</entry>
	<entry key="ExportToIndependentSuccessMsg">Successfully exported ''{0}'' test harnesses to independent, non-harness models.</entry>
        <entry key="ConvertToExternalHarnessActiveHarnessError">Unable to convert test harnesses for ''{0}'' to be externally saved models since there is an open test harness for this model.  Close the test harness and perform the operation again. </entry>
        <entry key="ConvertToExternalHarnessNotSavedError">Unable to convert test harnesses for ''{0}'' to be externally saved models since this model has not been saved.  Save the model and perform the operation again. </entry>
        <entry key="ConvertToInternalHarnessActiveHarnessError">Unable to convert test harnesses for ''{0}''  to be saved within the design model's SLX file since there is an open test harness for this model.  Close the test harness and perform the operation again. </entry>
        <entry key="ConvertToExternalHarnessNotInternalError">Unable to convert test harnesses for ''{0}'' to be saved externally since the model is already configured for external test harnesses.</entry>
	<entry key="ExportToIndependentHarnessFileExistsError">Unable to export test harness for ''{0}'' to independently saved model since a file ''{1}'' already exists.  Either delete the file or choose a different harness name prior to exporting.</entry>
        <entry key="ConvertToExternalHarnessFileExistsError">Unable to convert test harnesses for ''{0}'' to be saved externally since a file ''{1}'' already exists.  Either delete the file or choose a different name.</entry>
        <entry key="ConvertToInternalHarnessNotExternalError">Unable to convert test harnesses for ''{0}''  to be saved within the design model's SLX file since the model is already configured for internally saved test harnesses.</entry>
        <entry key="IndependentHarnessUUIDMismatch">The unique identifier for the test harness ''{0}'' saved in its SLX file does not match the identifier reserved for this harness.  It is possible that this file is not correct for this harness.</entry>
        <entry key="IndependentHarnessOpenViaDispatcher">The externally saved test harness ''{0}'' cannot be opened as a test harness by invoking its function name from the MATLAB command line.  Open the test harness model by double clicking on the model file, or by using open_system.</entry>
        <entry key="OpenIndependentHarnessThroughMainModelFailed">Unable to load the externally saved test harness ''{0}'' through its corresponding design model ''{1}''.  Therefore, the model is being loaded as non-harness model and functionality will be limited.  To fix this, address the issue listed below.</entry>
        <entry key="IndependentHarnessOperationFailed">Unable to perform the harness {0} operation for the externally saved test harness since the harness metadata file is not writable.</entry>
        <entry key="IndependentHarnessCopyEmbeddedWarning">Externally saved test harness ''{0}'' is being copied as embedded harness since ''{1}'' is not configured to save test harnesses externally. To convert harnesses to be saved externally, go to the Analysis Menu, and choose Test Harness->Convert To External Harnesses. </entry>
        <entry key="IndHarnessModelNotConfigWarning">The SaveExternally option was set to true for test harness ''{0}'', but the model ''{1}'' is not configured to save test harnesses externally.  Configuring test harness to be saved internally in ''{1}''.</entry>
        <entry key="EmbHarnessModelNotConfigWarning">The SaveExternally option was set to false for test harness ''{0}'', but the model ''{1}'' is configured to save test harnesses externally.  Configuring test harness to be saved externally.</entry>
        <entry key="IndepedendentHarnessSaveConflict">The model ''{0}'' contains references to externally saved test harnesses, but the harness ''{2}'' is saved internally in ''{1}''.  It is not possible to have a mix of externally and internally saved test harnesses.  Updating the settings for ''{2}'' so that it is configured to be saved externally.  Re-save the model to retain these changes.  After saving, if you would like to convert all harnesses to be saved internally, go to the Analysis Menu, and choose Test Harness->Convert To Internal Harnesses.</entry>
        <entry key="IndHarnessDetachWarning">Exporting the externally saved test harness ''{0}'' to a non-harness model.  This operation deletes the harness from the main model's harness metadata file ''{1}''.</entry>
        <entry key="IndHarnessSaveAsCopyError">While saving the externally saved test harness ''{0}'' to new name ''{1}'', there was an error in making a copy of the original harness due to the reason listed below.  The new harness ''{1}'' has been saved but ''{0}'' has been deleted from the harness metadata file.</entry>
        <entry key="MoveOnExternalHarnessUnsavedLib">Unable to move test harness ''{0}'' to library ''{1}'' as the library is configured to save test harnesses externally but is not saved.  Save the library and perform the move operation again.</entry>
        <entry key="ConvertOperationFailedFileNotWriteable">Unable to convert test harnesses as this operation re-saves ''{0}'' and the file ''{1}'' is write-protected.</entry>
        <entry key="ExternalHarnessOwnerNotFoundFileDeleteWarning">The test harness ''{0}'' was saved externally but the owner block {1} was not found in ''{2}''.  This  test harness will not be created.  Re-save ''{2}'' to delete {3} and update the harnessInfo metadata file {4}.</entry> 
        <entry key="ExternalHarnessOwnerNotFoundWarning">The test harness ''{0}'' was saved externally but the owner block {1} was not found in ''{2}''.  This  test harness will not be created.  Re-save ''{2}'' to update the harnessInfo metadata file {3}.</entry> 
        <entry key="SaveExternalHarnessWarning">Saving the previously unsaved external test harness ''{0}''.  Save ''{1}'' to ensure the model and saved test harnesses are in sync.</entry> 
        <entry key="HarnessesSavedExternally">Harnesses saved externally.</entry>
        <entry key="HarnessesSavedInternally">Harnesses saved internally.</entry>
        <entry key="HarnessesSavedExternallyHelp">More information</entry>
        <entry key="ExternalHarnessFileNotWritable">Unable to perform the harness operation for the externally saved test harness ''{0}'' since the file {1} is not writable.</entry>
        <entry key="ExternalHarnessDirNotWritable">Unable to perform the harness operation for the externally saved test harness ''{0}'' since the directory {1} is not writable.</entry>
        <entry key="InvalidConvertOption">The option ''{0}'' passed to sltest.harness.convert is not a valid argument.  Valid arguments are "InternalToExternal" and "ExternalToInternal".</entry>
        <!-- Externally Saved Harness Messages (end)-->
        <entry key="HarnessType">Type:</entry>
        <entry key="CUT">Component under test:</entry>
        <entry key="HarnessTypeTesting">Testing</entry>
        <entry key="HarnessTypeObserver">Observer</entry>
        <entry key="HarnessDescription">Description:</entry>
        <entry key="HarnessDescriptionTab">Description</entry>
        <entry key="HarnessPreview">Preview</entry>
        <entry key="AdvancedOptions">Advanced Properties</entry>
        <entry key="ObjectivesGroup">Objectives</entry>
        <entry key="Objectives">Initial harness configuration:</entry>
        <entry key="HarnessEquivalenceCheckOwnerIsVirtualSubsystem">Checksum comparison disabled because harness owner is a virtual subsystem. Consider making the subsystem atomic to enable checksum comparison.</entry>
        <entry key="HarnessEquivalenceCheckOwnerIsModel">Checksum comparison skipped because the harness owner is a block diagram and checksums will be equivalent by definition.</entry>
        <entry key="HarnessEquivalenceCheckOverall">Overall:</entry>
        <entry key="HarnessEquivalenceCheckContents">Contents:</entry>
        <entry key="HarnessEquivalenceCheckInterface">Interface:</entry>
        <entry key="HarnessEquivalenceCheckSame">same</entry>
        <entry key="HarnessEquivalenceCheckDifferent">different</entry>
        <entry key="HarnessEquivalenceCheckNotification">Checksum comparison results for ''{0}'' owned by ''{1}'': {2}</entry>
        <entry key="HarnessComponentEditing">Enable component editing in harness model</entry>
        <entry key="GraphicalCreate">Create without compiling the model</entry>
        <entry key="GraphicalRebuild">Rebuild without compiling the model</entry>
        <entry key="HarnessActivate">Open harness after creation</entry>
        <entry key="RebuildOnOpenCheckbox">Rebuild harness on open</entry>
        <entry key="RebuildModelDataCheckbox">Update Configuration Parameters and Model Workspace data on rebuild</entry>
        <entry key="ActivateToolTip">Open</entry>
        <entry key="DeactivateToolTip">Close</entry>
        <entry key="RefreshToolTip">Refresh</entry>
        <entry key="UpdateToolTip">Update</entry>
        <entry key="DeleteToolTip">Delete</entry>
        <entry key="PrototypingObjectiveString">Prototyping</entry>
        <entry key="RefinementDebuggingObjectiveString">Refinement/Debugging</entry>
        <entry key="VerificationObjectiveString">Verification</entry>
        <entry key="CustomObjectiveString">Custom</entry>
        <entry key="TooManyOutputsForSignalBuilder">The computed number of outputs for the Signal Builder source block is greater than {0, number, integer}, which is the maximum permitted for this block. Consider choosing another source type such as Inport or From Workspace blocks.</entry>
        <entry key="FailForComplexDatatype_Scope">The input {0, number, integer} of the component has complex data type. Complex data type is not supported by the Scope block.</entry>
        <entry key="FailForBusWithFrames_Scope">The input {0, number, integer} of the component has signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the Scope block.</entry>
        <entry key="FailForVariableDims_Scope">The input {0, number, integer} of the component has variable dimensional signal. Variable dimensional signal is not supported by the Scope block.</entry>          
        <entry key="FailForAOB_Scope">The input {0, number, integer} of the component has array of bus. Array of bus is not supported by the Scope block.</entry>
        <entry key="CanNotBeCreatedForComplexDatatype_SCOPE">Cannot create a harness for the selected component because one or more outputs of the component have complex data type. Complex data type is not supported by the Scope block.</entry>
        <entry key="CanNotBeCreatedForAOB_SCOPE">Cannot create a harness for the selected component because one or more inputs of the component have array of bus. Array of bus is not supported by the scope block.</entry>
        <entry key="CanNotBeCreatedForBusWithFrames_SCOPE">Cannot create a harness for the selected component because one or more inputs of the component have signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the scope block.</entry>
        <entry key="VariableDimsNotSupported_SCOPE">Cannot create a harness for the selected component because one or more inputs of the component have variable dimensional signal. Variable dimensional signal is not supported by the scope block.</entry>          
        <entry key="CanNotBeCreatedForAOB_FileSrc">Cannot create a harness for the selected component because one or more inputs of the component have array of bus. Array of bus is not supported by the From File block.</entry>
        <entry key="CanNotBeCreatedForBusWithFrames_FileSrc">Cannot create a harness for the selected component because one or more inputs of the component have signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the From File block.</entry>
        <entry key="VariableDimsNotSupported_FileSrc">Cannot create a harness for the selected component because one or more inputs of the component have variable dimensional signal. Variable dimensional signal is not supported by the From File block.</entry>          
        <entry key="FailForBusWithFrames_FileSrc">The input {0, number, integer} of the component has signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the From File block.</entry>
        <entry key="FailForVariableDims_FileSrc">The input {0, number, integer} of the component has variable dimensional signal. Variable dimensional signal is not supported by the From File block.</entry>          
        <entry key="FailForAOB_FileSrc">The input {0, number, integer} of the component has array of bus. Array of bus is not supported by the From File block.</entry>
        <entry key="CanNotBeCreatedForAOB_FileSink">Cannot create a harness for the selected component because one or more outputs of the component have array of bus. Array of bus is not supported by the To File block.</entry>
        <entry key="CanNotBeCreatedForBusWithFrames_FileSink">Cannot create a harness for the selected component because one or more outputs of the component have signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the To File block.</entry>
        <entry key="VariableDimsNotSupported_FileSink">Cannot create a harness for the selected component because one or more outputs of the component have variable dimensional signal. Variable dimensional signal is not supported by the To File block.</entry>          
        <entry key="FailForBusWithFrames_FileSink">The input {0, number, integer} of the component has signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the To File block.</entry>
        <entry key="FailForVariableDims_FileSink">The input {0, number, integer} of the component has variable dimensional signal. Variable dimensional signal is not supported by the To File block.</entry>          
        <entry key="FailForAOB_FileSink">The input {0, number, integer} of the component has array of bus. Array of bus is not supported by the To File block.</entry>
        <entry key="CanNotBeCreatedForAOB_FromWrkSpcSrc">Cannot create a harness for the selected component because one or more inputs of the component have array of bus. Array of bus is not supported by the From Workspace block.</entry>
        <entry key="CanNotBeCreatedForBusWithFrames_FromWrkSpcSrc">Cannot create a harness for the selected component because one or more inputs of the component have signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the From Workspace block.</entry>
        <entry key="VariableDimsNotSupported_FromWrkSpcSrc">Cannot create a harness for the selected component because one or more inputs of the component have variable dimensional signal. Variable dimensional signal is not supported by the From Workspace block.</entry>          
        <entry key="FailForBusWithFrames_FromWrkSpcSrc">The input {0, number, integer} of the component has signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the From Workspace block.</entry>
        <entry key="FailForVariableDims_FromWrkSpcSrc">The input {0, number, integer} of the component has variable dimensional signal. Variable dimensional signal is not supported by the From Workspace block.</entry>          
        <entry key="FailForAOB_FromWrkSpcSrc">The input {0, number, integer} of the component has array of bus. Array of bus is not supported by the From Workspace block.</entry>
        <entry key="FailForBusWithFrames_ToWrkSpcSink">The input {0, number, integer} of the component has signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the To Workspace block.</entry>
        <entry key="FailForVariableDims_ToWrkSpcSink">The input {0, number, integer} of the component has variable dimensional signal. Variable dimensional signal is not supported by the To Workspace block.</entry>          
        <entry key="FailForAOB_ToWrkSpcSink">The input {0, number, integer} of the component has array of bus. Array of bus is not supported by the To Workspace block.</entry>
        <entry key="CanNotBeCreatedForAOB_ToWrkSpcSink">Cannot create a harness for the selected component because one or more outputs of the component have array of bus. Array of bus is not supported by the To Workspace block.</entry>
        <entry key="CanNotBeCreatedForBusWithFrames_ToWrkSpcSink">Cannot create a harness for the selected component because one or more inputs of the component have signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the To Workspace block.</entry>
        <entry key="VariableDimsNotSupported_ToWrkSpcSink">Cannot create a harness for the selected component because one or more inputs of the component have variable dimensional signal. Variable dimensional signal is not supported by the To Workspace block.</entry>          
        <entry key="InvalidPropertyField">Property field ''{0}'' entered is not valid.  Please enter a valid property name to create a harness</entry>
        <entry key="InvalidCreateGraphicalHarnessValue">Invalid value entered for ''{0}''. Please enter either 0 or 1</entry>
        <entry key="InvalidLockModeValue">Invalid value entered for ''{0}''. Please enter either 0 or 1</entry>
        <entry key="InvalidSink" note="stringDatatypeUpdate">Invalid value entered for ''{0}''. Please enter a character vector</entry>
        <entry key="InvalidSource" note="stringDatatypeUpdate">Invalid value entered for ''{0}''. Please enter a character vector</entry>
        <entry key="NonExistentDescription">Invalid or no value entered for ''{0}''</entry>
        <entry key="InvalidDescription" note="stringDatatypeUpdate">Invalid value entered for ''{0}''. Please enter a character vector</entry>
        <entry key="InvalidName" note="stringDatatypeUpdate">Invalid value entered for ''{0}''. Please enter a character vector</entry>
        <entry key="NoHarnessExist">No harnesses exist for the model, block or subsystem</entry>
        <!-- New Entries -->
        <entry key="InvalidFieldForUpdate">The fields that can be updated for a harness are ''{0}''.</entry>
        <entry key="NotEnoughInputArgs">Not enough input arguments. Please see documentation for further details.</entry>        
        <entry key="HarnessActivationAborted">Harness opening aborted. See error message below for the cause."</entry>
        <entry key="RedirectSaveHarnessToSystemModel">Save commands on the harness model ''{0}'' are being re-directed to the main model ''{1}'', which will automatically save this harness.</entry>
        <entry key="NameTooLong">New harness name ''{0}'' is too long. Please use a name whose length is not longer than 58 characters.</entry>
        <entry key="ProtectedModelNotSupported">Test harness models cannot be converted to a protected model.</entry>
        <entry key="CreateInMDLFormatNotSupported">Test harness cannot be created for a model in MDL format.</entry>
        <entry key="SaveInMDLFormatNotSupported">Models that contain Test harnesses cannot be saved in MDL format. To save this model, either save ''{0}'' in SLX format, or use sltest.harness.delete to delete test harnesses or sltest.harness.export to export test harnesses to separate files and perform the save operation again.</entry>
       <entry key="ErrorOnTriggTs">Cannot create a harness for the selected component because the input signal ''{0}'' has triggered sample time.</entry>
        <entry key="ConfigSetActivationFailed">Unable to activate updated configuration parameters ''{0}'' for harness model ''{1}''. Please activate it manually using the Model Explorer tool after addressing the underlying cause.</entry>
        <entry key="WarnAboutConstantToContinuousConversion">Sample time of the input signal ''{0}'' has been converted from constant to continuous in the harness model.</entry>
        <entry key="WarnAboutVariableToContinuousConversion">Sample time of the input signal ''{0}'' has been converted from variable to continuous in the harness model.</entry>
        <entry key="WarnAboutTriggeredToContinuousConversion">Sample time of the input signal ''{0}'' has been converted from triggered to continuous in the harness model.</entry>
        <entry key="InputconversionSSAnnotationText">This subsystem has been inserted by Simulink to adapt the output of the source blocks to the interface required by the harnessed component.\n Modifying the contents of this subsystem may result in compilation and simulation failure.</entry>
        <entry key="OutputconversionSSAnnotationText">This subsystem has been inserted by Simulink to adapt the output of the harnessed component to the interface required by the sink blocks.\n Modifying the contents of this subsystem may result in compilation and simulation failure.</entry>
        <entry key="InactiveOrCommentedBlockNotSupported">Harness operations are not supported for blocks that are inactive or commented, or within a block that is inactive or commented.</entry>
        <entry key="RepeatingInputParameters"> The parameter ''{0}'' is already specified. Duplicate parameters are not allowed. Aborting harness command.</entry>
        <entry key="ExportDeleteHarnessFromSystemModel"> Exporting the harness ''{0}'' to an independently saved model.  This operation deletes the harness from the main model.  Please re-save ''{1}'' to synchronize changes to the main model.</entry>
        <entry key="ExportedGraphicalFunctionsFromOutsideHarnessUsed">The exported function ''{0}'' that lives outside the harness in ''{1}'' is being called from ''{2}'' inside the harness. This will cause an error at simulation time.</entry>  
        <entry key="ExportToVersionDiscardsHarnessInfo">Exporting to a version prior to R2015a discards saved test harnesses.  All harness information will be lost.  Consider saving a version of the model in the current release, or using sltest.harness.export to export test harnesses to separate .slx files.</entry>
        <entry key="ExportToMDLDiscardsHarnessInfo">Exporting to a model in .mdl format discards saved test harnesses.  All harness information will be lost.  Consider saving a version of the model in .slx format in the current release, or using sltest.harness.export to export test harnesses to separate .slx files.</entry>
        <entry key="ExportToVersionNotSupportedForHarnessModel">Exporting to a previous version is not supported for harness models.</entry>
        <entry key="ExportToVersionNotSupportedActiveHarness">Exporting to a previous version is not supported when there is an open test harness.  Please close ''{0}'' and perform the operation again.</entry>
        <entry key="CannotCheckHarnessWhenAnotherHarnessIsActive">Cannot compare the checksums of the test harness ''{0}'' on ''{1}'' because another test harness is currently open. Please close the test harness ''{2}'' on ''{3}'' first.</entry>
        <entry key="CheckHarnessFailedNotification">Failed to compare the checksums of test harness ''{0}'' owned by ''{1}''.</entry>
        <entry key="CheckHarnessFailedSystemChecksum">Failed to compare the checksums of test harness ''{0}'' owned by ''{1}'' due to error computing checksum for main model block ''{2}''.</entry>
        <entry key="CheckHarnessFailedHarnessChecksum">Failed to compare the checksums of test harness ''{0}'' owned by ''{1}'' due to error computing checksum for harness model block ''{2}''.</entry>
        <entry key="CheckHarnessMissingDetailsArgument">The ''details'' output argument is requested, but the ''systemDetails'' input argument is not provided.</entry>
        <entry key="RepairSavedHarness">The test harness ''{0}'' was saved in an inconsistent state.  Attempting to repair the harness and its connections. Please resave the model to ensure the harness is saved in a proper state.</entry>
        <entry key="RepairSavedHarnessFailed">The test harness ''{0}'' was saved in an inconsistent state.  Attempting to repair the harness and its connections failed.  Please manually repair the harness and re-save.</entry>
        <entry key="UpdatedHarnessSavedIn15A15B">The test harness ''{0}'' was saved in previous version and it has been updated. Please resave the harness and model. </entry>
        <entry key="ErrorOutForMixedDataType">Cannot create a harness for the component because one or more inputs and/or outputs have mixed data type. Mixed data type is not supported in the harness model.</entry>
        <entry key="ErrorOutForMixedDimensions">Cannot create a harness for the component because one or more inputs and/or outputs have mixed dimension. Mixed dimension is not supported in the harness model.</entry>
        <entry key="ErrorOutForMixedTs">Cannot create a harness for the component because one or more inputs and/or outputs have mixed sample time. Mixed sample time is not supported in the harness model.</entry>
        <entry key="ErrorOutForMixedComplexity">Cannot create a harness for the component because inputs and/or outputs have mixed complexity. Mixed complexity is not supported in the harness model.</entry>
        <entry key="FailForMixedDataType_In">The input port {0, number, integer} of the component under test has mixed data type. Mixed data type is not supported in the harness model.</entry>
        <entry key="FailForMixedDimensions_In">The input port {0, number, integer} of the component under test has mixed dimension. Mixed dimension is not supported in the harness model.</entry>
        <entry key="FailForMixedTs_In">The input port {0, number, integer} of the component under test has mixed sample time. Mixed sample time is not supported in the harness model.</entry>
        <entry key="FailForMixedComplexity_In">the input port {0, number, integer} of the component under test has mixed complexity. Mixed complexity is not supported in the harness model.</entry>
        <entry key="FailForMixedDataType_Out">The output port {0, number, integer} of the component under test has mixed data type. Mixed data type is not supported in the harness model.</entry>
        <entry key="FailForMixedDimensions_Out">The output port {0, number, integer} of the component under test has mixed dimension. Mixed dimension is not supported in the harness model.</entry>
        <entry key="FailForMixedTs_Out">The output port {0, number, integer} of the component under test has mixed sample time. Mixed sample time is not supported in the harness model.</entry>
        <entry key="FailForMixedComplexity_Out">the output port {0, number, integer} of the component under test has mixed complexity. Mixed complexity is not supported in the harness model.</entry>
        <entry key="UnableToFindIOBlocks">Unable to find IO Blocks associated with the saved test harness ''{0}''. </entry>
        <entry key="PushHarnessSuccessNotification">Successfully pushed settings for test harness ''{0}'' owned by ''{1}'', to main model ''{2}''.</entry>
        <entry key="RebuildHarnessSuccessNotification">Harness ''{0}'' has been successfully rebuilt from ''{1}'' in conformance with original source (''{2}'') and sink (''{3}'') specifications.</entry>
        <entry key="RebuildHarnessSuccessNotificationTestSequence">Harness ''{0}'' has been successfully rebuilt from ''{1}'' in conformance with the original source (''{2}'') specification.</entry>
        <entry key="PushHarnessFailedNotification">Failed to push settings from test harness ''{0}'' owned by ''{1}'', to main model ''{2}''.</entry>
        <entry key="RebuildHarnessFailedNotification">Failed to rebuild test harness ''{0}'' owned by ''{1}''.</entry>
        <entry key="CannotPushHarnessWhenAnotherHarnessIsActive">Cannot push the active configuration parameters object and model workspace variables used by the test harness ''{0}'' on ''{1}'' because another test harness is currently open. Please close the test harness ''{2}'' on ''{3}'' first.</entry>
        <entry key="CannotRebuildHarnessWhenAnotherHarnessIsActive">Cannot rebuild the test harness ''{0}'' on ''{1}'' because another test harness is currently open. Please close the test harness ''{2}'' on ''{3}'' first.</entry>
        <entry key="MainModel">Main Model</entry>
        <entry key="SimHarness">Internal Test Harness</entry>
        <entry key="ExternalSimHarness">External Test Harness</entry>
        <entry key="SimHarnesses">Internal Test Harnesses</entry>
        <entry key="ExternalSimHarnesses">External Test Harnesses</entry>
        <entry key="System">System</entry>
        <entry key="ErrorLoadingHarness">There was an error loading the test harness ''{0}'' from file.  There is a model or library of the same name that is currently open.  Please close this model or library and try again.</entry> 
        <entry key="ErrorSavingHarness">There was an error saving the test harness ''{0}'' to file.  There is a model or library of the same name that is currently open.  Please close this model or library and try again.</entry> 
        <entry key="ErrorAutoSavingHarness">There was an error autosaving the test harness ''{0}'' to file.  There is a model or library of the same name that is currently open.  Please close this model or library and try again.</entry>
        <entry key="OutputSegDisconnectedFromCUT">The segment which was connected to the output port {0, number, integer} of the component, has been disconnected.</entry>
        <entry key="InputSegDisconnectedFromCUT">The segment which was connected to the input port {0, number, integer} of the component, has been disconnected.</entry>
        <entry key="OutputSegDisconnectedFromConvSS">The segment which was connected to the output port {0, number, integer} of the conversion subsystem ''{1}'', has been disconnected.</entry>
        <entry key="InputSegDisconnectedFromConvSS">The segment which was connected to the input port {0, number, integer} of the conversion subsystem ''{1}'', has been disconnected.</entry>
        <entry key="SLCINotSupported">Simulink Code Inspector is currently not supported for test harness models.</entry>
        <entry key="UnrecognizedDSMDataType">'Test Harness: unrecognized data type for Data Store Memory'</entry>
        <entry key="InvalidHandleToCloseScopes">'Invalid Handle provided. Block diagram handle expected in Simulink.harness.internal.closeAllScopes'</entry>
        <entry key="LicenseError">Simulink Test license error.</entry>
        <entry key="LicenseNotAvailable">Unable to checkout a Simulink Test license needed to use this feature.</entry>
        <entry key="SaveTestSequenceDemoWithoutLicense">A Simulink Test license is required to save demo models containing Test Sequence blocks.</entry>
        <entry key="TestSequenceWithoutLicense">The model {0} contains Test Sequence blocks. A Simulink Test license is required to save or simulate models containing Test Sequence blocks.</entry>
        <entry key="HarnessPushAborted">Harness push aborted due to the following errors.</entry>
        <entry key="HarnessRebuildAborted">Harness rebuild aborted due to the following errors.</entry>
        <entry key="IgnoringActiveFixtPtOverrideMode">The data type setting for the block ''{0}'' has been overridden by a containing block or the model. The override settings for the block will not be transferred to the harness model.</entry> 
        <entry key="ReadErrorInputConvSS">Could not rebuild the input conversion subsystem ''{0}'' because the user data of the subsystem is corrupted.</entry>
        <entry key="ReadErrorOutputConvSS">Could not rebuild the output conversion subsystem ''{0}'' because the user data of the subsystem is corrupted.</entry>
        <entry key="HarnessDirtyDueToOwnerInterfaceChange">Harness model has been modified as the owner subsystem interface was changed.</entry>
        <entry key="AtomicActionException">Another harness action attempted during an existing harness action.</entry>
        <entry key="OwnerFileNameNotSupported">''{0}'' is not a Test Harness. The OwnerFileName parameter is for use with Test Harnesses only. Use the FileName parameter instead. To check if a model is a Test Harness, use the IsHarness parameter.</entry>
        <entry key="HarnessVerificationMode">Verification Mode:</entry>
        <entry key="InvalidTargetForSILPIL">'Software-in-the-loop (SIL)' and 'Processor-in-the-loop (PIL)' verification modes require code generation target to be set to 'ert.tlc' or a derivative of 'ert.tlc'.</entry>
        <entry key="CannotExecuteHarnessOperationAsBDIsBusy">Cannot execute harness operation for harness ''{0}'' as the model is busy.</entry>
        <entry key="InvalidLockModeForSILPIL">Component editing cannot be enabled for 'Software-in-the-loop (SIL)' or 'Processor-in-the-loop (PIL)' verification mode harnesses. Ignoring the option to enable component editing.</entry>
        <entry key="InvalidLockModeForModelReference">Component editing cannot be disabled for Model block harnesses. Ignoring the option to disable component editing.</entry>
        <entry key="InvalidLockModeForBD">Component editing cannot be disabled for block diagram harnesses. Ignoring the option to disable component editing.</entry>
        <entry key="InvalidLockModeForLinkedSS">Component editing cannot be disabled for linked block harnesses. Ignoring the option to disable component editing.</entry>
        <entry key="InvalidCreateGraphicalForSILPIL">Cannot create harness without compiling for 'Software-in-the-loop (SIL)' or 'Processor-in-the-loop (PIL)' verification mode for subsystems. Ignoring the option to create harness without compiling.</entry>
        <entry key="SILPILNotSupportedForVirtualSubsystem">Cannot create a 'Software-in-the-loop (SIL)' or 'Processor-in-the-loop (PIL)' verification mode harness for a virtual subsystem. Turn on the 'Treat as atomic unit' option for the subsystem and try again.</entry>
        <entry key="SILPILNeedsERT">Creating 'Software-in-the-loop (SIL)' or 'Processor-in-the-loop (PIL)' verification mode harness requires Embedded Coder license. Aborting harness creation.</entry>
        <entry key="UseSeparateAssessmentForReactiveTest">Add separate assessment block</entry>
        <entry key="HarnessUseTSForFcnCall">Drive function-call inputs with Test Sequence block</entry>
        <entry key="IgnoringDriveFcnCallWithTestSequence">Ignoring 'DriveFcnCallWithTestSequence' option. Function call input triggers to the component under test will be generated by the 'Test Sequence' source block as this block natively supports function-call triggers.</entry>
        <entry key="InvalidSinkForReactiveTest">'Sink' flag is ignored when 'Source' is 'Test Sequence'.</entry>
        <entry key="CustomPath">Path:</entry>
        <entry key="InvalidLibPath">Path to library block ''{0}'' was not found on the MATLAB path.</entry>
        <entry key="InputPortsFoundForSourceBlock">Custom source block ''{0}'' has input ports, which is not allowed.</entry>
        <entry key="IncorrectNumberOfOutputPortsForSourceBlock">Custom source block ''{0}'' must have exactly one output port.</entry>
        <entry key="InvalidPortsFoundForSourceBlock">Custom source block ''{0}'' must not have Enable, Trigger, State, LConn, RConn, Ifaction or Reset ports.</entry>
        <entry key="OutputPortsFoundForSinkBlock">Custom sink block ''{0}'' has output ports, which is not allowed.</entry>
        <entry key="IncorrectNumberOfInputPortsForSinkBlock">Custom sink block ''{0}'' must have exactly one input port.</entry>
        <entry key="InvalidPortsFoundForSinkBlock">Custom sink block ''{0}'' must not have Enable, Trigger, State, LConn, RConn, Ifaction or Reset ports.</entry>
        <entry key="CustomPathMustBeSpecified">The full path to a library block must be specified if the 'Source' or 'Sink' parameters are set to 'Custom'.</entry>
        <entry key="CouldNotLoadCompBusForVB">Unable to compute bus parameters for ''{0}'' port {1, number, integer} of block ''{2}''. This may be due to inconsistent bus settings in the model. To debug this issue, set the 'Bus To Vector' diagnostic (Configuration Parameters > Diagnostics > Connectivity > Bus To Vector) to 'error' and recompile the model.</entry>
        <entry key="PushAbortedAsMainBDIsCompiled">Harness push command aborted since the main model ''{0}''  is in a compiled state.</entry>
        <entry key="BlocksUnderStateflowNotSupported">Harness operations are not supported for blocks that are children of Stateflow-based blocks.</entry>
        <entry key="PasteFailed">Could not copy harness(es) for block ''{0}'' because of the following reason: {1}</entry>
        <entry key="CopyFailed">Could not copy harness ''{0}'' for block ''{1}'' because of the following reason: {2}</entry>
        <entry key="CannotPasteIntoALibrary">Pasting harnesses into a library model is not allowed.</entry>
        <entry key="CannotPasteIntoAHarness">Pasting harnesses into a harness model is not allowed.</entry>        
        <entry key="HarnessLoadFailed">Unable to load Test Harness ''{0}''. </entry>
        <entry key="HarnessBlockDiagramLoadFailed">Unable to load the block diagram associated with Test Harness ''{0}''.  A possible reason for this failure is that the block diagram was not saved or was saved in a corrupted state.  Please delete the test harness, create a new test harness, and save again. </entry>
        <entry key="PrototypingMsg">Full default control over component editing and model-harness sync. Choose this if your model does not compile.</entry>
        <entry key="DevelopingMsg">Component development and debugging in the compiled context of main model. Requires your main model to compile.</entry>
        <entry key="TestingMsg">Locked component under test with automatic resynchronization with main model. Choose this to select 'Software-in-the-loop (SIL)' or 'Processor-in-the-loop (PIL)' verification modes.</entry>
        <entry key="CustomObjMsg">Choose this to enable fine-grained control over the options below</entry>
        <entry key="CopyFailedBecauseHarnessIsActive">Could not copy harness ''{0}'' for block ''{1}'' because it is open. Harness(es) cannot be copied if they are open. Please close the harness and retry the copy operation.</entry>
        <entry key="SyncFailedAsSourceIsCompiled">Unable to synchronize any changes made to ''{0}'' because the main model is in a compiled state. Any changes made to this block will be discarded.</entry>
        <entry key="SyncWillFailAsSourceIsCompiled">Harness is being opened for a component whose main model is in a compiled state. Any changes made to the component under test will be discarded on harness close.</entry>
        <entry key="TestHarnessNotSupportedForMdlRefBuilds">Model Reference target is not supported for ''{0}'' because it is a test harness.</entry>
        <entry key="StateflowLicenseRequired">Stateflow license required for creating/opening harnesses for models or subsystems with Stateflow charts.</entry>
        <entry key="PerspectivesOpenHarness">Open test harness</entry>
        <entry key="PerspectivesCloseHarness">Close test harness</entry>
        <entry key="PerspectivesDeleteHarness">Delete test harness</entry> 
        <entry key="PerspectivesCloneHarness">Clone test harness</entry> 
        <entry key="PerspectivesContextMenu">Harness operations</entry>
        <entry key="PerspectiveDisabledAsAnotherHarnessActive">Disabled because another test harness is open</entry>
        <entry key="PerspectiveDisabledBecauseOfDiagramState">Disabled</entry>
        <entry key="ContextualPerspectivesTooltip">Test harnesses available</entry>
        <entry key="CannotCreateWhenLoading">Harnesses cannot be created because the model ''{0}'' is being loaded.</entry>
        <entry key="CannotCreateWhenBDIsBeingCompiled">Harnesses cannot be created because the model ''{0}'' is being compiled.</entry>
        <entry key="CannotCreateWhenBDIsCompiled">Harnesses cannot be created because the model ''{0}'' is simulating or is compiled and fast restart is not enabled.</entry>
        <entry key="CannotCreateWhenClosing">Harnesses cannot be created because the model ''{0}'' is being closed.</entry>
        <entry key="VariableTsNotSupported_RT_In">The input {0, number, integer} of the component has variable sample time. Variable sample times are not supported by the Test Sequence block.</entry>
        <entry key="VariableTsNotSupported_RT_Out">The output {0, number, integer} of the component has variable sample time. Variable sample times are not supported by the Test Sequence block.</entry>
        <entry key="BusWithFramesNotSupported_RT_In">The input {0, number, integer} of the component has signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the Test Sequence block.</entry>
        <entry key="BusWithFramesNotSupported_RT_Out">The output {0, number, integer} of the component has signal(s) with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the Test Sequence block.</entry>
        <entry key="FcnCallAndActionDTNotSupported_RT_In">The input {0, number, integer} of the component has wide fcn_call or action signal type. These signal types are not supported by the Test Sequence block.</entry>
        <entry key="MultipleDiscreteRatesInBusElementNotSupported_RT_In">The input {0, number, integer} of the component is a bus signal and the bus elements have multiple discrete sample times. This is not supported by the Test Sequence block.</entry>
        <entry key="MultipleDiscreteRatesInBusElementNotSupported_RT_Out">The output {0, number, integer} of the component is a bus signal and the bus elements have multiple discrete sample times. This is not supported by the Test Sequence block.</entry>
        <entry key="VarTrigAsyncStInBusElementNotSupported_RT_In">The input {0, number, integer} of the component is a bus signal and one or more of its elements has variable, triggered or asynchronous sample times. The Test Sequence block only supports buses with constant, continuous, fixed-in-minor-step or discrete sample times.</entry>
        <entry key="VarTrigAsyncStInBusElementNotSupported_RT_Out">The output {0, number, integer} of the component is a bus signal and one or more of its elements has variable, triggered or asynchronous sample times. The Test Sequence block only supports buses with constant, continuous, fixed-in-minor-step or discrete sample times.</entry>
        <entry key="VBusWithNoBusObjNotSupported_RT_In">The input {0, number, integer} of the component has virtual bus without a bus object. Virtual bus without a bus object is not supported by the Test Sequence block.</entry>
        <entry key="VBusWithNoBusObjNotSupported_RT_Out">The output {0, number, integer} of the component has virtual bus without a bus object. Virtual bus without a bus object is not supported by the Test Sequence block.</entry>
        <entry key="VBusWithNoBusObjNotSupported_RT_FromIn">The output of the From Block ''{0}'' has virtual bus without a bus object. Virtual bus without a bus object is not supported by the Test Sequence block.</entry>
        <entry key="VBusWithNoBusObjNotSupported_RT_GotoOut">The input of the Goto Block ''{0}'' has virtual bus without a bus object. Virtual bus without a bus object is not supported by the Test Sequence block.</entry>
        <entry key="WarnAboutContToZOHTsConversion">The component under test is a Stateflow object but does not have continuous time support enabled. For this reason, the sample time of the input {0, number, integer} has been converted from continuous to fixed-in-minor-step in the harness model.</entry>
        <entry key="ErrorWhileDeletingPrefFile">Failed while trying to delete obsolete preferences file for test harnesses. Please manually delete ''TestHarnessPrefs.xml'' in the MATLAB preferences directory. Use the MATLAB command ''prefdir'' to locate your preferences directory.</entry>
        <entry key="MixOfContAndMultipleDiscreteTs_RT">A Test harness cannot be created for the selected component because its inputs have multiple discrete sample times and constant or continuous or fixed-in-minor sample time. This behavior is not supported by the Test Sequence block.</entry>
        <entry key="FailForMixOfContAndMultipleDiscreteTs_RT">The inputs of the component have multiple discrete sample times and constant or continuous or fixed-in-minor sample time. This behavior is not supported by the Test Sequence block.</entry>
        <entry key="WarnOnOverridenRebuildOpt">The RebuildModelData parameter for harness ''{0}'' has been overridden from {1,number,integer} to {2,number,integer}. Using the overridden value for this operation.</entry>
        <entry key="SILPILNotSupportedForFastRestart">Creating and rebuilding harnesses configured for "Software-in-the-loop (SIL)" or "Processor-in-the-loop (PIL)" is not supported when the main model is configured for fast restart. Please turn off fast restart before attempting this operation.</entry>
        <entry key="LockModeNotEnforcedForSelfModifiableMaskSubsystem">Component under test is a self modifiable mask subsystem. Lock mode will not be enforced for such subsystems.</entry>
        <entry key="CannotAddOrEditMaskForLockedHarnessCUT">Masks cannot be added or edited for active harness component under test or blocks with-in when component editing is disabled for component under test in harness.</entry>
        <entry key="CreateHarnessStage">Test Harness Creation</entry>
        <entry key="OpenHarnessStage">Test Harness Open</entry>
        <entry key="RebuildHarnessStage">Test Harness Rebuild</entry>
        <entry key="PushHarnessStage">Test Harness Push</entry>
        <entry key="ExportHarnessStage">Test Harness Export</entry>
        <entry key="DeleteHarnessStage">Test Harness Delete</entry>
        <entry key="CheckHarnessStage">Test Harness Check</entry>
        <entry key="ExportInternalHarnessesStage">Export Internally Saved Test Harnesses</entry>
        <entry key="ImportExternalHarnessesStage">Import Externally Saved Test Harnesses</entry>
        <entry key="MoveHarnessStage">Test Harness Move</entry>
        <entry key="OpenHarnessFailed">Harness open failed.</entry>
        <entry key="DeleteHarnessFailed">Harness deletion failed.</entry>
        <entry key="MoveHarnessFailed">Harness move failed.</entry>
        <entry key="InputFrameBitIgnored">The Frame-based sampling mode specification for input signal {0, number, integer} named ''{1}'' is being ignored. If you want to preserve Frame-based sampling mode for this input, insert a 'Check Signal Attributes' block from the DSP System Toolbox block library and configure it appropriately.</entry>
        <entry key="OutputFrameBitIgnored">The Frame-based sampling mode specification for output signal {0, number, integer} named ''{1}'' is being ignored. If you want to preserve Frame-based sampling mode for this output, insert a 'Check Signal Attributes' block from the DSP System Toolbox block library and configure it appropriately.</entry>
        <entry key="CustomSrcPathSpecifiedForBuiltInSrc">Custom source paths cannot be specified when the source type is not 'Custom'.</entry>
        <entry key="CustomSinkPathSpecifiedForBuiltInSink">Custom sink paths cannot be specified when the sink type is not 'Custom'.</entry>
        <entry key="LockedBDForHarness">Cannot modify locked model ''{0}'' because the test harness ''{1}'' belonging to it is open. Close the harness to unlock the model.</entry>
        <entry key="InvalidSSHandle">A handle to a subsystem block must be passed in</entry>
        <entry key="ScopeInconsistency">Found scope inconsistency for goto-tag '{0}'</entry>
        <entry key="GoToTagVisibility">Found scope inconsistency for goto-tag '{0}</entry>
        <entry key="HeadlessMATLABNotSupported">Harness operations are not supported because MATLAB was started with -nodisplay option. Please restart MATLAB without this option to enable harness operations.</entry>
        <entry key="SILBlockGenFailed">Unable to generate Software-in-the-loop (SIL) block for the component under test. Please generate code for the component to debug this failure.</entry>
        <entry key="PILBlockGenFailed">Unable to generate Processor-in-the-loop (PIL) block for the component under test. Please generate code for the component to debug this failure.</entry>
        <entry key="CloseHarness">Test harness ''{0}'' belonging to ''{1}'' is open. Do you want to close it and close the model?</entry> 
        <entry key="FailRebuildOnInterfaceChange">The interface of the component under test has been changed by adding or deleting one or more inputs, outputs, function arguments or control ports. This disables rebuilding the input and output conversion subsystems and control inputs. Please close and re-open the harness to synchronize the component under test and retry the rebuild operation.</entry> 
        <entry key="MdlRefFailRebuildOnInterfaceChange">The interface of the Model block has been changed due to the addition or deletion of Initialize, Reset or Terminate ports. This disables rebuilding the input and output conversion subsystems and control inputs. Please close and re-open the harness to synchronize the Model block settings and retry the rebuild operation.</entry> 
        <entry key="NoSimForlockedBD">Cannot compile or simulate locked model ''{0}'' because the test harness ''{1}'' belonging to it is open. Close the harness and retry.</entry>
        <entry key="UpgradeAdvisorNotSupported">Upgrade Advisor is not supported for Test Harness models.</entry>
        <entry key="InvalidSimModeForHarnessBD">This simulation mode is not supported for harness models. Please select from Normal, Accelerated or Rapid Accelerated modes.</entry> 
        <entry key="TestSeqSrcOutputNotInitialized">Skipping ground value initialization for output ''{0}'' for Test Sequence block ''{1}'' because it is a bus signal containing variable sized elements. Please initialize this output manually before running a simulation.</entry>
        <entry key="NoOpenTestCasesFound">No open test cases found for this harness.</entry>
        <entry key="CreateNewTestcase">Open Test Manager to create new test case</entry>
        <entry key="OpenTestcases">Open test cases:</entry>
        <entry key="TestHarnessProperties"> Test harness properties ... </entry>
        <entry key="HarnessBadgeDialogTitle"></entry>
        <entry key="CannotCloneAsTestHarnessIsOpen">The test harness ''{0}'' cannot be cloned because it is loaded or open. Please close the harness before cloning it.</entry>
        <entry key="CannotCloneWhenSystemIsBusy">Cannot clone the test harness ''{0}'' because the system is busy. This is possible if the main model is being compiled or simulated or if the harness cannot be opened because another model with the same name is open.</entry>
        <entry key="CouldNotLoadCompiledSigDescriptorInput">Could not compute compiled signal attributes for input port {0, number, integer} of the component under test. This is most likely because the block is part of an inactive variant and was removed during model update. Activate the variant or choose the 'Prototyping' harness objective to create a harness for this component.</entry>
        <entry key="CouldNotLoadCompiledSigDescriptorOutput">Could not compute compiled signal attributes for output port {0, number, integer} of the component under test. This is most likely because the block is part of an inactive variant and was removed during model update. Activate the variant or choose the 'Prototyping' harness objective to create a harness for this component.</entry>
        <entry key="BlockDiagramHarnessNameChange">The name of the model being referenced by Test Harness ''{0}'' has changed.  Updating the model name of the Model block within the test harness. Please resave the model to save changes.</entry>
        <entry key="TestHarnessNotFound">Could not find the test harness ''{0}'' for ''{1}''.</entry>
        <entry key="SLDVExportAborted">Export operation aborted.</entry>
        <entry key="SLDVExportSelectHarness">Select an existing test harness for export.</entry>
        <entry key="SLDVExportCreateHarness">Create a new test harness for export.</entry>
        <entry key="SLDVExportDialogTitle">Harness Selection</entry>
        <entry key="SLDVExportDialogInfo">Choose destination harness.</entry>
        <entry key="SLDVImport_CannotCreateTestHarness">Cannot create a new test harness when importing Simulink Design Verifier results created from the test harness ''{0}''.</entry>
        <entry key="SLDVImport_CannotUseOtherTestHarness">Cannot reuse another test harness ''{0}'' when importing Simulink Design Verifier results created from the test harness ''{1}''.</entry>
        <entry key="AbortSLDVUrlCall">Cannot perform this operation because the test harness ''{0}'' belonging to the model ''{1}'' is open. Please close the harness before performing this operation.</entry>
        <entry key="AbortSLDVUrlCallTitle">Error</entry>
        <entry key="MismatchNumRootInports">Cannot use the test harness ''{0}'' because it has {1, number, integer} root inport blocks. Please specify a test harness which has exactly {2, number, integer} root inport blocks.</entry>
        <entry key="NoSLDVTestCasesORCounterExamples">Could not find any testcases or counter examples in the Simulink Design Verifier data file.</entry>
        <entry key="unexpectedDataFormat">The data file contains unexpected data formats. Please specify a file containing valid Simulink Design Verifier data.</entry>
        <entry key="SLDVExportDialogNote1">A New Harness ''{0}'' will be created.</entry>
        <entry key="SLDVExportDialogNote2">After closing the harness ''{0}''.</entry>
        <entry key="TestManagerNotFound">Test Manager could not be opened.</entry>
        <entry key="CannotUseDeletedHarnessName">The harness name ''{0}'' selected was being used by a harness in a block that has been deleted. This name is being reserved in the event that the delete block operation is undone. Please choose a different name.</entry>
        <entry key="InvalidParamValueForLibHarness">Ignoring the value of the parameter ''{0}'' because it must be set to ''{1}'' for a test harness of a library component.</entry>
        <entry key="InvalidParamValueForSLDVCompatHarness">Ignoring the value of the parameter ''{0}'' because it must be set to ''{1}'' for a SLDV Compatible test harness.</entry>
        <entry key="InvalidOwnerForLibHarnessCreation">A test harness cannot be created for a linked block which not in the top-level of the library.</entry>
        <entry key="CannotPushLibHarness">Cannot execute push harness operation for a test harness of a library component.</entry>
        <entry key="CannotRebuildLibHarness">Cannot execute rebuild harness operation for a test harness of a library component.</entry>
        <entry key="CannotPushWhenALibHarnessIsOpen">Cannot update the library ''{0}'' because a test harness of the library is open. Please close the test harness and try the operation again.</entry>
        <entry key="CannotCreateHarnessWhenLibIsLocked">Cannot create a test harness because the library ''{0}'' is locked.</entry>
        <entry key="CannotDeleteHarnessWhenLibIsLocked">Cannot delete a test harness because the library ''{0}'' is locked.</entry>
        <entry key="CannotSetHarnessWhenLibIsLocked">Cannot set a test harness property because the library ''{0}'' is locked.</entry>
        <entry key="CannotMoveHarnessWhenLibIsLocked">Cannot move a test harness because the library ''{0}'' is locked.</entry>
        <entry key="CannotCloneHarnessWhenLibIsLocked">Cannot clone a test harness because the library ''{0}'' is locked.</entry>
        <entry key="PostCreateCallBackError">The post create callback aborted with the following error(s).</entry>
        <entry key="CannotMoveWhenALibHarnessIsAlreadyOpen">Cannot move the test harness because another test harness of the library ''{0}'' is open. Please close the test harness and try the move operation again.</entry>
        <entry key="NoHarnessForOwner">Unable to perform the test harness close operation since there are no harnesses open for ''{0}''.</entry>
        <!-- Init/Term/Reset -->
        <entry key="InitTermResetSSNotSupported">Harnesses cannot be created for Initialize, Terminate or Reset subsystems.</entry>
        <entry key="InitTermResetGroup">Initialize/Terminate/Reset behavior</entry>
        <entry key="InitTermResetOption">Generate scheduler for Initialize, Reset and Terminate tasks</entry>
        <entry key="InvalidScheduleInitTermResetOption">Ignoring ''ScheduleInitTermReset'' setting. This option can only be set to true when creating a harness for an export function model.</entry>
        <!-- Autoshape inputs -->
        <entry key="InvalidAutoShapeInputsOption">Ignoring ''AutoShapeInputs'' setting. This option is only supported for ''Inport'' sources.</entry>
        <entry key="CanNotBeCreatedForComplexDatatype_SB">Cannot create a harness for the selected component because one or more inputs of the component have complex data type. Complex data type is not supported by the Signal Builder block.</entry>
        <entry key="CanNotBeCreatedForAOB_SB">Cannot create a harness for the selected component because one or more inputs of the component have array of bus. Array of bus is not supported by the Signal Builder block.</entry>
        <entry key="CanNotBeCreatedForBusWithFrames_SB">Cannot create a harness for the selected component because one or more inputs of the component have signals with frame-based sampling mode. Signals with frame-based sampling mode are not supported by the Signal Builder block.</entry>
        <entry key="VariableDimsNotSupported_SB">Cannot create a harness for the selected component because one or more inputs of the component have variable dimensional signal. Variable dimensional signal is not supported by the Signal Builder block.</entry>
        <entry key="FailForComplexDatatype_SB">The input {0, number, integer} of the component has complex data type. Complex data type is not supported by the Signal Builder block.</entry>
        <entry key="FailForBusWithFrames_SB">The input {0, number, integer} of the component has signal(s) with frame-based sampling mode. Signal(s) with frame-based sampling mode are not supported by the Signal Builder block.</entry>
        <entry key="FailForVariableDims_SB">The input {0, number, integer} of the component has variable dimensional signal. Variable dimensional signal is not supported by the Signal Builder block.</entry>          
        <entry key="FailForAOB_SB">The input {0, number, integer} of the component has array of bus. Array of bus is not supported by the Signal Builder block.</entry>
        <entry key="CanNotBeCreatedForComplexDatatype_In">Cannot create a harness for the selected component because one or more inputs of the component have complex elements. Complex elements are not supported when the ''AutoShapeInputs' option is true.</entry>
        <entry key="CanNotBeCreatedForBusWithFrames_In">Cannot create a harness for the selected component because one or more inputs of the component have signals with frame-based sampling mode. Signals with frame-based sampling mode are not supported when the ''AutoShapeInputs' option is true.</entry>
        <entry key="VariableDimsNotSupported_In">Cannot create a harness for the selected component because one or more inputs of the component have a variable dimensioned signal. Variable dimensional signals are not supported when the ''AutoShapeInputs' option is true.</entry>
        <entry key="FailForComplexDatatype_In">The input {0, number, integer} of the component has complex data type. Complex data type is not supported when auto-shaping inputs for Inport sources.</entry>
        <entry key="FailForBusWithFrames_In">The input {0, number, integer} of the component has signal(s) with frame-based sampling mode. Signal(s) with frame-based sampling mode are not supported when auto-shaping inputs for Inport sources.</entry>
        <entry key="FailForVariableDims_In">The input {0, number, integer} of the component has variable dimensional signal. Variable dimensional signal is not supported when auto-shaping inputs for Inport sources.</entry>          
        <entry key="ScopeNameMatchesCUTName">Could not insert the stub Simulink Function for the function ''{0}'' because the scope name ''{1}'' matches the name of the component under test.</entry>
        <entry key="CouldNotCreateStubForPrivateFunction">Could not insert the stub Simulink Function for the private function ''{0}'' because the scope subsystem ''{1}'' cannot be created in the test harness.</entry>
        <entry key="CouldNotCreateStubForPublicFunction">Could not insert the stub Simulink Function for the public function ''{0}''.</entry>
        <entry key="WarnIfTSBDrivingDSW">The Test Sequence block ''{0}'' drives at least one generated Data Store Memory (DSM) block using a Data Store Write (DSW) block. It also calls a Simulink Function block or drives a conditionally executed subsystem through a trigger or function-call. This setup can lead to data inconsistency warnings during simulation if the conditionally executed subsystem reads the DSM before the DSW executes. Consider modifying the harness to eliminate the data inconsistency warnings or use a source type other than the Test Sequence block.</entry>
        <entry key="CannotSupportIRTFunctionWithSideIO">Cannot create a test harness for the model because it is not an export function model and the model contains a root-level Inport or Outport block connected to an Initialize, Reset or Terminate Function.</entry>
        <entry key="InvalidParamValueIRTFunctionWithSideIO">Ignoring the value of the parameter ''{0}'' because it must be set to ''{1}'' when creating a test harness for a model which contains root-level Inport or Outport block connected to an Initialize, Reset or Terminate Function.</entry>

        <!-- Studio reuse -->
        <entry key="CreateOpenContextWithoutReuseWindowFlag">The CreateOpenContext flag cannot be true without the ReuseWindow flag also being true.</entry>
        <entry key="ReuseWindowWithoutOpenContext">The ReuseWindow parameter cannot be true without an Open Context.</entry>
    </message>
</rsccat>
