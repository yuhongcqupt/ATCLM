<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2009-2016 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="Simulink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../matlab/resources/schema/msgcat.xsd">
  <message>
    <entry key="AVT_LicenseError">Unable to check out the Simulink Design Verifier license which is needed to translate design.</entry>
    <!-- AbsoluteTimeNotSupported TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsHotLinks.m -->
    <entry key="AbsoluteTimeNotSupported"><![CDATA[Block ''{0}'' uses absolute time, which is not supported with the current configuration. Consider selecting <sldiag objui="configset" objparam="SupportAbsoluteTime">Support absolute time</sldiag>]]></entry>
    <entry key="InvCallToSubstituteCS">Invalid call to substituteTmpConfigSetForBuild and restoreOrigConfigSetForBuild.  These must be called with two arguments and no return values.</entry>
    <entry key="FallBackToNonVm"></entry>
    <entry key="InvalidModelRefTargetTypeForVmExecution">The model reference target type ''{0}'' is invalid for JIT accelerated simulations</entry>
    <entry key="AccErrorStatus">Error reported when running the Accelerated simulation ''{0}'' :\n{1}</entry>
    <entry key="AccModelNameTooLong">Unable to accelerate model ''{0}'' because the resulting accelerator MEX-file name would be too long. Please rename your model and reduce name length to less than {1,number,integer} characters</entry>
    <entry key="AccelCodeGenError">Problem creating Accelerator MEX file for model ''{0}''.</entry>
    <entry key="AccelCodeGenErrorTellAboutVerbose">Problem creating Accelerator MEX file for model ''{0}''.\n To see the build output, use set_param(''{1}'',''AccelVerboseBuild'',''on'')</entry>
    <entry key="AccelJITErrorTellAboutVerbose">Error while JIT Accelerating model ''{0}''.\n To see more details, use set_param(''{1}'',''AccelVerboseBuild'',''on'')</entry>
    <entry key="AccelJITError">Error while JIT accelerating the model ''{0}''.</entry>
    <entry key="AccelInvCalltoRunBlock">Invalid call to sleAccRunBlock</entry>
    <entry key="AccelLCCBuildFailed">Failed to build model ''{0}'' using LCC in accelerator mode, please consider using MSVC instead.</entry>
    <entry key="AccelMexLoadError">Error while loading Accelerator MEX file ''{0}''.</entry>
    <entry key="AccelNameConflict">The model ''{0}'' must be renamed since the Accelerator uses this name for the accelerated mex file</entry>
    <entry key="AccelNotSupportedAlgLoopsWithCertainBlocks">The model ''{0}'' has an algebraic loop that contains ''{1}''. Accelerator mode is not supported for this model.</entry>
    <entry key="AccelNotSupportedWithSFcnAPI">Accelerator mode is not supported through the S-Function API</entry>
    <entry key="AccelUnableToAcqFoundFcnHdl">While simulating the model ''{0}'' in accelerator mode, Simulink found a match for the MATLAB function ''{1}'' but was unable to run it. Typically this happens because the MATLAB function found differs only in case from the function desired. Rename the current model, or remove the alternate MATLAB function from the MATLAB path by deleting it, renaming it, or removing the folder containing it from the MATLAB path. </entry>
    <entry key="AccelUnableToAcqFcnHdl">Unable to acquire handle to MATLAB function ''{0}''</entry>
    <entry key="AccelBuildNoModelName">Unable to obtain current model name.</entry>
    <entry key="ActionECPotentialPreStartOutputDiff"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases if ''{1}'' is not activated at t = 0. Block ''{2}'' may produce non-zero outputs for zero inputs and has been inherited by the ''{3}'' execution context. In previous releases, the ''{4}'' was not inherited by the execution context and may have produced a non-zero output prior to start of the conditional subsystem. To prevent the inheritance of the context, explicitly set the sample time of ''{5}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextPreStartOutputMsg">Check preactivation output of execution context</sldiag>.]]></entry>
    <entry key="ActionECPotentialPreStartOutputDiffConsistentOutportInit"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases if ''{1}'' is not activated at t = 0. Block ''{2}'' may produce non-zero outputs for zero inputs and has been inherited by the ''{3}'' execution context. In previous releases, the ''{4}'' was not inherited by the execution context and may have produced a non-zero output prior to start of the conditional subsystem. To prevent the inheritance of the context, explicitly set the sample time of ''{5}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextPreStartOutputMsg">Check preactivation output of execution context</sldiag>.]]></entry>
    <entry key="AddDimsDependRuleCompStageMismatch">Simulink detected an incorrect usage of ''ssAddOutputDimsDependencyRule'' for the S-function in ''{0}''. This SimStruct function can only be used in the ''mdlSetWorkWidths'' method.</entry>
    <entry key="AlgLoopFrozenModesNoConvergence">Convergence problem when solving algebraic loop containing ''{0}'' at time {1}.  Simulink will try to solve this loop using Simulink 3 (R11) strategy.   Use feature(''{2}'',0) to disable the strategy introduced in Simulink 4 (R12)</entry>
    <entry key="AlgLoopFrozenModesOscilationDetected">Convergence problem (mode oscillation) detected when solving algebraic loop containing ''{0}'' at time {1}.  Simulink will try to solve this loop using Simulink 3 (R11) strategy.  Use feature(''{2}'',0) to disable the strategy introduced in Simulink 4 (R12)</entry>
    <entry key="AlgLoopFrozenModesTooManyModeChanges">Convergence problem (more than {0,number,integer} mode changes) detected while solving algebraic loop containing ''{1}'' at time {2}.  Simulink will try to solve this loop using Simulink 3 (R11) strategy.  Use feature(''{3}'',0) to disable the strategy introduced in Simulink 4 (R12), or set the feature ''{4}'' to a value greater than {5,number,integer}</entry>
    <entry key="AlgLoopNoSupportOfVarSizeSig">Block ''{0}'' has variable-size signals, and it resides within an algebraic loop. Variable-size signals do not support algebraic loops. Consider eliminating the algebraic loop.</entry>
    <entry key="AlgLoopMemoryAllocationError">
      Unable to allocate memory for solving the algebraic loop involving
      ''{0}''. This loop has {1,number,integer} algebraic variable(s) and
      involves {2,number,integer} block(s). You may be able to avoid this error
      by reducing the number of algebraic variables or by eliminating the
      algebraic loop.
    </entry>
    <entry key="AlgLoopTroubleInFixedStep">
      Simulink cannot solve the algebraic loop containing ''{0}'' at time {1}
      using the {2}-based algorithm due to one of the following reasons: the
      model is ill-defined i.e., the system equations do not have a solution; or
      the nonlinear equation solver failed to converge due to numerical
      issues.\n
      To rule out solver convergence as the cause of this error, either\n\t
      a) switch to {3}-based algorithm using\n\t\t
      set_param(''{4}'',''AlgebraicLoopSolver'',''{5}'')\n\t
      b) reducing the fixed step size.\n
      If the error persists in spite of the above changes, then the model is
      likely ill-defined and requires modification.
    </entry>
    <entry key="AlgLoopTroubleInVariableStep">
      Simulink cannot solve the algebraic loop containing ''{0}'' at time {1}
      using the {2}-based algorithm due to one of the following reasons: the
      model is ill-defined i.e., the system equations do not have a solution; or
      the nonlinear equation solver failed to converge due to numerical
      issues.\n
      To rule out solver convergence as the cause of this error, either\n\t
      a) switch to {3}-based algorithm using\n\t\t
      set_param(''{4}'',''AlgebraicLoopSolver'',''{6}'')\n\t
      b) reducing the {5} solver RelTol parameter so that the solver takes
      smaller time steps.\n
      If the error persists in spite of the above changes, then the model is
      likely ill-defined and requires modification.
    </entry>
    <!-- AlgLoopsDisabled TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsHotLinks.m -->
    <entry key="AlgLoopsDisabled">Block diagram ''{0}'' contains an algebraic loop. The algebraic loop solver is disabled because of the current setting for <![CDATA[<sldiag objui="configset" objparam="AlgebraicLoopMsg">Algebraic loop</sldiag>]]>.</entry>
    <entry key="AlgStateNotFinite">Algebraic state in algebraic loop containing ''{0}'' computed at time {1} is Inf or NaN.  There may be a singularity in the solution.  If the model is correct, try reducing the step size (either by reducing the fixed step size or by tightening the error tolerances)</entry>
    <entry key="AlgebraicLoopsNotSupportedInRTWGEN">Algebraic loops are not supported in generated code. Use the ''ashow'' command in the Simulink Debugger to see the algebraic loops</entry>
    <entry key="AmbiguousCRLRegisteredType">Multiple definitions of type ''{0}'' found in code replacement library. Please provide a single definition for the type.</entry>
    <entry key="AmbiguousCRLAndSimDataDictType">The type ''{0}'' is ambiguous. Different type with the same name already exists in Simulink or data dictionary. Please provide a single definition for the type.</entry>
    <entry key="ApplicationInvalid">Invalid application specified</entry>   
    <entry key="ArtificialAlgLoopModelRefNote">This algebraic loop may be resolved when the option ''Minimize algebraic loop occurrences'' is selected on the Model Referencing pane of referenced models in this algebraic loop</entry>
    <entry key="ArtificialAlgLoopNote">This algebraic loop may be resolved when the subsystem option ''Minimize algebraic loop occurrences'' is selected on some or all of the atomic and enabled subsystems in this algebraic loop or if ''Minimize algebraic loop occurrences'' is selected on the Model Referencing pane of referenced models in this algebraic loop</entry>
    <entry key="ArtificialAlgLoopSubsystemNote">This algebraic loop may be resolved when the subsystem option ''Minimize algebraic loop occurrences'' is selected on some or all of the atomic and enabled subsystems in this algebraic loop</entry>
    <entry key="AsyncGlobalDSM">In model ''{0}'', one or more of the blocks that reference a global data store defined by the global Simulink.Signal object ''{1}'' are configured to execute in an asynchronous task. Global data stores accessed within a model must all execute in a single, periodic task.</entry>
    <entry key="AsyncRateTransBlkHasInvalidDst">The rate transition block ''{0}'' cannot connect to destination ''{1}''. The destination block is in an asynchronously executed function-call block whose priority is different from the Rate Transition block output sample time priority.</entry>
    <entry key="AsyncRateTransBlkHasInvalidMultipleDsts">The rate transition block ''{0}'' has multiple destinations. All destinations must have the same sample time or must be in asynchronously executed function-call blocks with the same priority.</entry>
    <entry key="BackPropDoesNotSupportND">Cannot propagate {0,number,integer}-D signal from input port {1,number,integer} of block ''{2}'' to output port {3,number,integer} of block ''{4}''. The latter block does not accept signals with greater than 2 dimensions (either entirely or in its current configuration).</entry>
    <entry key="BackPropDoesNotSupportNDCompSig">Cannot propagate composite signal containing at least one {0,number,integer}-D signal from input port {1,number,integer} of block ''{2}'' to output port {3,number,integer} of block ''{4}''. The latter block does not accept signals with greater than 2 dimensions (either entirely or in its current configuration).</entry>
    <entry key="BadFeedbackConn">Erroneous feedback connection involving one or more virtual blocks starting at output port {0,number,integer} of ''{1}''</entry>
    <entry key="BusSourcePropBadFeedbackConn">Erroneous feedback connection involving one or more virtual blocks starting at output port {0,number,integer} of ''{1}''</entry>
    <entry key="BadInportNum">One or more Inport blocks of system ''{0}'' are either missing or numbered incorrectly. Inport blocks must be numbered consecutively starting with 1</entry>
    <entry key="BadOutportNum">One or more Outport blocks of system ''{0}'' are either missing or numbered incorrectly. Outport blocks must be numbered consecutively starting with 1</entry>
    <entry key="BadPropDimsInfoNoUnifyIO">Simulink cannot propagate dimension information from input port {0,number,integer} of ''{1}'' to output port {2,number,integer} of ''{3}''. The dimension of the input dimension '{'{4}'}' of ''{5}'' does not match the multiplexed output signal '{'{6}'}'.</entry>
    <entry key="BadPropDimsInfoNoUnifyOI">Simulink cannot propagate dimension information from output port {0,number,integer} of ''{1}'' to input port {2,number,integer} of ''{3}''. The dimension of the multiplexed output signal '{'{4}'}' does not match the input dimension '{'{5}'}' of ''{6}''.</entry>
    <entry key="BadPropDimsInfoUnifyOI">Simulink cannot unify the dimensions of the multiplexed signal at output port {0,number,integer} of ''{1}'' to match the input dimension of input port {2,number,integer} of ''{3}''. Specifically, Simulink cannot unify '{'{4}'}' to match {5}. Consequently, Simulink cannot propagate dimension information from output port {6,number,integer} of ''{7}'' to input port {8,number,integer} of ''{9}''.</entry>
    <entry key="BadPropDimsInfoUnifyMatrixOI"> Simulink cannot determine unified dimensions for the multiplexed signal at output port {0,number,integer} of ''{1}'' because one or more of the input signals is of matrix type. Specifically, Simulink cannot unify '{'{2}'}'. Consequently, Simulink cannot propagate dimension information from output port {3,number,integer} of ''{4}'' to input port {5,number,integer} of ''{6}''.</entry>
    <entry key="BdNotCompiled">The model ''{0}'' must be compiled before it can be accessed programmatically</entry>  
    <entry key="BdCommandDisallowedDuringSim">The model ''{0}'' is simulating and cannot process the command ''{1}'' through the programmatic interface</entry>
    <entry key="BdSettingChangeNotAllowed">Cannot change parameter ''{0}'' of model ''{1}'' when it is being compiled or while the simulation is running</entry>
    <entry key="BdSimRunningAlready">A simulation of block diagram ''{0}'' is currently running. A second simulation cannot be started</entry>
    <entry key="BdWriteCloseError">File closing error while handling {0}. Error code is {1,number,integer} ({2})</entry>
    <entry key="BdWriteInvBlockParamType">Error, mdlRTW of S-function ''{0}'' in ''{1}'' call ssWriteRTWParameters with an invalid parameter type</entry>
    <entry key="BdWriteInvIndentLevel">Inconsistent number of record start '''{''' or terminating '''}''' characters found while writing {0}</entry>
    <entry key="BdWriteMxArrayFailure">Method BdWriteMxArray failed: ''{0}''</entry>
    <entry key="BdWriteParamInvComplexSig">The parameter ''{0}'' must be real.  Use SS_WRITE_VALUE_DTYPE_VECT to write a complex parameter</entry>
    <entry key="BdWriteParamInvParamValue">Error writing the {0} parameter ''{1}'' value to the ''{2}.rtw'' file</entry>
    <entry key="BdWriteParamNameTooLong">Length of parameter name ({0}) must be less than {1,number,integer} characters</entry>
    <entry key="BdWriteParamNonBuiltInDType">Cannot write non-MATLAB data type parameter ''{0}''</entry>
	  <entry key="BlkIgnoringUsedAsDStateFlag">The discrete state of ''{0}'' will not be logged because its data type {1} is not built-in</entry>
    <entry key="BlkInAlgLoopErr">Algebraic loop error with ''{0}''\n</entry>
    <entry key="BlkInAlgLoopWarnInfo"> ''{0}''{1}{2}\n</entry>
    <entry key="BlkInAlgLoopErrWithInfo">Algebraic loop error with ''{0}''{1}{2}\n</entry>
    <entry key="BlkInLoop">''{0}'' is involved in the loop</entry>
    <entry key="BlkInTrigSSLoop">Input ports ({0}) of ''{1}'' are involved in a loop containing triggered subsystem(s) and/or triggered Model blocks.</entry>
    <entry key="BlkWithFcnCallRetValInLoop">Simulink has inserted an implicit signal conversion block after the inport blocks {0} of subsystem ''{1}'' to ensure that the corresponding signals are contiguous in memory. This may cause a one-step delay for the function-call initiator block(s) {2} that are observing these signals as return values from the function-call subsystem(s) they are calling. To avoid this condition, ensure that each function-call return value originates from a single block in the function-call subsystem being called</entry>
    <entry key="BlkWithPortInLoop">Input ports ({0}) of ''{1}'' are involved in the loop</entry>
    <entry key="Blk_Support_IR_Conditional_Init">Dummy msg</entry>
    <entry key="BlockBusObjectTsClash">The block ''{0}'' specifies conflicting sample time information: the block specifies bus object ''{1}'', whose elements define the block''s sample time to be {2}, yet the block''s Sample time property specifies {3}.  Either set the sample time of the block, or the object''s elements to inherited (-1).</entry>
    <entry key="BlockCStateArrayBoundsError">The model-wide continuous state array is corrupted after running the ''mdl{0}'' function of the S-Function ''{1}'' in ''{2}''.  This corruption is most likely due to an error in the S-Function''s source code, where the S-Function''s continuous state pointer has been incremented/decremented beyond its allotted limits.  This sort of memory errors can crash MATLAB or produce incorrect simulation results</entry>
    <entry key="BlockDWorkArrayBoundsError">The model-wide work vector array (including DSTATES, RWORK, IWORK, PWORK, DWORK and MODE vectors) is corrupted after running the ''mdl{0}'' function of the S-Function ''{1}'' in ''{2}''.  This corruption is most likely due to an error in the S-Function''s source code, where one of the S-Function''s work vector pointers has been incremented/decremented beyond its allotted limits.  This sort of memory errors can crash MATLAB or produce incorrect simulation results</entry>
    <entry key="BlockIO_Complexity">The {0} input signal for input port {1,number,integer} of block ''{2}'' cannot be overwritten by its {3} output port {4,number,integer}, because the complexity of both signals must be the same.</entry>
    <entry key="BlockIO_Datatypes">Output port {0,number,integer} of the signal source block ''{1}'' for input port {2,number,integer} of block ''{3}'' cannot be overwritten by its output port {4,number,integer}, because the signals have different datatypes.</entry>
    <entry key="BlockIO_DifferentOutportReuse">The input signal for input port {0,number,integer} of block ''{1}'' is not overwritten by its output port {2,number,integer}; rather, it is overwritten by its output port {3,number,integer}.</entry>
    <entry key="BlockIO_GlobalLocal">The {0} input signal for input port {1,number,integer} of block ''{2}'' cannot be overwritten by its {3} output port {4,number,integer}, because they must have the same scope.</entry>
    <entry key="BlockIO_GroundBlock">The input signal for input port {0,number,integer} of block ''{1}'' cannot be overwritten by its output port {2,number,integer}, because its source is a GROUND block.</entry>
    <entry key="BlockIO_InputSignalGreaterThanOutput">The input signal for input port {0,number,integer} of block ''{1}'' cannot be overwritten by its output port {2,number,integer}, because its size is greater than the output port. This is a limitation and will be addressed in a later release.</entry>
    <entry key="BlockIO_InputSignalIsNoncontiguous">The input signal for input port {0,number,integer} of block ''{1}'' cannot be overwritten by its output port {2,number,integer}, because it comes from multiple output ports.</entry>
    <entry key="BlockIO_InputSignalIsRootInport">The input signal for input port {0,number,integer} of block ''{1}'' cannot be overwritten by its output port {2,number,integer}, because its source is a ROOT port.</entry>
    <entry key="BlockIO_InputSignalSmallerThanOutput">The input signal for input port {0,number,integer} of block ''{1}'' cannot be overwritten by its output port {2,number,integer}, because its size is smaller than the output port.</entry>
    <entry key="BlockIO_InputSignalStillUsed">The signal value for input port {0,number,integer} of block ''{1}'' cannot be overwritten by its output port {2,number,integer}, because it is still needed by input port {3,number,integer} of block ''{4}'', which has not been executed yet.</entry>
    <entry key="BlockIO_MarkedNonReusable">The input signal for input port {0,number,integer} of block ''{1}'' cannot be overwritten by its output port {2,number,integer}, since it was marked as non-reusable.</entry>
    <entry key="BlockIO_NoBufferReuse">The input signal for input port {0,number,integer} of block ''{1}'' cannot be overwritten by its output port {2,number,integer}, since buffer reuse optimizations are OFF for this block diagram.</entry>
    <entry key="BlockIO_SignalSourceGreaterThanOutput">Output port {0,number,integer} of signal source block ''{1}'' for input port {2,number,integer} of block ''{3}'' cannot be overwritten by its output port {4,number,integer}, because its size is greater than the output port. This is a limitation and will be addressed in a later release.</entry>
    <entry key="BlockIO_SignalSourceSmallerThanOutput">Output port {0,number,integer} of signal source block ''{1}'' for input port {2,number,integer} of block ''{3}'' cannot be overwritten by its output port {4,number,integer}, because its size is smaller than the output port.</entry>
    <entry key="BlockIO_Systems">Output port {0,number,integer} of the signal source block ''{1}'' for input port {2,number,integer} of block ''{3}'' cannot be overwritten by its output port {4,number,integer}, because the signals are in different systems.</entry>
    <entry key="BlockIO_AlgebraicLoop">Output port {0,number,integer} of the signal source block ''{1}'' for input port {2,number,integer} of block ''{3}'' cannot be overwritten by its output port {4,number,integer}, because it is part of an algebraic loop.</entry>
    <entry key="BlockIO_Testpoint">The input signal for input port {0,number,integer} of block ''{1}'' cannot be overwritten by its output port {2,number,integer}, because at least one of the signals is a testpoint.</entry>
    <entry key="BlockIO_Logging">The input signal for input port {0,number,integer} of block ''{1}'' cannot be overwritten by its output port {2,number,integer}, because at least one of the signals is being logged.</entry>
    <entry key="BlockIO_UnequalSampleTimes">Output port {0,number,integer} of the signal source block ''{1}'' for input port {2,number,integer} of block ''{3}'' cannot be overwritten by its output port {4,number,integer}, because the signals have different sample times.</entry>
    <entry key="BlockIO_UnknownReason">The input signal for input port {0,number,integer} of block ''{1}'' cannot be overwritten by its output port {2,number,integer} for an unknown reason.</entry>
    <entry key="BlockJacobianMethodButNoConfig">''{0}'' implements a Jacobian method, but failed to configure its Jacobian dimensions in the DoPostPropagationTasks function.</entry>
    <entry key="BlockJacobianMethodButNoIrJc">''{0}'' implements a Jacobian method, but failed to initialize its Jacobian structure (Ir, Jc) in the method JacobianIrJc.</entry>
    <entry key="BlockNotFoundMessage">Could not find library block ''{0}''</entry>
    <entry key="BlockNotFoundTitle">Block not found</entry>
    <entry key="BlockOutputArrayBoundsError">The model-wide block output signal array is corrupted after running the ''mdl{0}'' function of the S-Function ''{1}'' in ''{2}''.  This corruption is most likely due to an error in the S-Function''s source code, where one of the S-Function''s output port signal pointers has been incremented/decremented beyond its allotted limits.  This sort of memory errors can crash MATLAB or produce incorrect simulation results</entry>
    <entry key="BlockOutputInfNanDetectedError"><![CDATA[Block ''{0}'' output ''{1}'' for element {2,number,integer} of output port {3,number,integer} at {4} time step {5}<actions exclusiveFixIts="no"><action type="suppression"></action></actions>]]></entry>   
    <entry key="CANNOT_ACCESS_BUS">Accessing ''{0}'' of a bus signal in ''{1}'' is not supported</entry>
    <entry key="CallbackDelete">Cannot delete ''{0}'' while in a callback</entry>
    <entry key="CallbackEvalErr">Error evaluating <![CDATA[<sldiag objui="callback" objparam="{0}"></sldiag>]]> callback of {1} ''{2}''.</entry>
    <entry key="CallbackRecursion">Recursion detected in the {0} of ''{1}''</entry>
    <!-- CombineOutputUpdateFcnMinorTimeSteps TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsHotLinks.m -->
    <entry key="CombineOutputUpdateFcnMinorTimeSteps"><![CDATA[The output(s) read after the base-rate model step reflects intervening minor time steps. To observe data that is a snapshot of output(s) at major time steps, do one of the following:\n * Place a Zero-Order Hold block before the continuous output port ''{0}''. \n * Clear <sldiag objui="configset" objparam="CombineOutputUpdateFcns">Single output/update function</sldiag>, and read model output values after model_output call and before model_update call. \n For more details, see <a href="matlab:helpview([docroot ''/rtw/csh/configparams/Simulink.ConfigSet.ListView.map''], ''Tag_ConfigSet_RTW_GRT_CombineOutputUpdateFcns'')">"Single output/update function"</a> in the Simulink documentation.]]></entry>
    <entry key="CannotChangeBlkParamsInsideParameterizedForEachSS">Cannot change parameter ''{0}'' of block ''{1}'' inside For Each subsystem ''{2}'' while simulation is running in Rapid Accelerator mode. This is because the subsystem contains one or more partitioned mask parameters.</entry>
    <entry key="CannotChangeBlkParamsInPFESSFromPToNP"> Parameter ''{0}'' of block ''{1}'' must reference at least one For Each subsystem partitioned mask parameter during simulation. This is because the parameter value was configured to directly or indirectly reference one or more partitioned mask parameters of a For Each subsystem.</entry>
    <entry key="CannotChangeBlkParamsInPFESSFromNPToP">Cannot change parameter ''{0}'' of block ''{1}'' to a value that directly or indirectly references a partitioned mask parameter of a For Each subsystem during simulation. This is because this block parameter value was configured not to reference any For Each subsystem partitioned mask parameter.</entry>
    <entry key="CannotSetBlkParamsToPartitionedMaskVarInPFESS">Cannot set parameter ''{0}'' of block ''{1}'' to a value that references a partitioned mask parameter of a For Each subsystem. This parameter does not support referencing partitioned mask parameters.</entry>
    <entry key="CannotSetAnonymousBlkParamsToPartitionedMaskVarInPFESS">Block ''{0}'' cannot reference partitioned mask parameters of For Each subsystems.</entry>
    <entry key="CannotSetBlkParamsInMultiRateDelayBlockInPFESS">Cannot set parameter ''{0}'' of Delay block ''{1}'' to a value that references a partitioned mask parameter of a For Each subsystem. A Delay block does not support referencing partitioned mask parameters in multirate mode.</entry>
    <entry key="CannotSetBlkParamsInSFunctionWithoutMdlProcessParameters">Block ''{0}'' does not support referencing partitioned mask parameters in For-Each subsystem ''{1}'' because function mdlProcessParameters is not defined in this S-Function.</entry>
    <entry key="CannotSetBlkParamsInTLCSfcnBlockInPFESS">Cannot set parameter ''{0}'' of block ''{1}'' to a value that references a partitioned mask parameter. S-Functions generated through TLC do not support referencing partitioned mask parameters.</entry>
    <entry key="CannotReferenceTransformedTunableVarInPFESS">Cannot set parameter ''{0}'' of block ''{1}'' to a value that references a partitioned mask parameter of a For Each subsystem. This parameter is a transformation of one or more dialog parameters. Transformed parameters do not support referencing a partitioned mask parameter of a For Each subsystem.</entry>
    <entry key="PartitionedStructParamNotAllowed">Mask parameter ''{0}'' of For Each subsystem ''{1}'' cannot be partitioned because it evaluates to a non-numeric value or structure containing non-numeric fields.</entry>
    <entry key="CannotChangeConstTsBlks">Cannot change parameter ''{0}'' of ''{1}'' while simulation is running because its sample time is constant (inf). Constant sample times generally occur when the ''inline parameters'' option is set to ''on''.</entry>
    <entry key="CannotChangePortFrameData">S-function method {0} cannot change the frame data of {1} port {2,number,integer} of ''{3}'' once the frame data has been set</entry>
    <entry key="CannotChangePostCompileVirtBlks">Cannot change parameter ''{0}'' of ''{1}'' while simulation is running. The block was made virtual as it was optimized for simulation</entry>
    <entry key="CannotDisplayFrameSignal">The selected signal originating from output port {0,number,integer} on ''{1}'' cannot be displayed because it is frame based</entry>
    <entry key="CannotDisplayWideFrameSignal">The selected signal originating from output port {0,number,integer} on ''{1}'' cannot be displayed because it is a frame based signal with frame size greater than 1</entry>
    <entry key="CannotEvaluateFloatingDuration">The Duration field for the floating scope must be a valid Matlab expression that evaluates to a positive integer. Using the default value auto</entry>
    <entry key="CannotEvaluateDWorkDimArg">The expression specified for the derived parameter, ''{0}'', does not evaluate to a scalar. The derived parameter specified as derived dimension argument must evaluate to a double scalar.</entry>
    <entry key="CannotExecuteTargDataMap">Could not execute target data map file ''{0}{1}{2}'' or it does not exist. \nStop the target, delete the {3} executable, rebuild the code, and try again.   Note that execution of external mode requires the build directory to be present</entry>
    <entry key="CannotHaveNDFrames">Cannot set port {0,number,integer} of ''{1}'' to be {2,number,integer} dimensional when this port is set to be frame-based. For a frame-based port, the number of dimensions must be 2</entry>
    <entry key="CannotHaveUnorientedFrames">Cannot set port {0,number,integer} of ''{1}'' to have one dimension when this port is set to be frame-based. For a frame-based port, the number of dimensions must be 2</entry>
    <entry key="CannotHaveUnsetOutputDimsMode">The dimension mode of the output port {0,number,integer} of ''{1}'' is inherited. Whenever the dimension mode is set to either fixed or variable for all input ports, no output ports can have an inherited dimension mode.</entry>
    <entry key="CannotHaveUnsetOutputFrameData">''{0}'' has unknown frame status for its output port {1,number,integer}. When all input ports have known frame status, then all output ports must have known frame status</entry>
    <entry key="CannotPropFixedDimsModeForward">Simulink cannot propagate the fixed-size mode from the output port {0,number,integer} of ''{1}'' to the input port {2,number,integer} of ''{3}''. This input port expects a variable-size mode. Either replace ''{4}'' with a block that outputs a variable-size signal or replace ''{5}'' with a block that expects a fixed-size signal.</entry>
    <entry key="CannotPropFixedDimsModeForwardWithSource">Simulink cannot propagate the fixed-size mode from the output port {0,number,integer} of ''{1}'' to the input port {2,number,integer} of ''{3}''. This input port expects a variable-size mode. The fixed-size mode originates from ''{4}''. Either replace ''{5}'' with a block that outputs a variable-size signal or replace ''{6}'' with a block that expects a fixed-size signal.</entry>
    <entry key="CannotPropFrameDataForward">Cannot propagate frame-based signal from output port {0,number,integer} of ''{1}'' to input port {2,number,integer} of ''{3}'' because this input port expects a sample-based signal. Consider inserting an Unbuffer in the signal path.</entry>
    <entry key="CannotPropFrameDataForwardWithSource">Cannot propagate frame-based signal from output port {0,number,integer} of ''{1}'' to input port {2,number,integer} of ''{3}'' because this input port expects a sample-based signal. The frame-based signal originates from ''{4}''.  Consider inserting an Unbuffer in the signal path.</entry>
    <entry key="CannotPropFrameDataWhenLatchingOutside">Input port {0,number,integer} of the subsystem ''{1}'' cannot accept a frame-based signal, because the corresponding Inport block ''{2}'' has the parameter 'Latch by delaying outside signal' selected. </entry>
    <entry key="CannotPropFrameDataWhenLatchingOutsideForRootTrigger">The root input port ''{0}'' 
    cannot output a frame-based signal, because it has the parameter 'Latch by delaying outside signal' selected. 
    Consider deselecting the 'Latch by delaying outside signal' or setting the Sampling mode to 'Sample based' by executing set_param(blk,'SamplingMode','Sample based'), where blk is the root input port handle.</entry>
    <entry key="CannotPropFrameDataWhenLatchingOutsideForTriggeredModelBlock">Input port {0,number,integer} of the triggered Model block 
    ''{1}'' cannot accept a frame-based signal, because the corresponding Inport block in the referenced model ''{2}'' has the parameter 
    'Latch by delaying outside signal' selected. </entry>
    <entry key="CannotPropNonFrameDataForward">Cannot propagate sample-based signal from output port {0,number,integer} of ''{1}'' to input port {2,number,integer} of ''{3}'' because this input port expects a frame-based signal. Consider inserting a Buffer or a Frame Conversion block in the signal path.</entry>
    <entry key="CannotPropNonFrameDataForwardWithSource">Cannot propagate sample-based signal from output port {0,number,integer} of ''{1}'' to input port {2,number,integer} of ''{3}'' because this input port expects a frame-based signal. The sample-based signal originates from ''{4}''. Consider inserting a Buffer or a Frame Conversion block in the signal path.</entry>
    <entry key="CannotPropVariableDimsModeForward">Simulink cannot propagate the variable-size mode from the output port {0,number,integer} of ''{1}'' to the input port {2,number,integer} of ''{3}''. This input port expects a fixed-size mode. Examine the configuration of ''{4}'' for one of the following scenarios: 1) the block does not support variable-size signals; 2) the block supports variable-size signals but needs to be configured for them.</entry>
    <entry key="CannotPropVariableDimsModeForwardWithSource">Simulink cannot propagate the variable-size mode from the output port {0,number,integer} of ''{1}'' to the input port {2,number,integer} of ''{3}''. This input port expects a fixed-size mode. The variable-size mode originates from ''{4}''. Examine the configurations of ''{5}'' for one of the following scenarios: 1) the block does not support variable-size signals; 2) the block supports variable-size signals but needs to be configured for them.</entry>
    <entry key="CannotUnifyDimsMode">Simulink cannot propagate the dimension mode from the output port {0,number,integer} of ''{1}'' to the input port {2,number,integer} of ''{3}''. One of the multiplexed signals at the output of the source has variable-size mode. This multiplexed signal has to be demultiplexed before Simulink can propagate it to the destination.</entry>
    <entry key="CannotUnifyFrameData">Cannot propagate frame data from output port {0,number,integer} of ''{1}'' to input port {2,number,integer} of ''{3}''. One of the signals that is multiplexed into the signal at the output of the source contains frame-based data. This multiplexed signal has to be demultiplexed before it can be fed to the destination</entry>
    <entry key="CannotUploadTunTransformsOfDstType">Error converting from data type ''{0}'' to data type ''{1}'' while uploading parameters from the target</entry>
    <entry key="CannotUseSetDefaultDimsFcn">''{0}'' cannot use ''set default dimension function''.</entry>
    <entry key="CantCmdlSimInExternalMode">External mode does not support the sim command. To run a simulation of ''{0}'', use the command set_param(''{1}'', 'SimulationCommand', 'start').</entry>
    <entry key="CantStepExternalMode">Cannot step external mode</entry>
    <entry key="ChangePortToBlockSampleTimes">Cannot access block-based sample time in ''{0}'' because this block has been set to use port-based sample times</entry>
    <entry key="Comp_AutoSolver">Compiling : Auto solver selection</entry>
    <entry key="Comp_AdaptBus">Compiling : Adapting bus names</entry>
    <entry key="Comp_Autosave">Autosave : Backing up all unsaved models</entry>
    <entry key="Comp_Blockio">Compiling : Setting up block I/O indices</entry>
    <entry key="Comp_BusCache">Compiling : Refreshing bus cache</entry>
    <entry key="Comp_BusConv">Compiling : Inserting bus conversion blocks</entry>
    <entry key="Comp_CacheMR">Compiling : Caching model reference blocks for systems</entry>
    <entry key="Comp_CacheSrcs">Compiling : Caching actual sources and destinations</entry>
    <entry key="Comp_Checksums">Compiling : Computing checksums</entry>
    <entry key="Comp_Cleanup">Compiling : Cleaning up memory</entry>
    <entry key="Comp_CompProps">Compiling : Initializing compiled properties</entry>
    <entry key="Comp_CompSet">Compiling : Creating set of compiled blocks</entry>
    <entry key="Comp_CompileDone"></entry>
    <entry key="Comp_Complete">Compiling : Compilation stages completed</entry>
    <entry key="Comp_Datatypes">Compiling : Propagating data types and complex signals</entry>
    <entry key="Comp_EvalBlocks">Compiling : Evaluating block parameters</entry>
    <entry key="Comp_ExpandForBus">Compiling : Expanding blocks for bus support</entry>
    <entry key="Comp_Final">Compiling : Compilation completed</entry>
    <entry key="Comp_GenSorted">Compiling : Generating sorted lists</entry>
    <entry key="Comp_InitBlocks">Compiling : Initializing all blocks</entry>
    <entry key="Comp_MR">Compiling : Updating model reference targets</entry>
    <entry key="Comp_Model_Terminated"> </entry>
    <entry key="Comp_PostProp">Compiling : Completing post propagation tasks</entry>
    <entry key="Comp_Precompile">Compiling : Performing pre-compile notifications</entry>
    <entry key="Comp_PropContexts">Compiling : Propagating conditional contexts</entry>
    <entry key="Comp_PropFrames">Compiling : Propagating frame data and dimensions</entry>
    <entry key="Comp_PropLabels">Compiling : Propagating signal labels</entry>
    <entry key="Comp_PropPassByRef">Compiling : Propagating pass by reference</entry>
    <entry key="Comp_Reeval">Compiling : Re-evaluating bus selectors</entry>
    <entry key="Comp_References">Compiling : Updating library link blocks</entry>
    <entry key="Comp_SF_Post">Compiling : Notifying Stateflow post compilation</entry>
    <entry key="Comp_SF_Start">Compiling : Starting Stateflow compilation</entry>
    <entry key="Comp_SampleTimes">Compiling : Propagating sample times</entry>
    <entry key="Comp_SortBlocks">Compiling : Sorting block list for propagation</entry>
    <entry key="Comp_Start">Compiling : Starting model compilation</entry>
    <entry key="Comp_SysProps">Compiling : Propagating system level properties</entry>
    <entry key="Comp_Testpoints">Compiling : Setting up implicit testpoints</entry>
    <entry key="Comp_UpdateDisplay">Compiling : Updating graphical display</entry>
    <entry key="Comp_UpdateSorted">Compiling : Updating sorted order display</entry>
    <entry key="Comp_Workspace">Compiling : Initializing model workspace</entry>
    <!-- CompactFormatNotSupportnonInlinedSF TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt.m -->
    <entry key="CompactFormatNotSupportnonInlinedSF"><![CDATA[Block ''{0}'' is a non-inlined S-function, which is not supported when ''File packaging format'' is ''Compact'' or ''Compact (with separate data file)''.
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:configset.internal.fixIt(''{0}'',''ERTFilePackagingFormat'',''Modular'')" type="fixit">Change <sldiag objui="configset" objparam="ERTFilePackagingFormat">File packaging format</sldiag> to ''Modular''</action>
      </actions>]]>
    </entry>
    <entry key="CompileNeededForSampleTimes">An Update Diagram must be performed in order to access the ''SampleTimes'' information for the model ''{0}''</entry>
    <entry key="CompileNeededForVariantConditions">An Update Diagram must be performed in order to access the ''VariantConditions'' information for the model ''{0}''</entry>
     <entry key="ModelHasNoVariantConditions">The model ''{0}'' has no variant conditions </entry>
    <entry key="CompileNeededForTasks">An Update Diagram must be performed in order to access the ''Tasks'' information for the model ''{0}''</entry>
    <entry key="CompileNeededForClocks">An Update Diagram must be performed in order to access the ''Clocks'' information for the model ''{0}''</entry>
    <entry key="ComplexityNotCompatibleMatlab">The complexity of the given MATLAB array is not compatible with the Simulink internal data</entry>
   
    <entry key="ConsistentCondSubsysInitRequiresStrictBusMode">To ensure consistent initialization of conditionally executed subsystem output ports in the block diagram ''{0}'', you must enable strict bus modeling by setting both of the options ''Mux blocks used to create bus signals'' and ''Bus signal treated as vector'' in the Connectivity Diagnostics pane of the Configuration Parameters dialog box to ''error''. Note that you may need to make modifications to the block diagram to conform to the modeling standards set by these diagnostics. For more information on how to make such modifications, see Simulink documentation under ''Diagnostics Pane: Connectivity'' or run the Model Advisor check ''Check bus usage''</entry>

    <entry key="CompilePhaseStatusBarStart"> : Started</entry>
    <entry key="CompilePhaseStatusBarEnd"> : Completed</entry>
    <entry key="ContSTInpPortIsFrameBased">Input port {0,number,integer} of ''{1}'' is set to be frame-based even though this port has a continuous sample time. Frame-based signals should have a discrete sample time.</entry>
    <entry key="ContStateAccessError">Continuous states of ''{0}'' cannot be accessed before the Start method of this block has been executed</entry>
    <!-- ContinuousTimeNotSupported TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt.m -->
    <entry key="ContinuousTimeNotSupported"><![CDATA[Block ''{0}'' uses continuous time, which is not supported with the current configuration.
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:configset.internal.fixIt(''{0}'',''SupportContinuousTime'',''on'')" type="fixit">Select <sldiag objui="configset" objparam="SupportContinuousTime">Support continuous time</sldiag></action>
      </actions>]]>
    </entry>
    <!-- Conv1DVectToColVectByBlock TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt.m -->
    <entry key="Conv1DVectToColVectByBlock"><![CDATA[''{0}'' is driven by a 1-D signal. It has automatically converted the input signal to a column vector (matrix).
      <actions exclusiveFixIts="yes">
        <action type="suggestion">Use a Reshape</action>
        <action cmd="matlab:configset.internal.fixIt(''{0}'',''VectorMatrixConversionMsg'',''none'')" type="fixit">Suppress this message by setting <sldiag objui="configset" objparam="VectorMatrixConversionMsg">Vector/matrix block input conversion</sldiag> to ''none''</action>
      </actions>]]>
    </entry>
    <entry key="CovAccessError">A fatal error occurred when accessing the coverage tool: {0}</entry>
    <entry key="CovBlockTooManySignals">Too many signals for coverage in: {0}. Signal range coverage is turned off.</entry>
    <entry key="CovGenericBlock">A fatal error in the coverage tool occurred while analyzing ''{0}''.</entry>
    <entry key="CovGenericModel">A fatal error in the coverage tool occurred while analyzing the model.</entry>
    <entry key="CovSetupError">A fatal error occurred when setting up the coverage tool.</entry>
    <entry key="CreateUndoSubsystemWarning">All graphical changes made inside the subsystem will be removed.\n Select Redo Create Subsystem to restore the subsystem with changes\n</entry>
    <entry key="CreateUndoWriteProtectedSubsystemError">Cannot Undo Create Subsystem for subsystems that are ''ReadOnly'' or ''NoReadWrite''.\n</entry>
    <entry key="DSMemoryAsyncTsNotMatchObject">In model ''{0}'', one or more of the blocks that access data store ''{1}'' execute in an asynchronous task. This conflicts with the sample time property for the data store memory specified by the Simulink.Signal object in the {2} workspace, i.e., the fact that the signal object specifies that the data store is accessed  in a single task having the sample time {3}.</entry>
    <entry key="DSMemoryHybridTsNotMatchObject">In model ''{0}'', one or more of the blocks that access data store ''{1}'' execute in multiple tasks. This conflicts with the sample time property specified for the data store by the Simulink.Signal object in the {2} workspace. The signal object specifies that the data store is accessed in a single task having the sample time {3}.</entry>
    <entry key="DSMemoryReaderWriterTsNotMatchObject">In model ''{0}'', one or more of the blocks that access data store ''{1}'' execute in a task whose sample time is {2}. This conflicts with the sample time property for the data store memory specified by the Simulink.Signal object in the {3} workspace, i.e., the fact that the signal object specifies that the data store is accessed  in a single task having the sample time {4}.</entry>
    <!-- DWorkDataNotReusableSC TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsOpen.m -->
    <entry key="DWorkDataNotReusableSC"><![CDATA[The storage class of a state owned by ''{0}'' is global, thus the generated code is not reusable.
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:Simulink.internal.OpenBlockParamsDialog(''{0}'',''StateStorageClass'')" type="suggestion">Set ''Storage class'' to ''Auto''</action>
        <action cmd="matlab:configset.internal.open(''{0}'',''CodeInterfacePackaging'')" type="suggestion">Set ''Code interface packaging'' to ''Nonreusable function'' (might impact referenced or referencing models)</action>
        <action cmd="matlab:configset.internal.open(''{0}'',''MultiInstanceErrorCode'')" type="suggestion">Set ''Multi-instance code error diagnostic'' to ''None'' or ''Warning'.</action>
      </actions>]]>
    </entry>
    <entry key="DWorkDimArgIsNotDerivedParam">Invalid argument, ''{0}'', specified for derived dimension argument. The argument must be a derived block parameter.</entry>
    <entry key="DataDimensionMismatch">Data dimension mismatch</entry>
    <entry key="DataTypeHeaderRecursion">Recursion detected in data type header file dependencies. Chain of type dependencies: ''{0}''. Corresponding chain of header file dependencies: ''{1}''.</entry>
    <entry key="DataTypeMismatch">Data type mismatch, a {0} data is given while a {1} data is expected</entry>
    <entry key="DataTypeMismatchField">Data type mismatch of the fields of the MATLAB struct</entry>
    <entry key="DataTypeMismatchNumField">Data type mismatch, a struct with {0,number,integer} fields is given but a struct with {1,number,integer} fields is expected</entry>
    <entry key="DataTypeNotCompatibleMatlab">The data type of the given MATLAB array is not compatible with the Simulink internal data</entry>
    <entry key="DataUploadNotSupported">Uploading is not supported for data of type ''{0}''</entry>
    <entry key="DefaultBlockDiagramInvalidMethod">Method ''{0}'' is not implemented for that object</entry>
    <entry key="DefaultGraphPropertyLoadOnly">Default graph properties can only be set while the model is loading. Set the property of the root graph instead.</entry>
    <entry key="DerivAccessError">Derivatives of ''{0}'' cannot be accessed before the Start method of this block has been executed</entry>
    <entry key="DerivNotFinite">Derivative of state ''{0}'' in block ''{1}'' at time {2} is not finite. The simulation will be stopped. There may be a singularity in the solution.  If not, try reducing the step size (either by reducing the fixed step size or by tightening the error tolerances)</entry>
    <entry key="JacobianMatrixWithNanInf">Auto solver has detected that the Jacobian matrix at time t=0.0 has entries which are not finite. The simulation will be stopped. There may be a singularity in the solution.  If not, try reducing the step size (either by reducing the maximum step size or by tightening the error tolerances)</entry>
    <!-- Dims1DVectTo2DVectorConversion TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt.m -->
    <entry key="Dims1DVectTo2DVectorConversion"><![CDATA[A 1-D array has been converted to a 2-D vector (matrix). The 1-D signal generated by output port {0,number,integer} of ''{1}'' has been automatically converted to a 2-D vector (matrix). This signal is driving input port {2,number,integer} of ''{3}''.
      <actions exclusiveFixIts="yes">
        <action type="suggestion">Use a Reshape</action>
        <action cmd="matlab:configset.internal.fixIt(''{1}'',''VectorMatrixConversionMsg'',''none'')" type="fixit">Suppress this message by setting <sldiag objui="configset" objparam="VectorMatrixConversionMsg">Vector/matrix block input conversion</sldiag> to ''none''</action>
      </actions>]]>
    </entry>
    <!-- Dims2DVectTo1DVectorConversion TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt.m -->
    <entry key="Dims2DVectTo1DVectorConversion"><![CDATA[A 2-D Vector (matrix) has been converted to a 1-D array. The 2-D vector (matrix) signal generated by output port {0,number,integer} of ''{1}'' has been automatically converted to a 1-D array. This signal is driving input port {2,number,integer} of ''{3}''.
      <actions exclusiveFixIts="yes">
        <action type="suggestion">Use a Reshape</action>
        <action cmd="matlab:configset.internal.fixIt(''{1}'',''VectorMatrixConversionMsg'',''none'')" type="fixit">Suppress this message by setting <sldiag objui="configset" objparam="VectorMatrixConversionMsg">Vector/matrix block input conversion</sldiag> to ''none''</action>
      </actions>]]>
    </entry>

    <entry key="DimsPropBadDefDims2">Error occurred while setting the dimensions of ''{0}''. Output port {1,number,integer} has unknown dimensions even though all input ports have known dimensions.</entry>
    <entry key="DisableButNotReturnWkspOutput">Outputs to the workspace has been disabled, this happens, in particular, if ''sim'' is called inside ''parfor''. To save the workspace outputs, set ''SaveWorkspaceOutputs'' to ''on'' in ''sim'' command options</entry>
    <entry key="DomainDataLocked">Data for Domain ''{0}'' is locked.</entry>
    <entry key="DomainHasNoPortTypes">Domain ''{0}'' has no port types.  It must specify at least one.</entry>
    <entry key="DomainModelAlreadyRegistered">Domain model was already registered under the name ''{0}''.</entry>
    <entry key="DomainModelNotRegistered">Cannot locate domain model definition under the name ''{0}''.</entry>
    <entry key="DomainNotFound">Physical modeling domain definition file {0}.m not found. You will not be able simulate this model. Please close your model, then add the domain definition file to the MATLAB path and re-open your model.</entry>
    <entry key="DomainParameterNotSet">Domain parameter ''{0}'' must be set for all domains. Domain ''{1}'' has not set this parameter.</entry>
    <entry key="DomainPortTypeParameterNotSet">Port type parameter ''{0}'' must be set for all port types. Port type ''{1}'' has not set this parameter.</entry>
    <entry key="DomainConnectIncorrectReturnValue">Incorrect connect function return type for ports ''{0}'' and ''{1}'' for domain ''{2}''. Connect function must return a logical scalar.</entry>
    <entry key="PortTypeNotDefinedForNonDynamicDomain">Port type ''{0}'' is not found in the domain definition for domain ''{1}'' and the domain does not support dynamic port types.
    </entry>
    <entry key="DomainInvalidDynamicPortTypesCallback">Invalid DynamicPortTypesCallback property for domain ''{0}''. This property should be a 1x2 cell-array of MATLAB function handles, the first being setup function handle and second being connect function handle.</entry>
    <entry key="DomainDynamicPortTypeInternalError"> Internal error: Unable to remove port type ''{0}'' despite errors for domain ''{1}'' because of errors.</entry>
    <entry key="DuplicatePortNum">Duplicate port number found in ''{0}''</entry>
    <entry key="DuplicatedNameInRegistry">An item named ''{0}'' already exists in this registry.</entry>
    <entry key="UngroupedCanPrmNotAllowedMulInstSLFcn">Parameter ''{0}'' is not grouped, yet it is being used by Simulink Function ''{1}'' configured to generate MultiInstance code. This modeling combination is not allowed.</entry>
    <entry key="ECPotentialOutputDiffTunablePrm"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases. Block ''{1}'' has a tunable variable and has been inherited by the conditionally executed subsystem, ''{2}''.  If you change the tunable parameters of ''{3}'', the block''s output will be recomputed only when the conditionally executed subsystem executes. To prevent the inheritance of the context, explicitly set the sample time of ''{4}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextRuntimeOutputMsg">Check runtime output of execution context</sldiag>.]]></entry>
    <entry key="ECPotentialOutputDiffTunablePrmConsistentOutportInit"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases. Block ''{1}'' has a tunable variable and has been inherited by the conditionally executed subsystem, ''{2}''.  If you change the tunable parameters of ''{3}'', the block''s output will be recomputed only when the conditionally executed subsystem executes. To prevent the inheritance of the context, explicitly set the sample time of ''{4}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextRuntimeOutputMsg">Check runtime output of execution context</sldiag>.]]></entry>
    <entry key="ECoder_LicenseError">Unable to check out the Embedded Coder license which is needed to generate Embedded C code</entry>
    <entry key="MATLABCoder_LicenseError">Unable to check out the MATLAB Coder license which is needed to generate code</entry>
    <entry key="EI_BoolParam">Invalid input arguments for engine interface method ''{0}''.  Parameter ''{1}'' only accept Boolean values ''on'' or ''off''</entry>
    <entry key="EI_UpdateOnlyNotAllowed">UpdateBDOnly is not allowed to be true for HDL or Model Reference style compile using the engine interface.</entry>
    <entry key="EI_CannotCompleteEI">Cannot complete engine interface method</entry>
    <entry key="EI_EINotEnabled">Simulink engine interface is not enabled.</entry>
    <entry key="EI_ImproperSubclass">Input class is not a proper subclass of default classes</entry>
    <entry key="EI_InvalidBlock">Invalid block</entry>
    <entry key="EI_VirtualBlockDoesNotHaveCData">The block is virtual and has been optimized away.</entry>
    <entry key="EI_NOTASynthesizedBlock">The block is NOT a synthesized block.</entry>
    <entry key="EI_ObjChanged">Object changed during model compilation</entry>
    <entry key="EI_InvalidInputPort">Invalid input port</entry>
    <entry key="EI_InvalidModel">Invalid model</entry>
    <entry key="EI_InvalidObject">Invalid Simulink object</entry>
    <entry key="EI_InvalidOption">Invalid option</entry>
    <entry key="EI_InvalidBusSelElIdx">Invalid busSelElIdx. busSelElIdx is always associated with a non-virtual bus source port and must be a valid integer (-1 >= busSelElIdx > maxDFSIdx)</entry>
    <entry key="EI_StrictBusRequired">This function requires that the ''Mux blocks used to create bus signals'' diagnostic be set to ''error''. This diagnostic is in the Configuration Parameters Dialog -> Diagnostics -> Connectivity pane.</entry>
    <entry key="EI_InvalidVBPort">Port is not associated with a virtual bus signal</entry>
    <entry key="EI_InvalidOutputPort">Invalid output port</entry>
    <entry key="EI_InvalidSimType">Invalid Sim type</entry>
    <entry key="EI_InvalidUDIHandle">Invalid UDI handle</entry>
    <entry key="EI_MissingParamValPair">Invalid input arguments for engine interface method ''{0}''.  Input parameter ''{1}'' has no matching value</entry>
    <entry key="EI_ModelInitiated">Model is already initiated</entry>
    <entry key="EI_UnrecognizedParam">Invalid input arguments for engine interface method ''{0}''.  Input parameter ''{1}'' is not a valid parameter</entry>
    <entry key="EI_UnspecifiedInputPort">The block has more than one input port, please specify</entry>
    <entry key="EI_UnspecifiedOutputPort">The block has more than one output port, please specify</entry>
    <entry key="ElementNotFound">Specified element could not be found</entry>
    <entry key="EnabTrigECPotentialPreStartOutputDiff"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases if ''{1}'' is not enabled and triggered at t = 0. Block ''{2}'' may produce non-zero outputs for zero inputs and has been inherited by the ''{3}'' execution context. In previous releases, the ''{4}'' was not inherited by the execution context and may have produced a non-zero output prior to start of the conditional subsystem. To prevent the inheritance of the context, explicitly set the sample time of ''{5}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextPreStartOutputMsg">Check preactivation output of execution context</sldiag>.]]></entry>
    <entry key="EnabTrigECPotentialPreStartOutputDiffConsistentOutportInit"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases if ''{1}'' is not enabled and triggered at t = 0. Block ''{2}'' may produce non-zero outputs for zero inputs and has been inherited by the ''{3}'' execution context. In previous releases, the ''{4}'' was not inherited by the execution context and may have produced a non-zero output prior to start of the conditional subsystem. To prevent the inheritance of the context, explicitly set the sample time of ''{5}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextPreStartOutputMsg">Check preactivation output of execution context</sldiag>.]]></entry>
    <entry key="EnabledECPotentialPreStartOutputDiff"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases if ''{1}'' is not enabled at t = 0. Block ''{2}'' may produce non-zero outputs for zero inputs and has been inherited by the ''{3}'' execution context. In previous releases, the ''{4}'' was not inherited by the execution context and may have produced a non-zero output prior to start of the conditional subsystem. To prevent the inheritance of the context, explicitly set the sample time of ''{5}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextPreStartOutputMsg">Check preactivation output of execution context</sldiag>.]]></entry>
    <entry key="EnabledECPotentialPreStartOutputDiffConsistentOutportInit"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases if ''{1}'' is not enabled at t = 0. Block ''{2}'' may produce non-zero outputs for zero inputs and has been inherited by the ''{3}'' execution context. In previous releases, the ''{4}'' was not inherited by the execution context and may have produced a non-zero output prior to start of the conditional subsystem. To prevent the inheritance of the context, explicitly set the sample time of ''{5}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextPreStartOutputMsg">Check preactivation output of execution context</sldiag>.]]></entry>
	  <entry key="ErrInExtModeMexFile">Error occurred while executing External Mode MEX-file ''{0}'':\n{1}</entry>
    <entry key="ErrorAnnotationCallback">Annotation ''{0}''. Error in the ''{1}'' callback</entry>
    <entry key="ErrorInMultipleDimsModes">Simulink cannot propagate the dimension mode information from the output port {0,number,integer} of ''{1}'' to the input port {2,number,integer} of ''{3}''. The multiplexed signal at the output port {4,number,integer} has a dimension mode setting that is inconsistent with that of the input port {5,number,integer}.</entry>
    <entry key="ErrorInMultipleFrames">Error while propagating frame information from output port {0,number,integer} of ''{1}'' to input port {2,number,integer} of ''{3}''. The ports are set to allow multiplexed signals with inconsistent frame information</entry>
    <entry key="ErrorNotWrittenYet">Error found in ''{0}''.  Error message needs to be assigned and/or written.</entry>
    <entry key="ExecEventAccessError">Simulink can only add or remove an execution event listener to a block during simulation. Block ''{0}'' is not currently executing. Therefore, Simulink cannot add an event listener to this block.</entry>
    <entry key="ExportFcnsMode_AbsoluteTimeNotSupported">Block ''{0}'' uses absolute time, which is not supported with the current configuration for exporting function-calls</entry>
    <entry key="ExportFcnsMode_NonInlinedSFcnsNotSupported">Block ''{0}'' is a non-inlined s-function, which is not supported with the current configuration for exporting function-calls</entry>
    <entry key="ExportedFcnCallSrcInsideContext">The input(s) of the function-call block ''{0}'' depend on its own output(s).  This may cause the inputs of the block to not remain fixed over the duration of the function-call. Consider placing Function-Call Feedback Latch block(s) before corresponding input(s), or select the 'Latch input for feedback signals of function-call subsystem outputs' option on the corresponding Inport block(s).</entry>
    <entry key="ExportedFcnCallSILSrcInsideContext">The input(s) of the block ''{0}'' depend on its own output(s), yet this block simulates the code exported from a subsystem(s) that does not latch its input(s).  This may cause the behavior of the simulation of the code to differ from the simulation of the original subsystem. Consider placing Function-Call Feedback Latch block(s) before the corresponding input(s) of the original subsystem(s), or select the 'Latch input for feedback signals of function-call subsystem outputs' option on the corresponding Inport block(s).</entry>
    <entry key="ExtInpSFExecAtInit">The value at the root inport ''{0}'' is being used by the Stateflow chart ''{1}'', when that chart has the checkbox ''Execute(enter) Chart At Initialization'' selected. This configuration is not supported by the {2}. Consider clearing the chart''s ''Execute(enter) Chart At Initialization'' checkbox, or inserting a signal conversion block immediately after the root inport, making sure the ''Exclude this block from ''Block reduction'' optimization'' checkbox is selected for that signal conversion block</entry>
    <entry key="ExtInpSimscapeWhenFPC">The value at the root inport ''{0}'' is being used by the Simscape block ''{1}''. This configuration is not supported by the {2}. Consider inserting a Simulink Signal Conversion Block immediately after the root inport. Be sure to select the Signal Conversion Block parameter "Exclude this block from 'Block reduction' optimization".</entry>
    <entry key="ExtModeCannotDownloadParamBecauseNoHostToTarget">Parameter {0} cannot be downloaded because its type ({1}) has no external mode host-to-target function registered</entry>
    <entry key="ExtModeCantUploadDataCSC">Simulink cannot upload data to ''{0}'' because one of its source signals uses a custom storage class</entry>
    <entry key="ExtModeCantUploadDataConstantSampleTime">Simulink cannot upload data to ''{0}'' because it has constant sample time</entry>
    <entry key="ExtModeCantUploadDataMultipleRates">Simulink cannot upload data to ''{0}'' because it is not single rate.</entry>
    <entry key="ExtModeCantUploadDataNoConnectedSignals">Simulink cannot upload data to ''{0}'' because it has no connected signals</entry>
    <entry key="ExtModeCantUploadDataNoConvertFunc">Simulink cannot upload data to ''{0}'' because one of its source signals uses a data type not supported by External mode</entry>
    <entry key="ExtModeCantUploadDataNoDWork">Simulink cannot upload data to ''{0}'' because it has no uploadable dworks</entry>
    <entry key="ExtModeCantUploadDataNoInputPorts">Simulink cannot upload data to ''{0}'' because it has no input ports</entry>
    <entry key="ExtModeCantUploadDataPortBasedSampleTime">Simulink cannot upload data to ''{0}'' because it has port based sample time</entry>
    <entry key="ExtModeCantUploadDataRootInport">Simulink cannot upload data to ''{0}'' because one of its driving blocks is a top level inport</entry>
    <entry key="ExtModeCantUploadDataVarDims">Simulink cannot upload data to ''{0}'' because one of its source signals is of variable-size</entry>
    <entry key="ExtModeChecksumMismatch">The model that you are trying to run in External mode does not match the application running on your target. Rebuild the model, run it on your target, and start External mode simulation again.</entry>
    <entry key="ExtModeErrorCallingSFcnExtModeFcn">Error calling external mode function for ''{0}'': {1}</entry>
    <entry key="ExtModeErrorCalllingExtmodeTransports">Error calling extmode_transports.m.</entry>
    <entry key="ExtModeErrorGettingIntrfLevelFromExtmodeTransports">Could not get proper value for ExtModeIntrfLevel from extmode_transports.m</entry>
    <entry key="ExtModeErrorGettingMexFileFromExtmodeTransports">Could not get proper value for ExtModeMexFile from extmode_transports.m</entry>
    <entry key="ExtModeFailToWriteMatFile">Failed to write matrix to matfile</entry>
    <entry key="ExtModeFileDirNameEmpty">You must specify a directory and file name in the ''Directory'' and ''File'' fields of the External Data Archiving Dialog</entry>
    <entry key="ExtModeInvTrigDuration">External mode trigger duration should be a scalar integer greater than zero</entry>
    <entry key="ExtModeInvalidTrigBlock">Invalid External mode trigger signal</entry>
    <entry key="ExtModeInvalidTrigElementSpec">The External mode trigger element specification must be a single integer, the keyword ''last'', or the keyword ''any''</entry>
    <entry key="ExtModeInvalidTrigPortSpec">The External mode trigger port specification must be a single integer or the keyword ''last''</entry>
    <entry key="ExtModeMultipleTriggers">Multiple External mode triggers found</entry>
    <entry key="ExtModeSFAndMATLABFcnInvalidTriggers">External mode cannot use Stateflow or MATLAB Function blocks as trigger signals</entry>
    <entry key="ExtModeMustBeConnectedToStartTarget">Cannot start External mode simulation because target is not connected.</entry>
	<entry key="ExtModeUnexpectedIncomingPacketFromTarget">External mode is terminating because Simulink received an unexpected incoming packet from target.</entry>
    <entry key="ExtModeNameTooLong">Name too long to add suffix</entry>
    <entry key="ExtModeNoHostToTarget">Signals may not be of type {0} because that type has no external mode host-to-target function registered</entry>
    <entry key="ExtModeNoTargetToHost">Objects of type {0} cannot be uploaded because that type has no external mode target-to-host function registered</entry>
    <entry key="ExtModeNoTrigSpecified">No trigger specified</entry>
    <entry key="ExtModeNotAllRequiredFieldsSet">Initialization of external mode (ExtConnect) failed to initialize all required fields (e.g., sizeofTargetReal, hostToTargetRealFcn)</entry>
    <entry key="ExtModeOpenProtocolError">External Mode Open Protocol {0} command failed</entry>
    <entry key="ExtModeOpenProtocolErrorWithStatus">External Mode Open Protocol {0} command failed with status {1,number,integer}</entry>
    <entry key="ExtModeOpenProtocolInvalidTimeSeriesData">''{0}'' cannot have data uploaded to it because one of its source signals uploaded incorrectly formatted data.  This may be due to one of the following reasons:\n \t(1) The time and data vectors are not equal length \n \t(2) The type, dimensions or complexity of the data vectors and the source signals do not match\n \t(3) The type of the time vector is not ''double''\n \t(4) The parameter ''ExtModeOpenProtocolUploadingEqualLengthVectors'' is ''on'', but the length of all data vectors are not equal</entry>
    <entry key="ExtModeTrigElementOutOfRange">The specified external mode trigger element for ''{0}'', port ''{1,number,integer}'' is either negative or out of range.  This port width is {2,number,integer}.  You specified: {3}</entry>
    <entry key="ExtModeTrigPortOutOfRange">The specified external mode trigger port for ''{0}'' is either negative or out of range.  It has {1,number,integer} port(s).  You specified: {2}</entry>
    <entry key="ExtModeTrigSigInTriggeredSubsys">An input to ''{0}'' has been specified as the trigger signal for data uploading.  Trigger signals cannot have destinations with triggered sample times</entry>
    <entry key="ExtOutSFExecAtInit">The value at the root outport ''{0}'' is being assigned by the Stateflow chart ''{1}'', when that chart has the checkbox ''Execute(enter) Chart At Initialization'' selected. This configuration is not supported by the {2}. Consider clearing the chart''s ''Execute(enter) Chart At Initialization'' checkbox, or inserting a signal conversion block immediately before the root outport, making sure the ''Exclude this block from ''Block reduction'' optimization'' checkbox is selected for that signal conversion block</entry>
    <entry key="ExternalDomainRegistrationSymbolNotFound">Registration symbol for ''{0}'' not found.  \n''{1}''</entry>
    <entry key="ExternalModeNotReusableUnconditionalError"><![CDATA[When external mode simulation is chosen, the generated code is not reusable. Consider setting ''Code interface packaging'' to ''Nonreusable function'' on the Configuration Parameters > Code Generation > Interface pane]]></entry>
    <!-- ExternalModeNotReusableMultiInstanceErrorDiagnostic TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt.m -->
    <entry key="ExternalModeNotReusableMultiInstanceErrorDiagnostic"><![CDATA[The generated code for ''{0}'' is not reusable because external mode simulation is chosen. 
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:configset.internal.fixIt(''{0}'',''CodeInterfacePackaging'',''Nonreusable function'')" type="fixit">Set <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function'' (might impact referenced or referencing models)</action>
	<action cmd="matlab:configset.internal.fixIt(''{0}'',''MultiInstanceErrorCode'',''None'')" type="fixit">Suppress this message by setting <sldiag objui="configset" objparam="MultiInstanceErrorCode">Multi-instance code error diagnostic</sldiag> to ''None''</action>
      </actions>]]>      
    </entry>
    <entry key="ExtraModelrefNoncontSignal"><![CDATA[The model block ''{0}'' is outputting a signal that has discontinuities and is feeding a block with continuous states.  To ensure correct answers, we are also tracking all discrete signals that are feeding input ports of the model block with continuous sample times.  This may result in extra solver resets. You can disable this diagnostic by setting <sldiag objui="configset" objparam="ModelReferenceExtraNoncontSigs">Extraneous discrete derivative signals</sldiag> to ''none'']]></entry>
    <entry key="FCSSCycle">Block ''{0}'' is involved in a function-call cycle</entry>
    <entry key="FcnCallActionDataDepViolation">Data dependency violation due to use of function-call or action subsystem. The loop can be traversed in the forward direction by following the red lines and in the backward direction by following the blue lines. Green lines indicate overlapping forward and backward paths in the loop. See Subsystem Examples in the Simulink library for valid and invalid examples of function-call and action subsystems</entry>
    <entry key="FcnCallActionDataDepViolationIgnoreOff">Data dependency violation due to use of function-call or action subsystem. The loop can be traversed in the forward direction by following the red lines and in the backward direction by following the blue lines. Green lines indicate overlapping forward and backward paths in the loop.\n - See Subsystem Examples in the Simulink library for valid and invalid examples of function-call and action subsystems.\n - Use the command,\n \t set_param(''{0}'',''IgnoreBidirectionalLines'',''on'')\n at the MATLAB prompt, and update diagram to reduce occurrences of bidirectional (green) function-call or action lines in the loop</entry>
    <entry key="FcnCallActionDataDepViolationIgnoreOn">Data dependency violation due to use of function-call or action subsystem. The loop can be traversed in the forward direction by following the red lines and in the backward direction by following the blue lines. Green lines indicate overlapping forward and backward paths in the loop.\n - See Subsystem Examples in the Simulink library for valid and invalid examples of function-call and action subsystems.\n - Use the command,\n \t set_param(''{0}'',''IgnoreBidirectionalLines'',''off'')\n at the MATLAB prompt, and update diagram to see all of the bidirectional (green) function-call or action lines in the loop</entry>
    <entry key="FcnCallECPotentialPreStartOutputDiff"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases if ''{1}'' is not called at t = 0. Block ''{2}'' may produce non-zero outputs for zero inputs and has been inherited by the ''{3}'' execution context. In previous releases, the ''{4}'' was not inherited by the execution context and may have produced a non-zero output prior to start of the conditional subsystem. To prevent the inheritance of the context, explicitly set the sample time of ''{5}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextPreStartOutputMsg">Check preactivation output of execution context</sldiag>.]]></entry>
    <entry key="FcnCallECPotentialPreStartOutputDiffConsistentOutportInit"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases if ''{1}'' is not called at t = 0. Block ''{2}'' may produce non-zero outputs for zero inputs and has been inherited by the ''{3}'' execution context. In previous releases, the ''{4}'' was not inherited by the execution context and may have produced a non-zero output prior to start of the conditional subsystem. To prevent the inheritance of the context, explicitly set the sample time of ''{5}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextPreStartOutputMsg">Check preactivation output of execution context</sldiag>.]]></entry>
    <entry key="FcnCallPortGroupedBlkSrcInsideContext">The Model block ''{0}'' has function-call input(s), and its data input(s) depend on its own output(s). This may cause the input(s) of the block to change during the execution. Consider placing Function-Call Feedback Latch block(s) before corresponding input(s). Another option is to select the ''Latch input for feedback signals of function-call subsystem outputs'' parameter on all downstream Inport blocks that connect to corresponding root Inport block(s) inside the Model block ''{1}''.</entry>
    <entry key="FcnCallMdlBlkSrcInsideContext">The Model block ''{0}'' has function-call input(s), and its data input(s) depend on its own output(s). This may cause the input(s) of the block to change during the execution. Consider placing Function-Call Feedback Latch block(s) before corresponding input(s), or selecting the ''Latch input for feedback signals of function-call subsystem outputs'' parameter on corresponding Inport block(s) of the model ''{1}''.</entry>
    <entry key="FcnCallSSCycleDataDepViolation">Input data dependency violation due to function-call blocks. The following function-call blocks are involved in a cycle and do not have a common function-call initiator. To break the cycle you can use a single block such as a Stateflow chart as the initiator. When a common function-call initiator is used, all data connections between the called function-call blocks are treated as data stores (i.e., global variables) and there is no implied data dependency. You can also break the loop by inserting memory and/or unit delays in the appropriate locations. See Subsystem Examples in the Simulink library for valid and invalid examples of function-call subsystems and blocks.</entry>
    <entry key="FcnCallSSSrcInsideContext">The input(s) of the function-call subsystem ''{0}'' depend on the following source blocks, which appear within their own calling context: {1}. This dependency might cause the inputs of the subsystem to not remain fixed over the duration of the function-call. It might also lead to code generation results differing from simulation results. Consider placing Function-Call Feedback Latch block(s) before corresponding input(s), or selecting the ''Latch input for feedback signals of function-call subsystem outputs'' parameter on corresponding Inport blocks of the function-call subsystem.</entry>
    <entry key="FcnCallSSSrcInsideContextStatus"><![CDATA[The input(s) of one or more function-call blocks in ''{0}'' depend on source blocks which appear within their own calling context. This condition is reported as an error because in <sldiag objui="configset" objparam="FcnCallInpInsideContextMsg">Context-dependent inputs</sldiag>, you have chosen ''error''. Additional information on this issue may be obtained by browsing the function-call subsystem examples in the ''sl_subsys_semantics'' model.]]></entry>
    <entry key="FcnCallSSSrcInsideContextGoingToExportStatus">The input(s) of one or more function-call blocks depend on source blocks which appear within their own calling context. In particular, one or more of the function-call blocks corresponds to a function being exported, and the behavior of the exported code may differ from the behavior of the subsystem. This condition is reported as an error because in ''Configuration Parameters'' > ''Diagnostics'' > ''Connectivity'' > ''Function calls'' > ''Context-dependent inputs'', you have chosen ''error''. Additional information on this issue may be obtained by browsing the function-call subsystem examples in the ''sl_subsys_semantics'' model.</entry>
    <entry key="FcnCallSSSrcInsideContextGoingToExportTip">The input(s) of one or more function-call blocks depend on source blocks which appear within their own calling context.  In particular, one or more of the function-call blocks is a function-call subsystem being exported, and the behavior of the exported code may differ from the behavior of the subsystem. To trace these dependencies, in ''Configuration Parameters'' > ''Diagnostics'' > ''Connectivity'' > ''Function calls'' > ''Context-dependent inputs'', choose ''error''. Note that the ''warning'' option will be deprecated in a future release. Additional information on this issue may be obtained by browsing the function-call subsystem examples in the ''sl_subsys_semantics'' model.</entry>
    <entry key="FcnCallSSSrcInsideContextTip">The input(s) of one or more function-call blocks depend on source blocks which appear within their own calling context. To trace these dependencies, in ''Configuration Parameters'' > ''Diagnostics'' > ''Connectivity'' > ''Function calls'' > ''Context-dependent inputs'', choose ''error''. Note that the ''warning'' option will be deprecated in a future release. Additional information on this issue may be obtained by browsing the function-call subsystem examples in the ''sl_subsys_semantics'' model.</entry>
    <entry key="FcnCallSSMessageSrcInsideContext">The message input(s) of the function-call subsystem ''{0}'' depend on the following source blocks, which appear within their own calling context: {1}. This dependency might cause an infinite cycle condition where messages source from the function-call subsystem are cycling around infinitely without progressing the simulation time. Consider placing Message Delay block(s) before corresponding input(s).</entry>
    <entry key="FileNameCycle">The following subsystems are generating code into files that cause cyclic dependency problem.  Please change the file name(s) for these systems to remove the cycle</entry>
    <entry key="FileNameCycleBlockMsg">File ''{0}'' (via subsystem ''{1}'') includes file ''{2}'' (via subsystem ''{3}'')</entry>
    <entry key="FixedStepSolverRequiredInMultiSolverMode">Variable-step solvers are not currently supported in multi-solver simulation mode. To fix the problem, please set the Solver Type to ''Fixed-step'' on the Solver pane of the Configuration Parameter dialog box.</entry>
    <entry key="FocingSFcnDFMsg">Model ''{0}'' has specified\n \tset_param(''{1}'',''TryForcingSFcnDF'',''on'');\n This setting enables a special execution mode found in Simulink 4.0 and earlier that attempts to compensate for S-functions that:\n \t(1) Specify in mdlInitializeSizes that they don''t have direct feedthrough on their input ports; and\n \t(2) In their mdlOutputs or mdlGetTimeOfNextVarHit methods they then access the corresponding input signals.\n This compensation mode can result in incorrect block execution orders for models involving S-functions within nonvirtual subsystems. Please update any S-functions in your model to specify direct feedthrough for any input port signals that are accessed in mdlOutputs() or mdlGetTimeOfNextVarHit() and then run \tset_param(''{2}'',''TryForcingSFcnDF'',''off'');\n Note, the term ''direct feedthrough'' can be misleading. To reduce the confusion, you can think of the direct feedthrough setting as a ''needs input'' setting. Specifically, if the S-function access an input signal in either mdlOutputs() or mdlGetTimeOfNextVarHit(), then the direct feedthrough flag must be set to 1 (true).\n</entry>
    <entry key="FramesNeedsSigProcLicense">''{0}'' contains one or more blocks whose ports have frame-based sampling modes. A DSP System Toolbox license is required for frame-based processing in Simulink</entry>
    <entry key="FramesNeedsSigProcLicenseInpPort">Error occurred while setting sampling mode of input port {0,number,integer} of block ''{1}'' to frame. A DSP System Toolbox license is required for frame-based processing in Simulink</entry>
    <entry key="FramesNeedsSigProcLicenseOutPort">Error occurred while setting sampling mode of output port {0,number,integer} of block ''{1}'' to frame. A DSP System Toolbox license is required for frame-based processing in Simulink</entry>    
    <entry key="FwdPropDoesNotSupportND">Cannot propagate {0,number,integer}-D signal from output port {1,number,integer} of block ''{2}'' to input port {3,number,integer} of block ''{4}''. The latter block does not accept signals with greater than 2 dimensions (either entirely or in its current configuration).</entry>
    <entry key="FwdPropDoesNotSupportNDCompSig">Cannot propagate composite signal containing at least one {0,number,integer}-D signal from output port {1,number,integer} of block ''{2}'' to input port {3,number,integer} of block ''{4}''. The latter block does not accept signals with greater than 2 dimensions (either entirely or in its current configuration).</entry>
    <entry key="FwdTableNotLibWarn">Cannot set forwarding table for block diagram ''{0}'' because it is not a library. Discarding the specified forwarding table information</entry>
    <entry key="FxpPointFiToNoFPSignal">Invalid assignment in ''{0}'': attempt to assign a fi object to a non-fixed-point signal</entry>
    <entry key="FxpPointInvDataTypeID">The data type id does not correspond to a Simulink builtin or fixed-point data type</entry>
    <entry key="FxpPoint_Bias_Mismatch">Invalid assignment in ''{0}'': attempt to assign a fi object of bias {1} to a fixed-point signal of bias {2}</entry>
    <entry key="FxpPoint_Frac_Length_Mismatch">Invalid assignment in ''{0}'': attempt to assign a fi object of fraction length {1,number,integer} to a fixed-point signal of fraction length {2,number,integer}</entry>
    <entry key="FxpPoint_Sign_Mismatch1">Invalid assignment in ''{0}'': attempt to assign a signed fi object to an unsigned signal</entry>
    <entry key="FxpPoint_Sign_Mismatch2">Invalid assignment in ''{0}'': attempt to assign an unsigned fi object to a signed signal</entry>
    <entry key="FxpPoint_Slope_Mismatch">Invalid assignment in ''{0}'': attempt to assign a fi object of slope {1} to a fixed-point signal of slope {2}</entry>
    <entry key="FxpPoint_Word_Length_Mismatch">Invalid assignment in ''{0}'': attempt to assign a fi object of word length {1,number,integer} to a fixed-point signal of word length {2,number,integer}</entry>
    <entry key="FxpPoint_DataType_Mismatch">Invalid assignment in ''{0}'': attempt to assign a fi object with DataType property ''{1}'', which does not match that of the signal.</entry>
    <entry key="GetCurrentTimeInExecOnly">The current simulation time for ''{0}'' can be accessed only when simulation is running</entry>
    <entry key="ITVSActionSubsysMustHaveScalarIC">Simulink detected an invalid initial output. Only scalar initial output is allowed in ''{0}'' when it is in a conditionally executed subsystem ''{1}'' for which the parameter ''Propagate sizes of variable-size signals'' of ''{2}'' is set to ''Only when execution is resumed''.</entry>
    <entry key="ITVSActionSubsysVarDimsMismatch">The current dimension {0,number,integer} of the input signal at port {1,number,integer} of ''{2}'' cannot change from its previous value {3,number,integer} to the current value of {4,number,integer} at time {5}. For the ''{6}'' in the subsystem, the parameter of ''Propagate sizes of variable-size signals'' is set to ''Only when execution is resumed''. However, since the subsystem execution was already resumed prior to this time step, the signal size cannot change. The input size variation should be in sync with the time step at which the subsystem resumes the execution.</entry>
    <entry key="ITVSFcnCallSubsysVarDimsMismatch">The current dimension {0,number,integer} of the input signal at port {1,number,integer} of ''{2}'' cannot change at time {3}. For the ''{4}'' in the subsystem, the parameter of ''Propagate sizes of variable-size signals'' is set to ''Only when enabling''. However, since the subsystem was already enabled prior to this time step, the signal size cannot change. Consider changing the variation of the signal input size such that it is in sync with the time step at which the subsystem is being enabled. If this solution is insufficient, place the function-call initiator inside of an Enabled Subsystem.</entry>
<entry key="ITVSResetSubsysVarDimsMismatch">The current dimension {0,number,integer} of the input signal at port {1,number,integer} of ''{2}'' cannot change from its previous value {3,number,integer} to the current value of {4,number,integer} at time {5}. For the ''{6}'' in the subsystem, the parameter of ''Propagate sizes of variable-size signals'' is set to ''Only when resetting''. However, since the subsystem is not being reset at this time step, the signal size cannot change. The input size variation should be in sync with the time step at which the subsystem is being reset.</entry>
    <entry key="ITVSSubsysMustHaveScalarIC">Simulink detected an invalid initial output. Only scalar initial output is allowed in ''{0}'' when it is in a conditionally executed subsystem ''{1}'' for which the parameter ''Propagate sizes of variable-size signals'' of ''{2}'' is set  to ''Only when enabling''.</entry>
    <entry key="ITVSSubsysVarDimsMismatch">The current dimension {0,number,integer} of the input signal at port {1,number,integer} of ''{2}'' cannot change from its previous value {3,number,integer} to the current value of {4,number,integer} at time {5}. For the ''{6}'' in the subsystem, the parameter of ''Propagate sizes of variable-size signals'' is set to ''Only when enabling''. However, since the subsystem was already enabled prior to this time step, the signal size cannot change. The input size variation should be in sync with the time step at which the subsystem is being enabled.</entry>

    <entry key="IgnoringDataTypeHeaderFilesForERTSfcn">Specified data type header files are ignored when generating an ERT S-function wrapper</entry>
    <entry key="IllegalValue">Illegal value for ''{0}''</entry>
    <entry key="ImpIterBlkSrcIsNotInportBlk">Invalid source for input port {0,number,integer} of Implicit Iterator block ''{1}''. Input ports of Implicit Iterator block must connect directly to Inport blocks.</entry>
    <entry key="PerturbJacNotSupportedInForEachSS">This subsystem does not support the Jacobian because one block inside the subsystem has a discrete state, but does not provide an analytical Jacobian.</entry>
    <entry key="JacWarningForStateInForEachSSOfOriginalModel">The Jacobian only reflects the discrete states of blocks that are outside the For Each subsystems in the original model.</entry>
    <entry key="IncorrectNumRTPWritten">Error in mdlRTW of S-function ''{0}''. This function wrote {1,number,integer} run-time parameters where as it has registered {2,number,integer} run-time parameters</entry>
    <entry key="InitStatesInForEachSSNotSupported">Model ''{0}'' has blocks with states inside one or more subsystems which contain a For Each block. Initialization of such states is not supported.</entry>
    <entry key="InitStatesInArrayFormatShouldBeAvoided"> Initializing the model ''{0}'' with the initial state specified in array format is not recommended.\nThe array format does not contain information about how the specified states are associated with the respective blocks. Since the sorted order may change under different conditions, such associations are necessary for achieving consistent results. Therefore, consider initializing the states using a structure format.\nThis warning can disabled or changed to an error message by using set_param(modelName, 'InitInArrayFormatMsg', 'None') or set_param(modelName, 'InitInArrayFormatMsg', 'Error'). If you get the initial state by using the save final state option, you can change the format to structural format to avoid this warning too.</entry>
    <entry key="InitStatesInRefMdlNotSupported">Model ''{0}'' has model blocks with states. Initialization of these states in referenced models is not supported if the initial state is specified in array format.</entry>
    <entry key="InjectionDataMethodCalledNotProperly">For the engine interface method "getInjectionDataForSignalBasedLinearization" to execute properly, the model parameter "CompileForInfoOnSignalBasedLinearization" should be set to "on".Make sure that  you run the command "set_param(mdl,''CompileForInfoOnSignalBasedLinearization'',''on'');" before calling the method.</entry>
    <entry key="InputDimsMismatch">The current dimensions of input port {0,number,integer} and input port {1,number,integer} of ''{2}'' are different at time {3}. All input ports must have the same dimensions throughout the model execution.</entry>
    <entry key="InputDimsModeInconsistent">The dimension mode of input port {0,number,integer} and input port {1,number,integer} of ''{2}'' are different. All input ports must have the same dimension mode.</entry>
    <entry key="InputNotConnected">Input port {0,number,integer} of ''{1}'' is not connected.</entry>
    <entry key="InputPortFrameDataMismatch">Input port frame data mismatch.  Input port {0,number,integer} of ''{1}'' expects {2} data, however, it is driven by {3} data</entry>
    <entry key="InputPortMultiDDimsDisallowed">Cannot set dimensions of input port {0,number,integer} of ''{1}'' to {2}. This block is not setup to handle signals of dimensions greater than 2 dimensions.</entry>
    <entry key="InputPortTrailingUnityDimsDisallowed">Cannot initialize dimensions of input port {0,number,integer} of ''{1}'' to {2}. When the number of dimensions of a matrix exceeds 2, the size of the trailing dimension must be greater than 1.</entry>
    <entry key="InsertBlkAtInportIntroduceNewTsInTrigSys">A Rate Transition block cannot be automatically inserted in a triggered or function-call subsystem because it would introduce an invalid rate in that subsystem. Manually inserting a Rate Transition block at input port {0,number,integer} of block ''{1}'' can fix this is error.</entry>
    <entry key="InsertBlkAtOutportIntroduceNewTsInTrigSys">A Rate Transition block cannot be automatically inserted in a triggered or function-call subsystem because it would introduce an invalid rate in that subsystem. Manually inserting a Rate Transition block at output port {0,number,integer} of block ''{1}'' can fix this is error.</entry>
    <entry key="InsertBlkAtVirtualBlkInput">Simulink detected an unspecified rate transition. However, Simulink cannot automatically insert a Rate Transition block upstream of a virtual block. Manually insert a Rate Transition block at input port {0,number,integer} of block ''{1}''.</entry>
    <entry key="InsertBlkAtVirtualBlkOutput">Simulink detected an unspecified rate transition. However, Simulink cannot automatically insert a Rate Transition block downstream of a virtual block. Manually insert a Rate Transition block at output port {0,number,integer} of block ''{1}''.</entry>
    <!-- InsertRTBTypeMismatch2Blks TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsOpen.m -->
    <entry key="InsertRTBTypeMismatch2Blks"><![CDATA[Unable to insert a rate transition block to ensure deterministic data transfer between output port {0,number,integer} of block ''{1}'' and input port {2,number,integer} of block ''{3}'' for one of the following reasons: \n - One of the blocks runs at an asynchronous rate; \n - Sample time of one of the blocks has a nonzero offset; \n - Sample times of two blocks are not an integer multiple pair.
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:configset.internal.open(''{1}'',''InsertRTBMode'')" type="suggestion">Set ''Deterministic data transfer'' to ''Whenever possible'' or ''Never (minimum delay)''</action>
      </actions>]]>
    </entry>
    <entry key="InvActionDuringCallback">Cannot change model ''{0}'' while in a callback</entry>
    <entry key="InvActionSSDataInput">Action subsystem data dependency violation.\nInput port {0,number,integer} of action subsystem ''{1}'' is driven by ''{2}''. This driver must be executed before the action initiator ''{3}'' to ensure that the output of the driver is valid when the action subsystem executes. However, Simulink cannot execute the driver before the action initiator because of a data dependency between the output of the action initiator and the driver. Note, the number of action-calls between the initiator and the subsystem it is executing is {4,number,integer}. See Subsystem Examples in the Simulink library for valid and invalid examples of function-call subsystems</entry>
    <entry key="InvActionSSDataInputNoObj">Action subsystem data dependency violation.\nInput port {0,number,integer} of action subsystem ''{1}'' is driven by ''{2}''. This driver must be executed before the action initiator ''{3}'' to ensure that the output of the driver is valid when the action subsystem executes. However, Simulink cannot execute the driver before the action initiator because of a data dependency between the output of the action initiator and the driver. Note, the number of action-calls between the initiator and the subsystem it is executing is {4,number,integer}. See Subsystem Examples in the Simulink library for valid and invalid examples of function-call subsystems</entry>
    <entry key="InvAlgLoopWithConstTsBlocks">Block diagram ''{0}'' contains an invalid algebraic loop where some of the blocks in the loop have constant ([inf, 0]) sample time. Either all the blocks or none of the blocks in an algebraic loop should have constant sample time</entry>
    <entry key="InvAsyncTimeSourceNotBaseRate">The time source choice for S-function ''{0}'' is not valid. The function-call destination ''{1}'' input port {2,number,integer} needs absolute time and requires that this option be set to SS_TIMESOURCE_BASERATE.</entry>
    <entry key="InvAsyncCustomFlag">The flag SS_OPTION_ASYNCHRONOUS_CUSTOM for S-function ''{0}'' is not supported for its function-call destination ''{1}''.</entry>
    <entry key="ModelRefInitAsyncPriorityNotSpecified">The block ''{0}'' must specify asynchronous task priority of {3,number,integer} to match the priority specified at input port {2,number,integer} of function-call Model block ''{1}''.</entry>
    <entry key="ModelRefInitAsyncPriorityMismatch">The asynchronous task priority {1,number,integer} specified by block ''{0}'' does not match the priority {4,number,integer} specified at input port {3,number,integer} of function-call Model block ''{2}''.</entry>
    <entry key="ModelRefInvalidInitAsyncPriority">Specification of asynchronous task priority {1,number,integer}  by S-function ''{0}'' is invalid when concurrent tasks are enabled.</entry>
    <entry key="ModelRefFcnPortHasMultipleInitiators"> Model block ''{0}'' is driven by an asynchronous function call at inport {1, number, integer}. An asynchronous function call that directly or indirectly involves multiple asynchronous function calls is not allowed to drive a model block input port.</entry>

    <entry key="InvBlkInputPortTs">Sample time [{0}, {1}] of ''{2}'' input port
    number {3,number,integer} is invalid. Sample time must be a real double
    scalar (period) or a real double vector of length 2 (period, offset); where
    period, offset must be finite and non-negative and offset must be less than
    period. </entry>

    <entry key="InvBlkOutputPortTs">Sample time [{0}, {1}] of ''{2}'' output
    port number {3,number,integer} is invalid. Sample time must be a real double
    scalar (period) or a real double vector of length 2 (period, offset); where
    period, offset must be finite and non-negative and offset must be less than
    period.</entry>

    <entry key="InvBlkTs">The period ({0}) and offset ({1}) specified as sample
    time {2,number,integer} of ''{3}'' is invalid. Sample time must be a real double
    scalar (period) or a real double vector of length 2 (period, offset); where
    period, offset must be finite and non-negative and offset must be less than
    period. </entry>

    <entry key="InvBlkUsingElapsedTimeInFcnCallSubsys">Function-call subsystem ''{0}'' cannot contain block ''{1}'' because this block requires a service that maintains the time that has elapsed between two consecutive executions. Since the function-call subsystem is being executed multiple times at t = {2}, the concept of elapsed time is not well-defined between two such executions.</entry>
    <entry key="InvBlkUsingElapsedTimeInIteratorSubsys">Iterator subsystem ''{0}'' cannot contain block ''{1}'' because this block requires a service that maintains the time that has elapsed between two consecutive executions. Since the iterator subsystem can be executed multiple times at a given time step, the concept of elapsed time is not well-defined between two such executions.</entry>
    <entry key="InvBlockAdded">Only Inport, Outport, Connection Port, Subsystem and Model blocks can be added to Variant Subsystem block ''{0}''.</entry>
    <entry key="InvBlockDelete">Cannot delete ''{0}'' while simulation is running</entry>
    <entry key="InvBlockNameInInitStateStruct" note="stringDatatypeUpdate">Error loading the initial state for model ''{0}''. The {1}({2,number,integer}).{3} field in the initial state structure must be a character vector specifying the path to the block</entry>
    <entry key="InvCStateChange">Cannot change number of continuous states of  ''{0}'' while simulation is running</entry>
    <entry key="InvCallForFeature" note="stringDatatypeUpdate">Invalid call to ''slInternal'' with the ''slfeature'' option. This option requires a valid suboption</entry>
    <entry key="InvCallForFeatureName">Invalid slfeature name ''{0}'' specified</entry>
    <entry key="IncompatibleTypeForInplace">Input and output types are incompatible for in-place replacement.</entry>
    <entry key="InvCommandDuringPreLoadFcnCallback">Cannot execute command ''{0}'' for  model ''{1}'' while processing PreLoadFcn callback</entry>
    <entry key="InvDFeedChange">Cannot change direct feedthrough of ''{0}'' while simulation is running</entry>
    <entry key="InvDStateChange">Cannot change number of discrete states of ''{0}'' while simulation is running</entry>
    <entry key="InvDWorkName">Invalid name ''{0}'' specified by ''{1}'' for data type work vector {2,number,integer}. Data type work vector name must be a valid MATLAB name and must be less than 16 characters long. In addition, the following names are reserved for built-in work vectors: ''DWORK'', ''MODE'', ''RWORK'', ''IWORK'', ''PWORK'' or ''DSTATE''</entry>
    <entry key="InvDisallowConstTsChange">Cannot change disallow_constant_ts flag of ''{0}'' while simulation is running</entry>
    <entry key="InvCompDiscSampleTime"><![CDATA[The sample time propagated to ''{1}'' is not discrete but {0}. Specify a discrete sample time in the source of the incoming signal. For more information, see <a href="matlab:helpview([docroot ''/simulink/helptargets.map''],''specifying_sample_time'')">"How to specify the sample time"</a>.]]></entry>
    <entry key="InvUserDiscSampleTime">The block ''{0}'' does not permit sample time {1}. Enter a discrete or inherited sample time in ''{2}''.</entry>
    <entry key="InvElementInInitStateStruct">Error loading the initial state for model ''{0}''. Unable to find a matching block state corresponding to element {1,number,integer} of {2} structure array</entry>
    <entry key="InvExpFcn_NoBranching">Cannot export functions for ''{0}''. Function-call subsystems invoked from branches of the same function-call signal are not supported when generating exported functions.</entry>
    <entry key="InvExpFcn_NoLatchBlk">Cannot export functions for ''{0}''. The generation of exported functions is not supported for a subsystem containing a Function-Call Feedback Latch block. Refer to ''{1}''.</entry>
    <entry key="InvExtModeMexFile">External mode MEX-file ''{0}'' does not exist or is not on the MATLAB path. Note that the MEX-file name entered should not have a file extension</entry>
    <entry key="InvExtModeMexFileArgs">Error occurred while parsing External Mode MEX-file arguments ''{0}''.</entry>
    <entry key="InvExtModeParamVectName">Invalid MATLAB variable name specified for the ''ExtModeParamVectName'' property</entry>
    <entry key="InvFMexTsLen">Sample times (TS) matrix returned by FORTRAN MEX S-function ''{0}'' in ''{1}'' must be a matrix of dimension {2,number,integer}x2.</entry>
    <entry key="InvFMexTsMatrix">Invalid sample times (TS) matrix returned by  FORTRAN MEX S-function ''{0}'' in ''{1}''.</entry>
    <entry key="InvFcnCallSSDataInput">Function-call block data dependency violation.\nInput port {0,number,integer} of function-call block ''{1}'' is driven by ''{2}''. This driver must be executed before the function-call initiator ''{3}'' to ensure that the output of the driver is valid when the function-call block executes. However, Simulink cannot execute the driver before the function-call initiator because of a data dependency between the output of the function-call initiator and the driver. Note, the number of function-calls between the initiator and the block it is executing is {4,number,integer}.  See Subsystem Examples in the Simulink library for valid and invalid examples of function-call blocks.</entry>
    <entry key="InvFcnCallSSDataInputNoObj">Function-call block data dependency violation.\nInput port {0,number,integer} of function-call block ''{1}'' is driven by ''{2}''. This driver must be executed before the function-call initiator ''{3}'' to ensure that the output of the driver is valid when the function-call block executes. However, Simulink cannot execute the driver before the function-call initiator because of a data dependency between the output of the function-call initiator and the driver. Note, the number of function-calls between the initiator and the block it is executing is {4,number,integer}. See Subsystem Examples in the Simulink library for valid and invalid examples of function-call blocks.</entry>
    <entry key="InvFieldInInitStateStruct">Error loading the initial state for model ''{0}''. Initial state must be a structure containing a {1} structure array. The {2} structure should have the following fields: ''{3}'', ''{4}'', and ''{5}''</entry>
    <entry key="InvInputPortChange">Cannot change input port properties of ''{0}'' while simulation is running</entry>
    <entry key="InvLabelInInitStateStruct" note="stringDatatypeUpdate">Error loading the initial state for model ''{0}''. The {1}({2,number,integer}).{3} field in the initial state structure must be a character vector specifying a valid state label</entry>
    <entry key="InvLineAdded">A line cannot be added to Variant Subsystem block ''{0}''.</entry>
    <entry key="InvLinearAnalysisAttrChange">Cannot change linear analysis attributes of output port {0,number,integer} of ''{1}'' while simulation is running</entry>
    <entry key="InvMFileTsLen">Sample times (TS) matrix returned by MATLAB S-function ''{0}'' in ''{1}'' must be a matrix of dimension {2,number,integer}x2.</entry>
    <entry key="InvMFileTsMatrix">Invalid sample times (TS) matrix returned by MATLAB S-function ''{0}'' in ''{1}''.</entry>
    <entry key="InvMatlFeatureCalledViaSlFeature">slfeature cannot be used as a gateway to feature ''{0}''. This feature was either (a) not registered from Simulink, or (b) has special callbacks that cannot be invoked through this gateway</entry>
    <entry key="InvMdlRefFieldInInitStateStruct">Error loading the initial state for model ''{0}''. The {1}({2,number,integer}).{3} field in the initial state structure must be a logical scalar value</entry>
    <entry key="InvMemLayoutConnStatePort">Invalid connection to ''{0}'' input port {1,number,integer} from the state port of ''{2}''. Only signals from data output ports can be connected to this block</entry>
    <entry key="InvMemLayoutConnectType">Invalid memory layout connection setting found in ''{0}'' output port {1,number,integer}. Please contact MathWorks for assistance with this error message</entry>
    <entry key="InvMemLayoutLoop">Invalid loop involving blocks {0}</entry>
    <entry key="InvMemLayoutPartialPortSrc">Invalid partial port connection found between memory layout block ''{0}'' input port {1,number,integer} and its source(s). Please contact MathWorks for assistance with this error message</entry>
    <entry key="InvModeVectChange">Cannot change number mode vector elements of ''{0}'' while simulation is running</entry>
    <entry key="InvModelBusy">Cannot close the model ''{0}'' while processing a callback</entry>
    <entry key="InvModelChange">Cannot change the model ''{0}'' while the simulation is running</entry>
    <entry key="InvModelChangeInFastRestart">Cannot change the model ''{0}'' while it is initialized in Fast Restart. Click &lt;a href=\"matlab:set_param(bdroot,'FastRestart','off')\"&gt;here&lt;/a&gt; to disable Fast Restart</entry>
    <entry key="InvSimCommandArgumentsForFastRestart">The following parameters are not supported by the sim command when Fast Restart is enabled: ''{0}''</entry>
    <entry key="InvModelClose">Cannot close the model ''{0}'' when it is being compiled or while the simulation is running</entry>
    <entry key="InvModelCloseWhenInitializedInFastRestart">Cannot close the model ''{0}'' when it is initialized in Fast Restart</entry>
    <entry key="InvModelCloseDuringSave">Cannot close the model ''{0}'' while it is being saved</entry>
    <entry key="InvModelInitingModelWS">Cannot close the model ''{0}'' while initializing the model workspace</entry>
    <entry key="InvModelUdim">{0}Invalid input vector length ({1,number,integer}) provided to ''{2}'', a length of {3,number,integer} is required</entry>
    <entry key="InvNameChangeDuringLoad">Cannot change name of block diagram ''{0}'' to ''{1}'' when it is being loaded. Name changes are allowed only after the block diagram is loaded fully</entry>
    <entry key="InvNumPortsChange">Cannot change number of ports of ''{0}'' while simulation is running</entry>
    <entry key="InvOptionForFeature">Invalid sub-option ''{0}'' provided in call to ''slInternal'' with the ''slfeature'' option</entry>
    <entry key="InvOptionForFeatureGetSet">Invalid call to get/set slfeature</entry>
    <entry key="InvOptionForFeatureStats">Invalid additional input arguments provided for sub-option ''stats'' in call to ''slInternal'' with the ''slfeature'' option. No additional arguments are expected</entry>
    <entry key="InvOutHasDiscontChange">Cannot change output_has_discontinuities flag of ''{0}'' while simulation is running</entry>
    <entry key="InvParamComplexityChange">Cannot change complexity (real or complex) of parameter {0,number,integer} in ''{1}'' while the simulation is running</entry>
    <entry key="InvParamDTypeChange">Cannot change data type of parameter {0,number,integer} in ''{1}'' while the simulation is running</entry>
    <entry key="InvParamWidthChange">Cannot change the width of parameter {0,number,integer} in ''{1}'' while simulation is running</entry>
    <entry key="InvPortCharChange">Cannot change port characteristics of ''{0}'' while simulation is running</entry>
    <entry key="InvPortDimsChange">Cannot change port dimensions of ''{0}'' while simulation is running</entry>
    <entry key="InvPriOnFcnCallSS">Ignoring priority {0,number,integer} specified on function call subsystem ''{1}''. Priorities cannot be specified on function call subsystems since their execution is controlled by the source of the function call.</entry>
    <entry key="InvPriOnSimulinkFunction">Ignoring priority {0,number,integer} specified on Simulink Function ''{1}''. Priorities cannot be specified on Simulink Functions since their execution is controlled by corresponding Function Caller blocks.</entry>
    <entry key="InvPriOnVirtBlock">Ignoring priority {0,number,integer} specified on {1} ''{2}''. Priorities cannot be specified on virtual blocks</entry>
    <entry key="InvRTWGenSettingsYESNOType">The value for the RTWGenSetting field, ''{0}'', can only be ''yes'' or ''no''</entry>
    <entry key="InvRTWIdLen">Invalid length specified for the identifiers (see the Code Generation ''General code appearance options'' of the Configuration Parameters dialog). Identifier length must be greater than or equal to {0,number,integer}</entry>
    <entry key="InvRapidAccelRTPOpt">Invalid specification of Rapid Accelerator Parameter sets. Note that you need to set the option ''RapidAcceleratorUpToDateCheck'' to ''off''</entry>
    <entry key="InvRapidAccelUpdateCheckOpt">Invalid Rapid Accelerator Update Check option</entry>
    <entry key="InvRetForFeature">Invalid number of return values for call to ''slInternal'' with the ''slfeature'' option</entry>
    <entry key="InvReturnWkspOutputOpt">Invalid ReturnWorkspaceOutputs option</entry>
    <entry key="InvSFcnCall_CommonInit">Invalid configuration for block ''{0}''. The function-calls exported on input ports ''{1,number,integer}'' and ''{2,number,integer}'' are not driven by a common function-call initiator</entry>
    <entry key="InvSFcnCall_InlinedInAccel">The function-call initiator ''{0}'' is inlined for accelerator mode. However, this block is driving exported function-calls which do not support inlining. Examples of function-call initiators which are not inlined for accelerator are Stateflow charts and S-Functions which do not use TLC with accelerator</entry>
    <entry key="InvSFcnCall_RTWNotSupported">The S-Function block ''{0}'' does not support code generation because the block is configured to export function calls</entry>
    <entry key="InvSFcnStructParamDType">Invalid value for parameter {0,number,integer} in ''{1}'' because its data type does not match the structure data type that was used when the S-Function was generated</entry>
    <entry key="InvSaveMdlBeforeSaveAs">Cannot export the model to a previous version because it has unsaved changes. Save the model before proceeding.</entry>
    <entry key="InvScopeArrayFormat1">''{0}'' has more than one input port and can only log multiport data if you set the ''Format'' parameter to ''Structure'' or ''Structure with time'' and not ''Array''. This parameter is in the ''Data history'' tab of the ''Scope Parameters'' dialog. This dialog can be chosen from the ''Scope'' menu.</entry>
    <entry key="InvScopeArrayFormat2">The input to ''{0}'' is a matrix signal. A matrix signal can only be logged if you set the ''Format'' parameter to ''Structure'' or ''Structure with time'' and not ''Array''. This parameter is in the ''Data history'' tab of the ''Scope Parameters'' dialog. This dialog can be chosen from the ''Scope'' menu.</entry>
    <entry key="InvSignalDims">Dimensions specified in ''{0}'' are invalid. Dimensions must either be inherited (set to -1) or specified as a vector containing positive integer values.</entry>
    <entry key="InvSignalDimsWidth">Error in port widths or dimensions.  The dimension ''{0}'' specified in ''{1}'' must specify a size between 1 and {2,number,integer}.</entry>
    <entry key="InvSimCommandDuringPreLoadFcnCallback">Cannot execute sim command for  model ''{0}'' while processing PreLoadFcn callback</entry>
    <entry key="InvStatePortUsage">State ports can only be used to break algebraic loops or to "hand-off" states between systems.  Use the output port rather than the state port of ''{0}'' as the source of the signal routed (either by direct or virtual connection) to ''{1}''</entry>
    <entry key="InvSubsystemResetInputSampleTime">The sample time of the reset signal entering subsystem ''{0}'' is different from the sample time of the subsystem. Consider inserting a Rate Transition block at the reset input port of the subsystem.</entry>
    <entry key="InvSupAliasTypeChange">Cannot change supports_alias_data_types flag of ''{0}'' while simulation is running</entry>
    <entry key="InvTnext">Time of next hit, {0}, returned by S-function ''{1}'' in ''{2}'' must be greater than previous time hit value of {3}.</entry>
    <entry key="InvTnextForM">Time of next hit, {0}, returned by S-function ''{1}'' in ''{2}'' during flag={3,number,integer} call must be greater than previous time hit value of {4}.</entry>
    <entry key="InvTrigSignal">''{0}'' that defines the trigger signal must be configured for data logging</entry>
    <entry key="InvTsChange">Cannot change sample time of ''{0}'' while simulation is running.</entry>
    <entry key="InvValForFeatureSet">Integer scalar value must be specified while trying to set slfeature ''{0}''</entry>
    <entry key="InvValuesComplexityInInitStateStruct">Type mismatch in the initial state for model ''{0}''. The {1}({2,number,integer}).{3} field in the initial state structure is complex valued, where as the corresponding state ''{4}'' in block ''{5}'' is not complex valued</entry>
    <entry key="InvValuesDataTypeInInitStateStruct">Data type mismatch in the initial state for model ''{0}''. The {1}({2,number,integer}).{3} field in the initial state structure is of type {4}, where as the corresponding state ''{5}'' in block ''{6}'' is of type {7}</entry>
    <entry key="InvValuesInInitStateStruct">Error loading the initial state for model ''{0}''. The {1}({2,number,integer}).{3} field in the initial state structure must be a finite numeric array</entry>
    <entry key="InvValuesSizeInInitStateStruct">Size mismatch in the initial state for model ''{0}''. The {1}({2,number,integer}).{3} field in the initial state structure has {4,number,integer} element(s), where as the corresponding state ''{5}'' in block ''{6}'' has {7,number,integer} element(s)</entry>
    <entry key="InvVarTsLoc">''{0}'' is not allowed within conditionally executed subsystems since it contains a variable step size sample time.</entry>
    <entry key="InvVectorModeChange">Cannot change vector/matrix operation mode of ''{0}'' while simulation is running</entry>  
    <entry key="InvalidBlockConnection">Unexpected or invalid block connection.  This can arise when a library block changes its underlying implementation to use a new domain that is incompatible with the original implementation.  Check and reconfigure block connections to use a consistent domain.</entry>
    <entry key="UnknownCharacterEncoding">Unknown character encoding ''{0}'' specified for model ''{1}''.</entry>
    <entry key="InvalidCondInput">S-function ''{0}'' indicated that its input port {1,number,integer} is conditionally needed in the output function. However, the input port direct feed through flag is false. That is, it does not need its input in the output function. This is invalid.</entry>
    <entry key="InvalidDimFromETVSSubsysIC">Invalid dimension detected: The initial output of ''{0}'' specifies that the output dimension of {1,number,integer} is {2,number,integer}, which exceeds the maximum dimension {3,number,integer}.</entry>
    <entry key="InvalidDtypeIDFromDataDictionary">Invalid type ID generated for the type ''{0}'' by data dictionary.</entry>
    <entry key="InvalidElementName">Element with name ''{0}'' exists</entry>
    <entry key="InvalidElementType">Invalid element type</entry>
    <entry key="InvalidICForBusWithVarDimsElements">Initial output of ''{0}'' block does not support a bus with variable size elements.</entry>
    <entry key="InvalidInitialDimensions_sds">Invalid port initial dimension.  Dimension of {0} port {1,number,integer} of ''{2}'' has not been set.</entry>
    <entry key="InvalidInputTypeForProdWithVardims">The input to ''{0}'' is a variable-size signal with a data type of fixed-point with non-zero bias and/or slope. Product blocks do not support this input. If you wish to use fixed-point data type, consider changing the bias to zero and/or using unitary slope.</entry>
    <entry key="InvalidInputTypeForSumWithVardims">The input to ''{0}'' is a variable-size signal with a data type of fixed-point with non-zero bias. Sum blocks do not support this input. If you wish to use fixed-point data type, consider changing the bias to zero.</entry>
    <entry key="InvalidInputVariableSizeSignal"><![CDATA[The signal connected to the input port {0,number,integer} of block ''{1}'' is a variable-size signal, which is currently disabled for code generation.
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:configset.internal.fixIt(''{1}'',''SupportVariableSizeSignals'',''on'')" type="fixit">Select <sldiag objui="configset" objparam="SupportVariableSizeSignals">Support variable-size signals</sldiag> (might impact referenced or referencing models)</action>
      </actions>]]>
    </entry>
    <entry key="InvalidMemSecForSystem">Invalid memory section ''{0}'' specified in the Subsystem Parameters dialog of block ''{1}''. The memory section is not defined in package ''{2}'', which is specified in the Configuration Parameters dialog</entry>
    <entry key="InvalidMemSecForSystemDefaults">Invalid memory section ''{0}'' specified in the Configuration Parameters dialog of block diagram ''{1}''. The memory section is not defined in package ''{2}''</entry>
    <entry key="InvalidModelArgument">''{0}'' is not a valid argument</entry>
    <entry key="InvalidModelFlag">Simulink model ''{0}'' was called with an invalid flag</entry>
    <entry key="InvalidModelFlagOption">''{0}'' is an invalid flag option</entry>
    <entry key="InvalidModelOption">''{0}'' is an invalid option</entry>
    <entry key="InvalidNumDataStores">Number of DataStores for ''{0}'' cannot be negative</entry>
    <entry key="InvalidNumDworks">Number of Dworks for ''{0}'' cannot be negative</entry>
    <entry key="InvalidNumInputPorts">Number of input ports for ''{0}'' cannot be negative</entry>
    <entry key="InvalidNumModelArg">Simulink model ''{0}'' was called with incorrect number of arguments</entry>
    <entry key="InvalidNumOutputPorts">Number of output ports for ''{0}'' cannot be negative</entry>
    <!-- InvalidOutputVariableSizeSignal TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt.m -->
    <entry key="InvalidOutputVariableSizeSignal"><![CDATA[The signal connected to the output port {0,number,integer} of block ''{1}'' is a variable-size signal, which is currently disabled for code generation.
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:configset.internal.fixIt(''{1}'',''SupportVariableSizeSignals'',''on'')" type="fixit">Select <sldiag objui="configset" objparam="SupportVariableSizeSignals">Support variable-size signals</sldiag> (might impact referenced or referencing models)</action>
      </actions>]]>
    </entry>
    <entry key="InvalidPassThroughInputIdx">The input port index {0,number,integer} specified in ''ssSetInputDimsSameAsOutputDims'' for the S-Function block ''{1}'' does not exist.</entry>
    <entry key="InvalidPassThroughOutputIdx">The output port index {0,number,integer} specified in ''ssSetInputDimsSameAsOutputDims'' for the S-Function block ''{1}'' does not exist.</entry>
    <entry key="InvalidReturnErrorsOption">''{0}'' is an invalid option for CaptureErrors.</entry>
    <entry key="InvalidSkipParameterUpdateOption">''{0}'' is an invalid option for SkipParameterUpdate.</entry>
    <entry key="InvalidFastRestartOption">''{0}'' is an invalid option for FastRestart.</entry>
    <entry key="SkipParameterUpdateNeedsFastRestart">SkipParameterUpdate parameter can be set only when the model is initialized in Fast Restart.</entry>
    <entry key="InvalidSCDBlockLinearizationSpecification" note="stringDatatypeUpdate">The block parameter ''SCDBlockLinearizationSpecification'' is invalid.  The parameter should either be a MATLAB structure or an empty MATLAB array [].  The structure should have the fields containing only character vectors with the fields ''Name'', ''Specification'', ''Type'', ''ParameterNames'', and ''ParameterValues''.</entry>
    <entry key="InvalidSampleTime">Invalid sample time format has been specified for ''{0}''. Sample time must be specified using a vector of the form [sample_time, offset_time]</entry>
    <entry key="InvalidScalarICTypeForOutportWithVirtualBus">The parameter ''Initial output'' of Outport block ''{0}'' must be of data type ''boolean'', ''uint8'', ''uint16'', ''uint32'', ''int8'', ''int16'', ''int32'', ''single'', ''double'', or fixed-point data type, because the parameter is scalar and the Outport block is driven by a virtual bus signal with mixed data types.</entry>
    <entry key="InvalidScrollbarOffset">The scrollbar offset must be an positive integer vector of length two</entry>
    <entry key="InvalidSelfLoop">The block ''{0}'' is in an invalid algebraic loop because of a self loop around the parent non-virtual subsystem ''{1}''.</entry>
    <entry key="InvalidSimViewingDevice">''{0}'' is not a valid SimViewingDevice.  SimViewingDevices must\n \to be single rate\n \to have no continuous states \to have no outputs</entry>
    <entry key="InvalidSolver">The "{0}" solver cannot be used to simulate block diagram ''{1}'' because it contains continuous states</entry>
    <!-- InvalidInputSignalComplexity TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt.m -->
    <entry key="InvalidInputSignalComplexity"><![CDATA[The signal connected to input port {0,number,integer} of block ''{1}'' is complex valued or contains complex valued bus element(s).
      <actions exclusiveFixIts="yes">
        <action type="suggestion">Change the signal or bus element(s) to non-complex</action>
        <action cmd="matlab:configset.internal.fixIt(''{1}'',''SupportComplex'',''on'')" type="fixit">Select <sldiag objui="configset" objparam="SupportComplex">Support complex numbers</sldiag> (might impact referenced or referencing models)</action>
      </actions>]]>
    </entry>
    <entry key="InvalidInputSignalDataType"><![CDATA[The signal connected to input port {0,number,integer} of block ''{1}'' is a floating point type or contains floating point type bus elements(s).
      <actions exclusiveFixIts="yes">
        <action type="suggestion">Change the data type</action>
        <action cmd="matlab:configset.internal.fixIt(''{1}'',''PurelyIntegerCode'',''off'')" type="fixit">Select <sldiag objui="configset" objparam="PurelyIntegerCode">Support floating-point numbers</sldiag> (might impact referenced or referencing models)</action>
      </actions>]]>
    </entry>
    <!-- InvalidOutputSignalComplexity TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt.m -->
    <entry key="InvalidOutputSignalComplexity"><![CDATA[The signal connected to output port {0,number,integer} of block ''{1}'' is complex valued or contains complex valued bus element(s).
      <actions exclusiveFixIts="yes">
        <action type="suggestion">Change the signal or bus element(s) to non-complex</action>
        <action cmd="matlab:configset.internal.fixIt(''{1}'',''SupportComplex'',''on'')" type="fixit">Select <sldiag objui="configset" objparam="SupportComplex">Support complex numbers</sldiag> (might impact referenced or referencing models)</action>
      </actions>]]>
    </entry>
    <!-- InvalidOutputSignalDataType TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt.m -->
    <entry key="InvalidOutputSignalDataType"><![CDATA[The signal connected to output port {0,number,integer} of block ''{1}'' is a floating point type or contains floating point type bus elements(s).
      <actions exclusiveFixIts="yes">
        <action type="suggestion">Change the data type</action>
        <action cmd="matlab:configset.internal.fixIt(''{1}'',''PurelyIntegerCode'',''off'')" type="fixit">Select <sldiag objui="configset" objparam="PurelyIntegerCode">Support floating-point numbers</sldiag> (might impact referenced or referencing models)</action>
      </actions>]]>
    </entry>
    <!-- xxx does not work -->
    <!-- InvalidWorkComplexity TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt.m -->
    <entry key="InvalidWorkComplexity"><![CDATA[The work vector of block ''{0}'' is complex valued.
      <actions exclusiveFixIts="yes">
        <action type="suggestion">Change the data type</action>
	<action cmd="matlab:configset.internal.fixIt(''{0}'',''SupportComplex'',''on'')" type="fixit">Select <sldiag objui="configset" objparam="SupportComplex">Support complex numbers</sldiag> (might impact referenced or referencing models)</action>
      </actions>]]>
    </entry>
    <!-- xxx does not work -->
    <!-- InvalidWorkDataType TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt.m -->
    <entry key="InvalidWorkDataType"><![CDATA[The work vector of the block ''{0}'' contains a floating point type.
      <actions exclusiveFixIts="yes">
        <action type="suggestion">Change the data type</action>
        <action cmd="matlab:configset.internal.fixIt(''{0}'',''PurelyIntegerCode'',''off'')" type="fixit">Select <sldiag objui="configset" objparam="PurelyIntegerCode">Support floating-point numbers</sldiag> (might impact referenced or referencing models)</action>
      </actions>]]>
    </entry>
    <entry key="InvalidRTParamComplexity"><![CDATA[The parameter ''{0}'' of block ''{1}'' is complex valued. Consider changing it to non-complex or selecting the ''Support: complex numbers'' check box on the Configuration Parameters > Code Generation > Interface pane]]></entry>
    <!-- InvalidRTParamDataType TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt.m -->
    <entry key="InvalidRTParamDataType"><![CDATA[The parameter ''{0}'' of block ''{1}'' is a floating point type. 
      <actions exclusiveFixIts="yes">
        <action type="suggestion">Change the data type</action>
        <action cmd="matlab:configset.internal.fixIt(''{1}'',''PurelyIntegerCode'',''off'')" type="fixit">Select <sldiag objui="configset" objparam="PurelyIntegerCode">Support floating-point numbers</sldiag> (might impact referenced or referencing models)</action>
      </actions>]]>
    </entry>
    <entry key="InvalidWksParamComplexity"><![CDATA[The parameter ''{0}'' is complex valued. Consider changing it to non-complex or selecting the ''Support: complex numbers'' check box on the Configuration Parameters > Code Generation > Interface pane]]></entry>
    <entry key="InvalidWksParamDataType"><![CDATA[The parameter ''{0}'' is a floating point type. Consider changing the data type or selecting the ''support floating point  numbers'' option on the Configuration Parameters > Code Generation > Interface pane]]></entry>
    <entry key="InvalidStructuredWksParamComplexity"><![CDATA[Parameter ''{0}'' is complex valued. Consider changing it to non-complex or selecting the ''Support: complex numbers'' check box on the Configuration Parameters > Code Generation > Interface pane]]></entry>
    <entry key="InvalidStructuredWksParamDataType"><![CDATA[Parameter ''{0}'' is a floating point type. Consider changing the data type or selecting the ''support floating point  numbers'' option on the Configuration Parameters > Code Generation > Interface pane]]></entry>
    <entry key="InvalidTypeForDWorkDimArg">Invalid data type specified for ''{0}''. The derived parameter must evaluate to be of data type, ''double''.</entry>
    <entry key="InvalidVarDimsAssignForOutputPort">Invalid variable dimensions assignment for output port {0,number,integer} of ''{1}''. Variable dimensions must be an array of nonnegative integers and each integer cannot exceed the maximum dimension</entry>
    <entry key="InvalidVirtualBusSignalTypeForOutportWithScalarIC">Invalid signal data type at output port {0,number,integer} of block ''{1}''. All signals in the virtual bus driving the Outport block ''{2}'' must be of type ''boolean'', ''uint8'', ''uint16'', ''uint32'', ''int8'', ''int16'', ''int32'', ''single'', ''double'', or fixed-point data type, because the parameter ''Initial output'' of Outport block is scalar.</entry>
<entry key="InvalidVirtualBusSignalTypeForOutportWithEmptyIC">Invalid signal data type at output port {0,number,integer} of block ''{1}''. All signals in the virtual bus driving the Outport block ''{2}'' must be of type ''boolean'', ''uint8'', ''uint16'', ''uint32'', ''int8'', ''int16'', ''int32'', ''single'', ''double'', or fixed-point data type. This is because the parameter 'Initial output' of Outport block is the empty matrix([]) or the parameter 'Source of initial output value' is set to 'Input signal', in which case, Simulink is unable to determine the ground value for the data type at this output port. </entry>
    <entry key="Invalid_Listner_TID_Format">Invalid event listener TID format has been specified for ''{0}''. Event listener TIDs must be specified using a vector of the form [tid_1, tid_2, tid_3]</entry>
    <entry key="JacobianAnalyticLinNotEnabled">AnalyticLinearization option is not enabled</entry>
    <entry key="LatchDirectConnErr">Cannot guarantee that all inputs of model ''{0}'' can be latched over the duration of its execution because inport ''{1}'' is directly connected to an outport of this system. To fix the problem, consider inserting a Signal Conversion block before the outport block.</entry>
    <entry key="LatchLinearizeErr">Cannot add linearization point at inport block ''{0}'' because such points are not supported for inports which have the option to latch subsystem inputs during execution turned on</entry>
    <entry key="LatchLoopAssert">Cannot latch input {0,number,integer} of subsystem ''{1}'' over the duration of its execution. The memory buffer for this input maps to the memory buffer of one of the other inputs of the subsystem that is also being held over the course of the simulation. In normal operation, you should never see this error. The error indicates a potential issue with buffer reuse in this model. Please report this issue as a bug and explicitly add a Signal Conversion block before the outport block that is feeding this input to create a copy of this signal and workaround the problem</entry>
    <entry key="LatchLoopError">Cannot latch all inputs of subsystem ''{0}'' over the duration of its execution. Since inport ''{1}'' directly reads the signal at the output of inport ''{2}'', it is not possible to latch both of these inputs independently before the execution of the subsystem. Consider inserting a Signal Conversion block before the outport block connected to the first inport to make an explicit copy of this signal</entry>
    <entry key="LicenseError">Unable to check out the Simulink Coder license which is needed to generate code</entry>
    <entry key="LineWithoutDst">Unconnected output line found on ''{0}'' (output port: {1,number,integer})</entry>
    <entry key="LineWithoutSrc">Unconnected input line found on ''{0}'' (input port: {1,number,integer})</entry>
    <entry key="LinearAnalysisForIterator">Linear analysis attributes of the output port {0,number,integer} of ''{1}'' cannot be set to drive an Iterator block</entry>
    <entry key="LinearAnalysisNonDataPort">Linear analysis attributes of the output port {0,number,integer} of ''{1}'' cannot be set on a non data port</entry>
    <entry key="LinearAnalysisNotSupportedInMultiTasking">For linearization, the model must either use a fixed-step solver with the 'Configuration Parameters' > 'Solver' > 'Treat each discrete rate as a separate task' option cleared or use a variable-step solver.</entry>
    <entry key="LinearAnalysisTooManyElements">The model contains too many elements for linearization.  Please reduce the model size.</entry>
    <entry key="LinearizationWithSFuncDSMWrite">Linearization is not supported for S-Function blocks that write to a Data Store Memory. The connection between the S-Function block ''{0}'' and the Data Store Memory ''{1}'' will be ignored during linear analysis.</entry> 
    <entry key="LinearizationWithSFuncDSMRead">Linearization is not supported for S-Function blocks that read from a Data Store Memory. The connection between the S-Function block ''{0}'' and the Data Store Memory ''{1}'' will be ignored during linear analysis.</entry> 
    <entry key="InvalidPotentialLinearizationIO">The element {0,number,integer} in SCDPotentialLinearizationIOs structure is not referring to an existing block in the model.</entry>
    <entry key="InvalidLinearizationIOVariantSubsystem">Linearization IO points may not be placed at the top level of variant subsystems.</entry>
    <entry key="LinearlyImplicitActionSubsystemWithODE14x">Unable to generate code for model ''{0}'' because it uses the ODE14x solver and contains an action subsystem that specifies a linearly implicit system of ODEs. The use of ODE14x with linearly implicit equations in action subsystems is not supported</entry>
    <entry key="LinearlyImplicitEnabledSubsystemWithODE14x">Unable to generate code for model ''{0}'' because it uses the ODE14x solver and contains an enabled subsystem that specifies a linearly implicit system of ODEs. The use of ODE14x with linearly implicit equations in enabled subsystems is not supported</entry>
    <entry key="LinearlyImplicitSystemsUnsupportedTarget">Unable to generate code for model ''{0}'' because it specifies a linearly implicit system of ODEs for a target type other than GRT, ERT, or xPC. Linearly implicit systems of ODEs for GRT, ERT, and xPC targets only are supported</entry>
    <entry key="LinearlyImplicitSystemsUnsupportedTargetOption"><![CDATA[Cannot generate reusable code for model ''{0}'' because it specifies a linearly implicit system of ordinary differential equations. Set model configuration parameter <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function''.]]></entry>
    <entry key="Listener_InvalidTid">The event listener TIDs of ''{0}'' must be in the range from 0 to {1,number,integer}</entry>
    <entry key="MFileTsMustBeEmpty">Sample times (TS) matrix returned by MATLAB S-function ''{0}'' in ''{1}'' must be empty.</entry>
    <entry key="MSFcnAddDimsDependRuleCompStageMismatch">Simulink detected an incorrect usage of ''AddOutputDimsDependencyRule'' for the Level-2 MATLAB S-function in ''{0}''. This SimStruct function can only be used in the ''PostPropagationSetup'' method.</entry>
    <entry key="MSFcnInvalidPassThroughInputIdx">The input port index {0,number,integer} specified in ''InputPortSameDimsAsOutputPort'' for the Level-2 MATLAB S-Function block ''{1}'' does not exist.</entry>
    <entry key="MSFcnInvalidPassThroughOutputIdx">The output port index {0,number,integer} specified in ''InputPortSameDimsAsOutputPort'' for the Level-2 MATLAB S-Function block ''{1}'' does not exist.</entry>
    <entry key="MSfcnMissingDefinedDimsDependRuleVarDims">The Level-2 MATLAB S-function ''{0}'' in ''{1}'' has declared ''SignalSizesComputeType'' to be ''FromInputSize''. Consequently, you must use the ''AddOutputDimsDependencyRules'' method to register the dimension dependency rules of output port {2,number,integer}.</entry>
    <entry key="MTCondExecDiagNotMatchModelAdvisor">The diagnostic of ''Multitask conditionally executed subsystem'' in the Sample Time Diagnostics is ''{0}''. The subsystem ''{1}'' executes in multiple tasks. This can cause corrupted data or non-deterministic behavior in a real-time system. Model Advisor recommends ''error'' for this diagnostic when generating code for a real-time system. Consider changing the diagnostic to ''error''.</entry>
    <!-- MTCondExecSysHasAsync TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt.m -->
    <entry key="MTCondExecSysHasAsync"><![CDATA[Conditionally executed subsystem ''{0}'' contains an asynchronous subsystem. This can cause corrupted data in a real-time system.
      <actions exclusiveFixIts="yes">
        <action type="suggestion">Move the asynchronous subsystem outside the conditionally executed subsystem</action>
        <action cmd="matlab:configset.internal.fixIt(''{0}'',''MultiTaskCondExecSysMsg'',''none'')" type="fixit">Suppress this message by setting <sldiag objui="configset" objparam="MultiTaskCondExecSysMsg">Multitask conditionally executed subsystem</sldiag> to ''none''</action>
        </actions>]]>
    </entry>
    <entry key="MTDSMDiagNotMatchModelAdvisor">The ''Multitask data store'' option in the Diagnostics page of the Configuration Parameters Dialog is ''{0}''. Data store read block(s) and data store write block(s) exist that execute in different tasks. This can cause corrupted data in a real-time system. Model Advisor recommends ''error'' for this diagnostic when generating code for a real-time system. Consider changing the diagnostic to ''error''.</entry>
    <entry key="MaximumFwdTimesExceed">Recursion limit exceeded while trying to load library ''{0}''. The potential cause of this problem is that the library link forwarding mechanism is running into an infinite loop</entry>
    <entry key="MatrixTypeForDWorkLength">Argument ''{0}'' specified for dimension value must be scalar.</entry>
    <entry key="MdlFileDeleted">block diagram loaded but file deleted</entry>
    <entry key="MdlFileLoaded">block diagram loaded</entry>
    <entry key="MdlFileNotOnPath">The file containing block diagram ''{0}'' is not on the MATLAB path: {1}</entry>
    <entry key="MdlFileShadowedByFile"><![CDATA[The file containing block diagram ''{0}'' is shadowed by a file of the same name higher on the MATLAB path. This can cause unexpected behavior. For more information see <a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''shadowing'')">"Avoiding Problems with Shadowed Files"</a> in the Simulink documentation.\n\nThe file containing the block diagram is: {1}.\nThe file higher on the MATLAB path is: {2}]]></entry>
    <entry key="LoadShadowedFile"><![CDATA[File ''{0}'' cannot be loaded because it is shadowed by another file of the same name higher on the MATLAB path.  For more information see <a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''shadowing'')">"Avoiding Problems with Shadowed Files"</a> in the Simulink documentation.\n\nThe file that is higher on the MATLAB path is: {1}.]]></entry>
    <entry key="SlxFileShadowsMoreRecentMdlFile"><![CDATA[The file ''{0}.slx'' is shadowing a more recently saved MDL file, ''{1}.mdl'', in the same folder.  For more information see <a href="matlab:helpview([docroot ''/toolbox/simulink/helptargets.map''], ''shadowing'')">"Avoiding Problems with Shadowed Files"</a> in the Simulink documentation.]]></entry>
    <entry key="MdlFileShadowedByVariable">Block diagram ''{0}'' is shadowed by a variable of the same name.</entry>
    <entry key="MdlFileShadowing">The model name ''{0}'' is shadowing another name in the MATLAB workspace or path. Type "which -all {1}" at the command line to find the other uses of this name. You should change the name of the model to avoid problems.</entry>
    <!-- MdlRefExecTimeWithBlockRequestStateResetSizeVary TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineModelRefs.m -->
    <!-- MdlRefExecTimeWithBlockRequestStateResetSizeVary TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsHotLinks -->
    <entry key="MdlRefExecTimeWithBlockRequestStateResetSizeVary"><![CDATA[Block ''{0}'' contains states that require resetting whenever the input signal sizes vary. This block property is inconsistent with the ''Propagate sizes of variable-size signals'' setting ''During execution''.
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:configset.internal.fixIt(''{0}'',''PropagateVarSize'',''Only when enabling'')" type="fixit">Change <sldiag objui="configset" objparam="PropagateVarSize">Propagate sizes of variable-size signals</sldiag> to ''Only when enabling''.</action>
        <action type="suggestion">Place ''{1}'' inside an Enabled/Function-Call/Action/Resettable Subsystem and setting the parameter ''Propagate sizes of variable-size signals'' for the corresponding control port block to: ''Only when enabling'' for an Enabled or a Function-Call Subsystem; ''Only when execution is resumed'' for an Action Subsystem; or ''Only when resetting'' for a Resettable Subsystem.</action>
      </actions>]]>
    </entry>
    <entry key="MdlRefInitTimeWithblockSizeDependOnValue"><![CDATA[The output signal sizes of block ''{0}'' depend on the input signal values. However, <sldiag objui="configset" objparam="PropagateVarSize">Propagate sizes of variable-size signals</sldiag> is set to ''Only when enabling''. Consider changing the parameter to ''During execution''.]]></entry>
    <entry key="MemoryAllocationError">Memory allocation error</entry>
    <entry key="MemorySectionsNotFound">Error loading memory section definitions.</entry>
    <entry key="MetadataMustBeStruct">The "Metadata" parameter of a block diagram must be a MATLAB structure</entry>
    <entry key="MissedNoncontSignal">Output port {0,number,integer} of subsystem block ''{1}'' may be outputting a signal that has discontinuities and is feeding a block with continuous states.  This may cause the solver to produce inaccurate answers near the discontinuities</entry>
    <entry key="MixedContextOnGenerator">{0}'' destination ports reside in different execution contexts (e.g. one port in the root system and another port in a conditionally executed subsystem)</entry>
    <entry key="MixedContextOnViewer">{0}'' is viewing signals that originate from different execution contexts (e.g. one signal in the root system and another signal in a conditionally executed subsystem)</entry>
    <entry key="ModelAlreadyCompiled">''{0}'' is already compiled</entry>
    <!-- ModelBlockCannotBeReusableForMultiInstanceCode TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineModelRefs.m -->
    <!-- ModelBlockCannotBeReusableForMultiInstanceCode TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt.m -->
    <entry key="ModelBlockCannotBeReusableForMultiInstanceCode"><![CDATA[The referenced model ''{0}'' cannot generate reusable code. ''Total number of instances allowed per top model'' is set to ''One'' for the referenced model.
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:configset.internal.fixIt(''{0}'',''ModelReferenceNumInstancesAllowed'',''Multi'')" type="fixit">Set <sldiag objui="configset" objparam="ModelReferenceNumInstancesAllowed" objname="{0}">Total number of instances allowed per top model</sldiag> to ''Multiple''.</action>
        <action cmd="matlab:configset.internal.fixIt(''{1}'',''CodeInterfacePackaging'',''Nonreusable function'')" type="fixit">Set <sldiag objui="configset" objparam="CodeInterfacePackaging" objname="{1}">Code interface packaging</sldiag> to ''Nonreusable function'' for the top model ''{1}'' (might impact referenced or referencing models)</action>
      </actions>]]>
    </entry>
    <entry key="GenerateAllocFcnDependsOnMultiInstanceCode">Cannot set model option GenerateAllocFcn when model option ''CodeInterfacePackaging'' is set to ''Nonreusable function''</entry>
    <entry key="ModelCompInProgress">Compilation of ''{0}'' in progress</entry>

    <entry key="ModelDoesNotExist">
      ''{0}'' is not registered with MATLAB as identifying a Simulink model,
      hence it cannot be compiled. There may be a MATLAB class with the same
      name. If so, rename either the model or the class
    </entry>
    <entry key="ModelNameTooLong">''{0}'' is not a valid model name because it is too long</entry>    
    <entry key="ModelTermInProgress">Termination of ''{0}'' is in progress</entry>
    <entry key="ModuleLibraryLoadError">Unable to load ''{0}'' due to the following error\n''{1}''\n</entry>  
    <entry key="MultSampleTime">Only one sample time can be specified for ''{0}''</entry>
    <!-- MultSysGenSameFcn TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsOpen.m -->
    <entry key="MultSysGenSameFcn"><![CDATA[The subsystems ''{0}'' and ''{1}'' have the same function name ''{2}''.  This is not legal unless the systems are identical copies of each other.
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:Simulink.internal.OpenBlockParamsDialog(''{0}'',''RTWFcnName'')" type="suggestion">Modify the function name for ''{0}''</action>
        <action cmd="matlab:Simulink.internal.OpenBlockParamsDialog(''{1}'',''RTWFcnName'')" type="suggestion">Modify the function name for ''{1}''</action>
        <action cmd="matlab:configset.internal.open(''{0}'',''MaxIdLength'')" type="suggestion">Increase ''Maximum identifier length'' (might impact referenced or referencing models)</action>
        </actions>]]>
    </entry>
    <entry key="MultiFcnCallInlined">Changing the Code generation function packaging setting for Function-call subsystem ''{0}'' from ''Inlined'' to ''Function'' because it has multiple callers</entry>
    <entry key="NonSLDomainFcnForceInline">Converting ''Function packaging'' setting of ''{0}'' from ''{1}'' to ''Inline''. The block has  event-based signal inputs or the block is contained in an atomic or Function-call subsystem that has event-based signal inputs</entry>
    <entry key="MultiInstanceForcedNonInline"><![CDATA[The model cannot generate reusable code with inputs and outputs passed as individual arguments, because ''{0}'' is forced to not inline.
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:configset.internal.fixIt(''{0}'',''RootIOFormat'',''Structure reference'')" type="fixit">Set <sldiag objui="configset" objparam="RootIOFormat">Pass root-level I/O as</sldiag> to ''Structure reference''</action>
        <action cmd="matlab:configset.internal.fixIt(''{0}'',''CodeInterfacePackaging'',''Nonreusable function'')" type="fixit">Set <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function'' (might impact referenced or referencing models)</action>
      </actions>]]>
    </entry>
    <entry key="MultiInstanceForcedNonInlineCPP"><![CDATA[The model cannot generate a C++ class interface because ''{0}'' is forced to not inline.
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:configset.internal.open(''{0}'',''CodeInterfacePackaging'')" type="suggestion">Set ''Code interface packaging'' to a value other than ''C++ class'' (might impact referenced or referencing models)</action>
      </actions>]]>
    </entry>
    <!-- MultiInstanceNonReusableAsyncSFcn TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt.m -->
    <entry key="MultiInstanceNonReusableAsyncSFcn"><![CDATA[The model cannot generate reusable code because ''{0}'' is an asynchronous S-Function that does not support code reuse.
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:configset.internal.fixIt(''{0}'',''CodeInterfacePackaging'',''Nonreusable function'')" type="fixit">Set <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function'' (might impact referenced or referencing models)</action>
      </actions>]]>
    </entry>
    <entry key="MultiInstanceNonReusableAsyncSFcn2"><![CDATA[The model cannot generate reusable code because ''{0}'' is a non-inlined asynchronous S-Function.
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:configset.internal.fixIt(''{0}'',''CodeInterfacePackaging'',''Nonreusable function'')" type="fixit">Set <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function'' (might impact referenced or referencing models)</action>
      </actions>]]>
    </entry>
    <!-- MultiInstanceNonReusableSFcn TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt.m -->
    <entry key="MultiInstanceNonReusableSFcn"><![CDATA[The model cannot generate reusable code with inputs and outputs passed as individual arguments, because ''{0}'' does not support code reuse.
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:configset.internal.fixIt(''{0}'',''RootIOFormat'',''Structure reference'')" type="fixit">Set <sldiag objui="configset" objparam="RootIOFormat">Pass root-level I/O as</sldiag> to ''Structure reference''</action>
        <action cmd="matlab:configset.internal.fixIt(''{0}'',''CodeInterfacePackaging'',''Nonreusable function'')" type="fixit">Set <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function'' (might impact referenced or referencing models)</action>
      </actions>]]>
    </entry>
    <entry key="MultiInstanceNonReusableSFcn2"><![CDATA[The model cannot generate reusable code with inputs and outputs passed as individual arguments, because ''{0}'' is non-inlined.
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:configset.internal.fixIt(''{0}'',''RootIOFormat'',''Structure reference'')" type="fixit">Set <sldiag objui="configset" objparam="RootIOFormat">Pass root-level I/O as</sldiag> to ''Structure reference''</action>
        <action cmd="matlab:configset.internal.fixIt(''{0}'',''CodeInterfacePackaging'',''Nonreusable function'')" type="fixit">Set <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function'' (might impact referenced or referencing models)</action>
      </actions>]]>
    </entry>
    <entry key="MultiInstanceNonReusableSFcn2GRT">The model cannot generate reusable code because ''{0}'' is non-inlined. Consider using the ''grt.tlc'' target instead of the ''grt_malloc.tlc'' target.</entry>
    <entry key="MultiInstanceNonReusableSFcnCPP"><![CDATA[The model cannot generate ''I/O arguments step method'' style C++ class interface because ''{0}'' does not support code reuse with I/O arguments.  Consider using the ''Void-void step method'' style C++ class interface using the ''Configure C++ Class Interface'' button from the Configuration Parameters > Code Generation > Interface pane.]]></entry>
    <entry key="MultiInstanceNonReusableSFcnGRT">The model cannot generate reusable code because ''{0}'' does not support code reuse. Consider using the ''grt.tlc'' target instead of the ''grt_malloc.tlc'' target.</entry>
    <entry key="MultiInstanceSfcnNotInline"><![CDATA[The model cannot generate reusable code with inputs and outputs passed as individual arguments, because ''{0}'' is not inlined.
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:configset.internal.fixIt(''{0}'',''RootIOFormat'',''Structure reference'')" type="fixit">Set <sldiag objui="configset" objparam="RootIOFormat">Pass root-level I/O as</sldiag> to ''Structure reference''</action>
        <action cmd="matlab:configset.internal.fixIt(''{0}'',''CodeInterfacePackaging'',''Nonreusable function'')" type="fixit">Set <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function'' (might impact referenced or referencing models)</action>
      </actions>]]>
    </entry>
    <entry key="MultiInstanceSfcnNotInlineCPP"><![CDATA[The model cannot generate a C++ class interface because ''{0}'' is not inlined.
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:configset.internal.open(''{0}'',''CodeInterfacePackaging'')" type="suggestion">Set ''Code interface packaging'' to a value other than ''C++ class'' (might impact referenced or referencing models)</action>
      </actions>]]>
    </entry>
    <!-- MultiInstanceWideFcnCallTrig TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt.m -->
    <entry key="MultiInstanceWideFcnCallTrig"><![CDATA[The model cannot generate reusable code with inputs and outputs passed as individual arguments, because ''{0}'' is triggered by a wide function-call trigger.
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:configset.internal.fixIt(''{0}'',''RootIOFormat'',''Structure reference'')" type="fixit">Set <sldiag objui="configset" objparam="RootIOFormat">Pass root-level I/O as</sldiag> to ''Structure reference''</action>
        <action cmd="matlab:configset.internal.fixIt(''{0}'',''CodeInterfacePackaging'',''Nonreusable function'')" type="fixit">Set <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function'' (might impact referenced or referencing models)</action>
      </actions>]]>
    </entry>
    <entry key="MultiInstanceWideFcnCallTrigCPP"><![CDATA[The model cannot generate a C++ class interface because ''{0}'' is triggered by a wide function-call trigger.
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:configset.internal.open(''{0}'',''CodeInterfacePackaging'')" type="suggestion">Set ''Code interface packaging'' to a value other than ''C++ class'' (might impact referenced or referencing models)</action>
      </actions>]]>
    </entry>
    <entry key="AutosarMultiTaskDSM">The blocks ''{0}'' and ''{1}'' are accessing the
    Data Store Memory block ''{2}''.  The two blocks execute in different runnables, which can lead to a 
    lack of data integrity in the real-time environment.  Consider adjusting the sample times of the blocks that 
    access that data store.  Alternatively, clear the 'Configuration Parameters' > 'Solver' > 'Treat each discrete rate as a separate task' option.</entry>
    <entry key="AutosarCSCMdlRefParam">Submodel ''{0}'' cannot reference ''AUTOSAR.Parameter'' object ''{1}'' because 
    the object's custom storage class ''{2}'' is supported only for the top model in a model hierarchy. Consider passing 
    the parameter to the submodel as a model argument.</entry>
    <entry key="AutosarCSCMdlRefSig">Submodel ''{0}'' cannot reference ''AUTOSAR.Signal'' object ''{1}'' because 
    the object's custom storage class ''{2}'' is supported only for the top model in a model hierarchy. </entry>
    <entry key="AutosarPIMCSCTopModel">Model ''{0}'' cannot reference ''AUTOSAR.Signal'' object ''{1}'' because
    that model is not using an AUTOSAR target. </entry>
    <entry key="MultiplePriorityViolations">Detected {0,number,integer} priority violations in system ''{1}''. Note that these priority violations are not independent, i.e., changing the priorities on a subset of the blocks reported in the diagnostics above may address all the priority violations</entry>
    <!-- MultirateEnable TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt.m -->
    <entry key="MultirateEnable"><![CDATA[The enabled subsystem ''{0}'' executes in multiple tasks. This can cause corrupted data or non-deterministic behavior in a real-time system.
      <actions exclusiveFixIts="yes">
        <action type="suggestion">Use a single-rate enabled subsystem</action>
        <action cmd="matlab:configset.internal.fixIt(''{0}'',''EnableMultiTasking'',''off'')" type="fixit">Clear <sldiag objui="configset" objparam="EnableMultiTasking">Treat each discrete rate as a separate task</sldiag></action>
        <action cmd="matlab:configset.internal.fixIt(''{0}'',''MultiTaskCondExecSysMsg'',''none'')" type="fixit">Suppress this message by setting <sldiag objui="configset" objparam="MultiTaskCondExecSysMsg">Multitask conditionally executed subsystem</sldiag> to ''none''</action>
      </actions>]]>
    </entry>
    <entry key="MultirateRootEnable">This model has a root level Enable port ''{0}'' and executes in multiple tasks. This can cause corrupted data or non-deterministic behavior in a real-time system. Consider modifying your model to be single-rate or clear the 'Treat each discrete rate as a separate task' option in the Solver pane of the Configuration Parameters dialog box.</entry>
    <entry key="NamedItemRename">Attempting to rename an already named item.</entry>
    <entry key="NeverGotDisconnectResponse">Never received disconnect response from target.  Disconnecting...</entry>
    <entry key="NeverGotFinalLogBufferTerminator">Did not receive final data logging buffer and logging terminator from target.  Disconnecting...</entry>
    <entry key="NoActionSSInLoops">Input data dependency violation due to action subsystems. See Subsystem Examples in the Simulink library for valid and invalid examples of action subsystems</entry>
    <entry key="NoAutoUpdateStatusClock">Target time on model status bar will not update.  To enable target time updating, use set_param(''{0}'',''ExtModeAutoUpdateStatusClock'',''on'')</entry>
    <entry key="NoBlocksInModel">Block diagram ''{0}'' contains no blocks or all blocks are virtual</entry>
    <entry key="NoChangeWhileLogging">Cannot change data logging options while data logging is in progress</entry>
    <entry key="NoChangeWhileRunningInExtMode">Cannot change parameter ''{0} ({1})'' of ''{2}'' while simulation is running in External Mode</entry>
    <entry key="NoChecksumDetails">There are no ''{0}'' details available for ''{1}''</entry>
    <entry key="NoChecksumDetailsCallGetCS">There are no ''{0}'' details available for ''{1}''. Try terminating your model, and calling Simulink.{2}.getChecksum(''{3}'') with the model in an uncompiled state</entry>
    <entry key="NoDataTypeOverrideForPurelyIntegerCode"><![CDATA[This model is not configured for purely integer code because data type override is set to double or single. Consider selecting the option ''floating-point numbers'' on the Configuration Parameters > Code Generation > Interface pane. Alternatively, select "Fixed-Point Tool" from the model''s Analysis menu. Select the root model in Model Hierarchy. Set "Data type override" to be "Use local settings" or "off"]]></entry>
    <entry key="NoDataUploadBlocks">No data has been selected for uploading.</entry>
    <entry key="NoDirectConnWhenDrivingIter">Invalid connection from Inport block ''{0}'' to the iterator block ''{1}''.  An Inport connected to an iterator cannot be directly connected to an Outport.  Consider inserting a Signal Conversion block on the signal line directly connecting the Inport block to the Outport block</entry>
    <entry key="NoExtCmdsIfNotRunning">External mode commands may only be issued when in external mode and connected to the target</entry>
    <entry key="NoFCSSCycles">Simulink does not support the execution of function-call cycles. A function-call cycle occurs when a function-call initiator (e.g., a Stateflow Chart or S-function) within a function-call block directly or indirectly drives the function-call input port of the same function-call block</entry>
    <entry key="NoFcnCallOrActionSSInLoops">Input data dependency violation due to function-call or action subsystems. See Subsystem Examples in the Simulink library for valid and invalid examples of function-call and action subsystems</entry>
    <entry key="NoHiliteForInvalidConn">Due to some optimizations, Simulink may not be able to highlight the section of the loop containing ''{0}''</entry>
    <entry key="NoLibrarySim">Simulation of model ''{0}'' is not allowed because it is a block diagram library</entry>
    <entry key="NoDefaultBDSim">Simulation of default block diagram is not allowed</entry>
    <entry key="NoMTaskMultiRateLoops">Multi-rate algebraic loop involving ''{0}'' is unavailable when the 'Configuration Parameters' > 'Solver' > 'Treat each discrete rate as a separate task' option is selected. If this option must be selected, consider inserting memory blocks and rate transition blocks to break the algebraic loop.</entry>
    <entry key="NoMemSecPackageForSystem">Invalid memory section ''{0}'' specified in the Subsystem Parameters dialog of block ''{1}''. No memory section package selected in the Configuration Parameters dialog</entry>
    <entry key="NoMemSecPackageForSystemDefaults">Invalid memory section ''{0}'' specified in the Configuration Parameters dialog of block diagram ''{1}''. No memory section package selected.</entry>
    <entry key="NoModelForRTWNameOpen">To use open_system with a Simulink Coder block or system name, you must have the model open.</entry>
    <!-- 
         NoNonVirtualBlocksInModel should not be a warning. We should switch it to an info message
         because there is is no fix. We are simply satating that there is nothing to simulate. 
         Warnings are errors that we can recover from. In this case, there is no error.
    -->
    <entry key="NoNonVirtualBlocksInModel"><![CDATA[All blocks in block diagram ''{0}'' are either virtual or have been removed by block reduction optimization or they are inactive variants, therefore there is nothing to simulate. Note, for code generation, block reduction optimization removes all diagram branches terminating in sink blocks that do not participate in code generation. For example, To Workspace blocks and potentially their sources are removed when the <sldiag objui="configset" objparam="MatFileLogging">MAT-file logging</sldiag> is off]]></entry>
    <entry key="NoNonvirtSubsysSelfLoops">Direct feedback connections involving nonvirtual subsystem ''{0}'' are not allowed</entry>
    <entry key="NoOutputTimesWithFixedStep">"''OutputTimes'' are not supported by fixed step solvers (''{0}'').  The first and last elements of TIMESPAN are being used as the start and stop times.  All other elements are being ignored.  Type ''help sim'' for more information</entry>
    <entry key="NoRTWCustomCode">The block ''{0}'' is a Simulink Coder Custom Code block; this type of block is not allowed for the {1}</entry>
    <entry key="NoRateTransBlkInsertedForRateTransBlkInput">Simulink detected an unspecified rate transition at input port {0,number,integer} of block ''{1}''. Simulink did not automatically insert a Rate Transition block because a rate transition block exists upstream of the insertion location. Serial rate transition blocks represent an inefficient model pattern. You may avoid this error message by setting the 'Output port sample time' to '-1' at upstream Rate Transition block or manually inserting a Rate Transition block. </entry>
    <entry key="NoRateTransBlkInsertedForRateTransBlkOutput">Simulink detected an unspecified rate transition at output port {0,number,integer} of block ''{1}''. Simulink did not automatically insert a Rate Transition block because a rate transition block exists either downstream of the insertion location. Serial rate transition blocks represent an inefficient model pattern. Before manually inserting a Rate Transition block, ensure that the insertion is unavoidable.</entry>
    <entry key="NoRefineWithFixedStep">"''Refine'' is not supported by fixed step solvers (''{0}'').  The specified refine factor of ''{1,number,integer}'' is being ignored.  Type ''help sim'' for more information</entry>
    <entry key="NoRefineWithPureDiscrete"><![CDATA[Ignoring the value specified for the <sldiag objui="configset" objparam="Refine">Refine factor</sldiag> configuration parameter. This is because model ''{0}'' is a purely discrete model. See the documentation for the ''Refine factor'' option for more information.]]></entry>
    <entry key="NoSListForSystem">Can not determine the sorted list for system ''{0}''</entry>
    <entry key="NoTrigSSInLoops">Ambiguous sorted order detected due to use of triggered subsystem(s) and/or Model blocks in a loop. See Subsystem Examples in the Simulink library for valid and invalid examples of triggered subsystems</entry>
    <entry key="NoTsInhDueToPreSetDWorkSigObj">This model will not inherit a sample time because a sample time was explicitly set for the signal object ''{0}'' associated with DWork {1,number,integer} in block ''{2}''. \n \n If this model does not need to inherit a sample time, change the "Sample time constraint" to something other than "Ensure sample time independent" on the Solver tab of the Configuration Parameters dialog.</entry>
    <entry key="NoTsInhDueToPreSetOutputSigObj">This model will not inherit a sample time because a sample time was explicitly set for the signal object ''{0}'' associated with Output port {1,number,integer} in block ''{2}''.\n \n If this model does not need to inherit a sample time, change the "Sample time constraint" to something other than "Ensure sample time independent" on the Solver tab of the Configuration Parameters dialog.</entry>

    <entry key="NonGraphicalDependencyCrossesFunctionSubsystem">Unable to ensure block ''{0}'' runs before block ''{1}'' because one is inside a function call subsystem.</entry>
    <entry key="NonGraphicalDependencyDifferentModels">Unable to ensure block ''{0}'' runs before block ''{1}'' because they are in different models.</entry>
    <entry key="NonGraphicalDependencyLoop">Unable to ensure block ''{0}'' runs before block ''{1}'' because doing so causes a dependency loop.</entry>
    <entry key="NonGraphicalDependencyMergeBlock">Unable to ensure block ''{0}'' runs before block ''{1}'' because one is a merge block.</entry>
    <entry key="NonInhTsGlbDSMInhTsMod">Within the model ''{0}'', one or more blocks access the global data store ''{1}'', whose corresponding Simulink.Signal object has sample time {2}. However, that model specifies that it is sample time independent. The sample time of the object must be inherited (-1).</entry>
    <entry key="NonInlinedSFcnsNotSupported"><![CDATA[Block ''{0}'' is a non-inlined S-function, which is not supported with the current configuration. Consider selecting <sldiag objui="configset" objparam="SupportNonInlinedSFcns">Support non-inlined S-functions</sldiag>.]]></entry>
    <entry key="NonSourceBeingUsedAsSource"><![CDATA[Signal & Scope Manager cannot be used with non-sources, ''{0}'' is configured to have inputs and therefore is not a source]]></entry>
    <entry key="NoninlinedSfcnNotReused">The S-function ''{0}'' has the option SS_OPTION_WORKS_WITH_CODE_REUSE set but it does not have a ''{1}.tlc'' file.  The system that it lives in will not be reused</entry>
    <entry key="NotEnoughMemoryOnTarget">Not enough memory on the target to process the packet: {0}</entry>
    <entry key="NotImplemented">Internal error</entry>
    <entry key="NotMatchWithModelAdvisor">Setting not recommended by Model Advisor.</entry>
    <entry key="NotSupportSubsysFileInCPF"><![CDATA[The "Compact" option for the "File packaging format" parameter on the Code Generation > Code Placement pane of the Configuration Parameter dialog box does not generate separate source files for a subsystem. On the Subsystem Parameter dialog box, specify the "Code generation file name options" parameter as "Auto" for the following subsystem: ''{0}''. An alternative solution is to specify the "File packaging format" parameter as "Modular" on the Code Generation > Code Placement pane of the Configuration Parameter dialog box.]]></entry>
    <!-- NotSupportedVarSizePropTypeAmbiguous TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineModelRefs.m -->
    <entry key="NotSupportedVarSizePropTypeAmbiguous"><![CDATA[
    ''Propagate sizes of variable-size signals''
    of the model ''{0}'' is set to ''Infer from blocks
    in model''. The model contains a conditionally executed subsystem or a
    resettable subsystem ''{1}'' which has variable-size signals in the Model
    Reference target. However, Simulink did not detect any block in the model
    for which either of the following properties hold: 1) the block output
    signal sizes depend on the input signal values; 2) the block states require
    resetting if the input signal sizes vary and if the block is not inside an
    Enabled/Function-Call/Action/Resettable Subsystem. Consequently, Simulink
    cannot determine if the model should support the propagation of
    variable-size signals ''During execution'' or ''Only when enabling''.
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:configset.internal.open(''{0}'',''PropagateVarSize'')" type="suggestion">Change ''Propagate sizes of variable-size signals'' to ''During execution'' or ''Only when enabling''</action>
      </actions>]]>
    </entry>
    <!-- NotSupportedVarSizePropTypeAmbiguousRootControlPort TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineModelRefs.m -->
    <entry
    key="NotSupportedVarSizePropTypeAmbiguousRootControlPort"><![CDATA[
    ''Propagate sizes of variable-size signals''
    of the model ''{0}'' is set to ''Infer from
    blocks in model''. The model contains a control port at the root ''{1}'' and
    has variable-size signals in the Model Reference target. However, Simulink
    did not detect any block in the model for which either of the following
    properties hold: 1) the block output signal sizes depend on the input signal
    values; 2) the block states require resetting if the input signal sizes vary
    and if the block is not inside an Enabled/Function-Call/Action/Resettable
    Subsystem. Consequently, Simulink cannot determine if the model should
    support the propagation of variable-size signals ''During execution'' or
    ''Only when enabling''.
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:configset.internal.open(''{0}'',''PropagateVarSize'')" type="suggestion">Change ''Propagate sizes of variable-size signals'' to ''During execution'' or ''Only when enabling''</action>
      </actions>]]>
    </entry>

    <entry key="Not_FxpPoint">The ''{0}'' method of ''{1}'' can only be called for integer and fixed-point data types</entry>
    <entry key="NumDimsMismatchFromETVSSubsysIC">Number of dimensions mismatch detected: The initial output of ''{0}'' specifies the number of output dimensions is {1,number,integer}. However, the input signal is {2,number,integer}-D.</entry>
    <entry key="NumDimsNotMatchMatlab">The number of dimensions of the given MATLAB array does not match that of the Simulink internal data</entry>
    <entry key="Num_Var_Dims_Mismatch">Invalid variable dimensions assignment for output port {0,number,integer} of ''{1}''. The number of variable dimensions is {2,number,integer}. However, the length of the MATLAB array is {3,number,integer}</entry>

    <entry key="OVERRIDE_IR_SUPPORT_FLAG">Dummy msg</entry>
    <entry key="ObsoleteExprDepthLimit">Model parameter ''RTWExpressionDepthLimit'' is obsolete.  To enable/disable expression folding feature, use the ''ExpressionFolding'' parameter on the ''All Parameters'' tab of the Configuration Parameters dialog box of the model.</entry>
    <entry key="ObsoleteSimPrmPage">Model parameter ''SimParamPage'' is obsolete.  To interact with configuration parameters dialog, use ''slCfgPrmDlg'' command</entry>
    <entry key="OldStyleStateLabel">In the initial states structure, the state label for ''{0}'' should be updated from {1} to {2}</entry>
    <entry key="OnlyTermWhenCompForChecksums">The model ''{0}'' has been compiled for checksums only. Termination is the only permissible model command for a model in this state</entry>
    <entry key="OuterOutportPassThruFcnCallInArgMustInheritIC">The parameter ''Source of initial output value:'' of Outport block ''{0}'' must be set to ''Input signal'' to avoid a function-call data dependency violation on the signal originating from output port {1,number,integer} of block ''{2}''</entry>

    <entry key="OutportBufferRequirementConflict">Outport block ''{0}'' has
    function-call trigger or function-call data dependency signals passing
    through it, along with regular signals. Some of the regular data signals
    require an explicit signal buffer to ensure correct initialization of the
    corresponding subsystem''s output signal. However, buffering function-call
    related signals will lead to a function-call data dependency violation.
    Consider modifying the model to pass function-call related signals through a
    separate Outport. See the demo model ''sl_subsys_semantics'' for examples of
    function-call data dependency violations. For regular data signals, an
    additional signal copy may be required for the following reasons:

    \n\t(1) Outport is driven by a block with non-overwritable output such as a
    Ground, Constant, or Stateflow block; 

    \n\t(2) Outport shares the same signal source with another Outport in the
    same subsystem or one nested within the current subsystem but having a
    different initial output value;

    \n\t(3) Outport is connected to an input of a Merge block; or

    \n\t(4) A Simulink.Signal object with explicit initial value is being
    specified on one of Outport''s input signals.</entry>

    <entry key="OutportBufferRequirementConflictGeneric">Outport block ''{0}''
    has function-call trigger or function-call data dependency signals passing
    through it, along with regular signals. Some of the regular data signals
    require an explicit signal buffer to ensure correct initialization of the
    corresponding subsystem''s output signal. However, buffering function-call
    related signals will lead to a function-call data dependency violation.
    Consider modifying the model to pass function-call related signals through a
    separate Outport. See the demo model ''sl_subsys_semantics'' for examples of
    function-call data dependency violations. For regular data signals, an
    additional signal copy may be required for the following reasons:

    \n\t(1) Outport is driven by a block with non-overwritable output such as a
    Ground, Constant, or Stateflow block;

    \n\t(2) Outport shares the same signal source with another Outport in the
    same subsystem or one nested within the current subsystem but having a
    different initial output value; or

    \n\t(3) Outport is connected to an input of a Merge block.</entry>

    <entry key="OutportBufferRequirementConflictSigObj">Outport block ''{0}''
    requires an explicit signal buffer to ensure correct initialization of
    subsystem ''{1}'' output port {2,number,integer}. However, Simulink will not
    be able to associate a non-auto storage class from the source block ''{3}''
    output port {4,number,integer} with such a buffer. One or more of the
    following reasons necessitates the buffer:

    \n(1) Outport is driven by a block with non-overwritable output such as a
    Ground, Constant, or a Stateflow block;

    \n(2) Outport is connected to an input of a Merge block; or

    \n(3) Outport shares the same signal source with another Outport nested within the current subsystem but having an
    explicit initial output value of its own; or

    \n(4) Outport shares the same signal source with another Outport in the same subsystem having an explicit initial output value of its own.\n

    For any of these reasons, consider inserting a Signal Conversion block
    before the Outport block and moving the storage class specification to the
    output of this inserted block. Alternatively, for reason (4), consider
    modifying the model to pass the signal with non-auto storage class through a
    separate Outport.</entry>

    <entry key="OutportCannotBufferFcnCallSFcn">The function-call signal from ''{0}'' output port {1,number,integer} is being treated as a regular signal by Outport block ''{2}''. To ensure the Outport block recognizes the function-call signal, connect subsystem ''{3}'' output port {4,number,integer} to a function-call subsystem. Set ''Initial output'' of the Outport block to []. Alternatively, if the source code of the S-Function block ''{5}'' is accessible and all elements of output port {6,number,integer} are function-call, consider using ssSetOutputPortDataType(S, {7,number,integer}, SS_FCN_CALL) in mdlInitializeSizes to explicitly declare this output port as a function-call signal. Set ''Initial output'' of the Outport block to [].</entry>
    <entry key="OutportCannotBufferFcnCall">The function-call signal from ''{0}'' output port {1,number,integer} is being treated as a regular signal by Outport block ''{2}''. To ensure the Outport block recognizes the function-call signal, connect subsystem ''{3}'' output port {4,number,integer} to a function-call subsystem. Set ''Initial output'' of the Outport block to [].</entry>
    <entry key="OutportCannotHaveICForVirtualBus"><![CDATA[ The parameter ''Initial output'' of Outport block ''{0}'' must be empty ([]) when the Outport block is driven by a virtual bus signal. It is possible to specify the initial output using a scalar or a structure value for this Outport block. However, you must enable simplified initialization mode by setting <sldiag objui="configset" objparam="UnderspecifiedInitializationDetection">Underspecified initialization detection</sldiag> to ''simplified''. Note that some modifications may be necessary to ensure the model conforms to certain modeling standards required by the new initialization mode. For more information, see documentation for the Model Advisor check ''Check consistency of initialization parameters for Outport and Merge blocks''.]]></entry>
    <entry key="OutportCannotInheritICWhenNotUsingConsistentOutportInit">Invalid setting for parameter ''Source of initial output value:'' of Outport block ''{0}''. This parameter must be set to Dialog when the parameter ''UnderspecifiedInitializationDetection'' of the model ''{1}'' is set to ''Classic''</entry>
    <entry key="OutportCannotLogNonBuiltInDataTypes">Logging non-built-in data types is not supported in Array or Structure logging format.  Cannot log outport ''{0}'' with data type {1}. To log Root Outports of type built-in, enum, fixed point and bus in Normal, Accelerator, Software-in-the-Loop (SIL) and Processor-in-the-Loop (PIL) simulation modes consider setting the ''Configuration Parameters > All Parameters > Format'' parameter to ''Dataset''. For other simulation modes, one solution is to disable the ''Configuration Parameters > Data Import/Export > Save to workspace > Output'' parameter.</entry>   
    <entry key="OutportEmptyDialogIC">Invalid setting for parameter ''Initial output:'' of Outport block ''{0}''. The initial output value must be fully specified when the parameter ''Source of initial output value:'' is set to Dialog</entry>
    <entry key="OutportInvalidEmptyDialogIC">Invalid setting for parameter ''Initial output:'' of Outport block ''{0}''. The initial output value must be fully specified when the parameter ''Source of initial output value:'' is set to Dialog. Alternatively, to use the default initialization, use an empty matrix ('[]') as the value for the ''Initial output'' parameter.</entry>
    <entry key="OutportInvICSrcInternal">Cannot inherit initial output for Outport block ''{0}'' because Simulink inserted a block of type ''{1}'' on the input signal of this Outport block. To correct this problem, set the parameter ''Source of initial output value:'' of the Outport block to Dialog and specify an initial output value</entry>
    <entry key="OutportInvICSrcPort">Cannot inherit initial output for Outport block ''{0}'' because output port {1,number,integer} of block ''{2}'' is not a valid initial output source. Outport block can only inherit initial output from Constant, Initial Condition, Merge (with initial output), or conditionally executed subsystem blocks. To correct this problem, ensure Outport is driven by a valid initial output source or set the parameter ''Source of initial output value:'' of the Outport block to Dialog</entry>
    <entry key="OutportInvICSrcRateTrans">Cannot inherit initial output for Outport block ''{0}'' because a Rate Transition block is inserted on the input signal of the Outport block. If you need a rate transition, set the parameter ''Source of initial output value:'' of the Outport block to Dialog, and specify an initial output value. Otherwise, deselect the option ''Automatically handle rate transition for data transfer'' in the Solver pane of the Configuration Parameters dialog</entry>

    <entry key="OutportInheritICStateflowMultiRateEnabledSubsys1">Outport block
    ''{0}'' is inheriting its initial output value from output port
    {1,number,integer} of Stateflow block ''{2}'' in the multi-rate enabled
    subsystem ''{3}''. Consider one of the following modifications:\n

    (1) Change ''States when enabling'' parameter of Enable Port block ''{4}'' to
    ''held''.\n

    (2) Make the enabled subsystem single-rate.\n

    (3) For the Outport block, set the parameter ''Source of initial
    output value:'' to ''Dialog'' and ensure that the parameter ''Initial
    output'' is not empty ([]).\n

    (4) Insert a Signal Conversion block before the Outport block.</entry>

    <entry key="OutportInheritICStateflowMdlRefMultiRateEnabledSubsys1">Outport
    block ''{0}'' is inheriting its initial output value from a Stateflow block
    through output port {1,number,integer} of Model block ''{2}'' in the
    multi-rate enabled subsystem ''{3}''. Consider one of the following
    modifications:\n

    (1) Change ''States when enabling'' parameter of Enable Port block ''{4}''
    to ''held''.\n

    (2) Make the enabled subsystem single-rate.\n

    (3) For the Outport block, set the parameter ''Source of initial
    output value:'' to ''Dialog'' and ensure that the parameter ''Initial
    output'' is not empty ([]).\n

    (4) Insert a Signal Conversion block before the Outport block.</entry>

    <entry key="OutportInheritICStateflowMultiRateEnabledSubsys2">Outport block
    ''{0}'' is inheriting its initial output value from output port
    {1,number,integer} of Stateflow block ''{2}'' but its parent function-call
    subsystem ''{3}'' is driven by a multi-rate enabled subsystem
    ''{4}''. Consider one of the following modifications:\n

    (1) Change ''States when enabling'' parameter of Trigger Port block ''{5}''
    to ''held''.\n

    (2) Make the enabled subsystem single-rate.\n

    (3) For the Outport block, set the parameter ''Source of initial
    output value:'' to ''Dialog'' and ensure that the parameter ''Initial
    output'' is not empty ([]).\n

    (4) Insert a Signal Conversion block before the Outport block.</entry>

    <entry key="OutportInheritICStateflowMdlRefMultiRateEnabledSubsys2">Outport
    block ''{0}'' is inheriting its initial output value from a Stateflow block
    through output port {1,number,integer} of Model block ''{2}'' but its parent
    function-call subsystem ''{3}'' is driven by a multi-rate enabled subsystem
    ''{4}''. Consider one of the following modifications:\n

    (1) Change ''States when enabling'' parameter of Trigger Port block ''{5}''
    to ''held''.\n

    (2) Make the enabled subsystem single-rate.\n

    (3) For the Outport block, set the parameter ''Source of initial
    output value:'' to ''Dialog'' and ensure that the parameter ''Initial
    output'' is not empty ([]).\n

    (4) Insert a Signal Conversion block before the Outport block.</entry>

    <entry key="OutportInvalidArrayDataLoggingUsingLHSA_COMPLEXITY">You have used left hand side arguments for saving outputs to the workspace, which uses the default ''Array'' format. The ''Array'' format can be used only if all the signals connected to the root outports are of the same complexity. \nRun this model from the ''Simulation'' menu, and specify the output format to ''Dataset'', ''Structure with time'' or ''Structure''.  The ''Format'' option can be specified either on the ''All Parameters'' tab of the ''Configuration Parameters'' dialog box or via input arguments of the sim command for command line simulation.</entry>
<entry key="OutportInvalidArrayDataLoggingUsingLHSA_DATATYPE">You have used left hand side arguments for saving outputs to the workspace, which uses the default ''Array'' format. The ''Array'' format can be used only if all the signals connected to the root outports have the same data type. \n Run this model from the ''Simulation'' menu, and specify the output format to ''Dataset'', ''Structure with time'' or ''Structure''.  The ''Format'' option can be specified either on the ''All Parameters'' tab of the ''Configuration Parameters'' dialog box or via input arguments of the sim command for command line simulation.</entry>
<entry key="OutportInvalidArrayDataLoggingUsingLHSA_DIM">You have used left hand side arguments for saving outputs to the workspace, which uses the default ''Array'' format. The ''Array'' format for saving outputs to the workspace requires all signals connected to the root outports to be scalar or 1-D arrays. \nRun model ''{0}'' from the ''Simulation'' menu, and specify the output format to ''Dataset'', ''Structure with time'' or ''Structure''. The ''Format'' option can be specified either on the ''All Parameters'' tab of the ''Configuration Parameters'' dialog box or via input arguments of the sim command for command line simulation.</entry>
<entry key="OutportInvalidArrayDataLogging_COMPLEXITY">The default ''Array'' format for saving outputs to the workspace is invalid for this model.  The ''Array'' format can be used if all the signals connected to the root outports are of the same complexity. \n For this model you need to set the ''Format'' option to ''Dataset'', ''Structure with time'' or ''Structure''. The ''Format'' option can be specified either on the ''All Parameters'' tab of the ''Configuration Parameters'' dialog box or via input arguments of the sim command for command line simulation.</entry>
<entry key="OutportInvalidArrayDataLogging_DATATYPE">The default ''Array'' format for saving outputs to the workspace is invalid for this model. The ''Array'' format can be used if all the signals connected to the root outports have the same data type. \n For this model you need to set the ''Format'' option to ''Dataset'', ''Structure with time'' or ''Structure''. The ''Format'' option can be specified either on the ''All Parameters'' tab of the ''Configuration Parameters'' dialog box or via input arguments of the sim command for command line simulation.</entry>
<entry key="OutportInvalidArrayDataLogging_DIM">The ''Array'' format for saving outputs to the workspace requires all signals connected to the root outports to be scalar or 1-D arrays. For model ''{0}'' set the ''Format'' option in ''Configuration Parameters &gt; All Parameters'' to ''Dataset'', ''Structure'' or ''Structure with time''.</entry>

    <entry key="OutportMustHaveScalarICForBusSignal">The parameter ''Initial output'' of Outport block ''{0}'' must be a scalar when the Outport block is driven by a bus signal</entry>
    <entry key="OutportMustHaveScalarICForVarDimsVirtualBus"><![CDATA[The parameter ''Initial output'' of Outport block ''{0}'' must be a scalar when the Outport block is driven by a virtual bus signal. To specify a scalar initial output for this Outport block, you must enable simplified initialization mode by setting <sldiag objui="configset" objparam="UnderspecifiedInitializationDetection">Underspecified initialization detection</sldiag> to ''simplified''. Note that some modifications may be necessary to ensure the model conforms to certain modeling standards required by the new initialization mode. For more information, see documentation for the Model Advisor check ''Check consistency of initialization parameters for Outport and Merge blocks''.]]></entry>
    <entry key="OutportNeedsVirtualBusCopy">An explicit copy of the bus signal driving the Outport block ''{0}'' is needed to ensure correct initialization of the corresponding subsystem''s output signal. Insert a Signal Conversion block with the ''Output'' option set to ''Signal copy'' before this Outport block. An additional signal copy may be required for the following reasons: (1) Outport is driven by a block with non-overwritable output such as a Ground, Constant, or Stateflow block; (2) Outport shares the same signal source with another Outport in the same subsystem or one nested within the current subsystem but having a different initial output value; (3) Outport is connected to an input of a Merge block or (4) A Simulink.Signal object with explicit initial value is being specified on one of Outport''s input signals</entry>
    <entry key="OutportPassingThruFcnCallInitSigMustInheritIC">A function-call trigger signal from output port {1,number,integer} of block ''{2}'' is passing through the Outport block ''{0}''. Therefore, the parameter ''Initial output'' must be set to empty ([]) or the parameter ''Source of initial output value:'' must be set to ''Input signal''.</entry>
    <entry key="OutputBufferInfNanDetectedError">Block ''{0}'' output ''{1}'' for element {2,number,integer} of output port {3,number,integer} at {4} time step {5}. This block may not be where the value was introduced.  To find the block where the value originated, please run in normal mode instead of accelerator mode</entry>
    <entry key="OutputNotConnected">Output port {0,number,integer} of ''{1}'' is not connected.</entry>
    <entry key="OutputPortMultiDDimsDisallowed">Cannot set dimensions of output port {0,number,integer} of ''{1}'' to {2}. This block is not setup to handle signals of dimensions greater than 2 dimensions.</entry>
    <entry key="OutputPortTrailingUnityDimsDisallowed">Cannot initialize dimensions of output port {0,number,integer} of ''{1}'' to {2}. When the number of dimensions of a matrix exceeds 2, the size of the trailing dimension must be greater than 1.</entry>
    <entry key="OverLicenseBlockLimit">Number of blocks in the block diagram ''{0}'' and all models it references exceeds the license limit of {1,number,integer} nonvirtual blocks.</entry>
    <entry key="LicenseNoAcceleratorWarning">The model ''{0}'' uses Accelerator, or Rapid Accelerator mode. This license does not support these modes. The simulation will run in Normal mode.</entry>
    <entry key="BuildPilTargetFailed">Build process for SIL or PIL simulation is incomplete.</entry>
    <entry key="PILGroundAtOutport">Root outport "{0}" is driven by a grounded signal. Top-model SIL or PIL simulation mode does not support grounded signals at root outports. To avoid this error, change the model to remove the grounded signal.</entry>
    <entry key="PILInitialValueAtInport">No workspace input data is specified and root inport "{0}" has an associated signal object that specifies an initial value. This configuration is not supported by top-model SIL or PIL simulation mode. To avoid this error, either specify workspace input data in the Data Import/Export pane of the Configuration Parameters dialog box, or change the signal object such that it does not specify an initial value.</entry>
    <entry key="PILMUXAtOutport">Root outport "{0}" is driven by a discontiguous signal (e.g. MUX). Top-model SIL or PIL simulation mode does not support discontiguous signals at root outports. To avoid this error, change the model to remove the discontiguous signal (e.g. apply a Signal copy via the Signal Conversion block or use a nonvirtual bus).</entry>
    <entry key="PILStrictBusMsgNotSet"><![CDATA[Diagnostic setting "Mux blocks used to create bus signals" must be set to "error" for SIL or PIL simulation of model "{0}". To avoid this error, change the setting in the Diagnostics > Connectivity > Buses section of the configuration parameters.]]></entry>
    <entry key="PILVirtualBusAtOutport">Root outport "{0}" is outputting a virtual bus signal. Top-model SIL or PIL simulation mode does not support virtual bus signals at root outports. To avoid this error, use a nonvirtual bus at the root outport.</entry>
    <entry key="PILVirtualBusDrivingOutport">Root outport "{0}" is driven by a virtual bus signal. Top-model SIL or PIL simulation mode does not support virtual bus signals at root outports. To avoid this error, convert the signal driving the root outport to a nonvirtual bus.</entry>
    <entry key="PLCCoder_LicenseError">Unable to check out the Simulink PLC Coder license which is needed to generate code</entry>
    <entry key="ParamDataTypeNotSupportedInRTP">The block diagram ''{0}'' has a tunable parameter ''{1}'' with data type ''{2}''. This data type is not supported by rsimgetrtp or in rapid accelerator mode.</entry>
    <entry key="ModelParameterNotFoundInCAPI"> The model parameter ''{0}'' was not found in the C-API. </entry>
    <entry key="BlockParameterNotFoundInCAPI"> The block parameter ''{0}'' with block path ''{1}'' was not found in the C-API. </entry>
    <entry key="RSimGetRtpGeneratedCodeDoesNotExist"> Could not find the host C-API library ''{0}''. </entry>
    <entry key="RSimGetRtpCannotUsePreCompiledModel">RSimGetRTP does not work with pre-compiled models.</entry>
    <entry key="RSimGetRtpChecksumMismatch">The checksum in the rtp supplied to RSimGetRTP does not match the checksum in the generated code.</entry>
    <entry key="ParameterDataNotReusableSCForCPP">The storage class of parameter ''{0}'' is global, thus the generated code is not C++ class interface compliant.  Consider using storage class ''Auto'', or setting the option ''Code interface packaging'' to a value other than ''C++ class''</entry>
    <entry key="ParentInitTimeVariableSizeSubsystemExecTimeVariableSize">The subsystem ''{0}'' is set to ''Propagate sizes of variable-size signals during execution''. However, its parent subsystem is set to ''Propagate sizes of variable-size signals only when enabling, resetting, or when execution is resumed''. Consider changing the parameter ''Propagate sizes of variable-size signals'' for ''{1}'' to ''Only when enabling''.</entry>
    <entry key="ResetSSParentInitTimeVariableSizeSubsystemExecTimeVariableSize">The subsystem ''{0}'' is set to ''Propagate sizes of variable-size signals during execution''. However, its parent subsystem is set to ''Propagate sizes of variable-size signals only when enabling, resetting, or when execution is resumed''. Consider changing the parameter ''Propagate sizes of variable-size signals'' for ''{1}'' to ''Only when resetting''.</entry>
    <entry key="EmlParseCompilationError">Derived expression, ''{0}'', specified in the code replacement library is not supported for code generation.</entry>
    <entry key="PartialCompileEarlyTerminate">Terminating compile after parameter evaluation as per request</entry>
    <entry key="PassThroughBusTypeMismatch">''{0}'' has an invalid data type. The block has set a flag (ssSetInputDimsSameAsOutputDims for S-functions) which indicates that the input port {1,number,integer} and the output port {2,number,integer} must have the same bus type throughout the model execution. Simulink requires that the input and the output ports have the same bus type.</entry>
    <entry key="PassThroughCompStageMismatch">Simulink detected an incorrect usage of ''ssSetInputPortDimsSameAsOutputPortDims'' for the S-function in ''{0}''. This SimStruct function can only be used in the ''mdlSetWorkWidths'' method.</entry>
    <entry key="PassThroughDimsMismatch">''{0}'' has invalid dimensions. The block has set a flag (ssSetInputDimsSameAsOutputDims for S-functions) which indicates that the dimensions of the input port {1,number,integer} and the output port {2,number,integer} must be the same throughout the model execution. Simulink requires that the input and the output ports have the same maximum dimension.</entry>
    <entry key="PassThroughDimsModeMismatch">''{0}'' has an invalid dimension mode setting. The block has set a flag (ssSetInputDimsSameAsOutputDims for S-functions) which indicates that the dimensions of the input port {1,number,integer} and the output port {2,number,integer} must be the same throughout the model execution. Simulink requires that the input and the output ports have the same dimension mode.</entry>
    <entry key="PassThroughInvalidDirectFeedThroughSetting">''{0}'', which has variable-size mode, has an invalid direct feedthrough setting. The block has set a flag (ssSetInputDimsSameAsOutputDims for S-functions) which indicates that the dimensions of the input port {1,number,integer} and the output port {2,number,integer} must be the same throughout the model execution. Simulink requires that the direct feedthrough setting for the input port must be ''on''.</entry>
    <entry key="PathEmpty">Empty path specified</entry>
    <entry key="PathInvalid">Invalid path specified</entry>
    <entry key="PeriodicFCSSMustHaveScalarCall">Only one function-call initiator can execute function-call block ''{0}'' because it has a periodic sample time.</entry>
    <entry key="PerturbationMustBeScalar">Port perturbation level for the block ''{0}'', port {1,number,integer} must be a scalar variable.</entry>
    <entry key="PerturbationNotValidOnOutputPort">Port perturbation level not valid for a Simulink output port</entry>
    <entry key="PerturbationWithNonDoubleData">The block is linearized using numerical perturbation method. At least one of the input ports is non-double and is not perturbed.</entry>
    <entry key="PortBasedTsNeedsPorts">The block ''{0}'' cannot specify PORT_BASED_SAMPLE_TIMES because it has no ports.</entry>
    <entry key="PortDimsMismatch11">Error in port widths or dimensions. Invalid dimension has been specified for input port {0,number,integer} of ''{1}''. Dimensions cannot be NULL.</entry>
    <entry key="PortDimsMismatch12">Error in port widths or dimensions. Invalid dimension has been specified for output port {0,number,integer} of ''{1}''. Dimensions cannot be NULL.</entry>
    <entry key="PortDimsMismatch21">Error in port widths or dimensions. Invalid dimension has been specified for input port {0,number,integer} of ''{1}''.</entry>
    <entry key="PortDimsMismatch22">Error in port widths or dimensions. Invalid dimension has been specified for output port {0,number,integer} of ''{1}''.</entry>
    <entry key="PortDimsMismatch31">Error in port widths or dimensions. Input port {0,number,integer} of ''{1}'' has {2,number,integer} elements.  This port does not accept the dimensions (or orientation) specified by the input signal.</entry>
    <entry key="PortDimsMismatch32">Error in port widths or dimensions. Output port {0,number,integer} of ''{1}'' has {2,number,integer} elements.  This port does not accept the dimensions (or orientation) specified by the output signal.</entry>
    <entry key="PortDimsMismatch41">Error in port widths or dimensions. Input port {0,number,integer} of ''{1}'' is a one dimensional vector with {2,number,integer} elements.</entry>
    <entry key="PortDimsMismatch42">Error in port widths or dimensions. Output port {0,number,integer} of ''{1}'' is a one dimensional vector with {2,number,integer} elements.</entry>
    <entry key="PortDimsMismatch51">Error in port widths or dimensions. Input port {0,number,integer} of ''{1}'' is a {2} matrix.</entry>
    <entry key="PortDimsMismatch52">Error in port widths or dimensions. Output port {0,number,integer} of ''{1}'' is a {2} matrix.</entry>
    <entry key="PortHandleNotAvailable">At least one of the port handles that correspond to linearization points is no longer available. Make sure that no block has been removed from block diagram, for example, in a model callback function or mask initialization code.</entry>
    <entry key="BlockNotAvailable">Block ''{0}'' has been removed from simulation and hence the linearization point marked at its output is no longer available.</entry>
    <entry key="PortSampHitForNonPST">The ''IsSampleHit'' method of ''{0}'' cannot be called for a port that has no sample time</entry>
    <entry key="PortTypeDomainDifference">Port type ''{0}'' and port type ''{1}'' have different domains and cannot connect.</entry>
    <entry key="PortVarDimsMismatch31">Error in port widths or dimensions. Input port {0,number,integer} of ''{1}'' has a maximum of {2,number,integer} elements.  This port does not accept the dimensions (or orientation) specified by the input signal.</entry>
    <entry key="PortVarDimsMismatch32">Error in port widths or dimensions. Output port {0,number,integer} of ''{1}'' has a maximum of {2,number,integer} elements.  This port does not accept the dimensions (or orientation) specified by the output signal.</entry>
    <entry key="PortVarDimsMismatch41">Error in port widths or dimensions. Input port {0,number,integer} of ''{1}'' is a one dimensional vector with a maximum of {2,number,integer} elements.</entry>
    <entry key="PortVarDimsMismatch42">Error in port widths or dimensions. Output port {0,number,integer} of ''{1}'' is a one dimensional vector with a maximum of {2,number,integer} elements.</entry>
    <entry key="PortVarDimsMismatch51">Error in port widths or dimensions. Input port {0,number,integer} of ''{1}'' is a matrix with a maximum size of {2}.</entry>
    <entry key="PortVarDimsMismatch52">Error in port widths or dimensions. Output port {0,number,integer} of ''{1}'' is a matrix with a maximum size of {2}.</entry>
    <entry key="PrintAlgLoopFound">Found algebraic loop containing:\n</entry>
    <entry key="ProfileInitErrWithErrContext">An error occurred initializing the error context for the Simulink profiler</entry>
    <entry key="ProfileInitErrWithMsgContext">An error occurred initializing the message context for the Simulink profiler</entry>
    <entry key="ProfileReportGenErr">An error occurred while generating the profile report for model ''{0}''.</entry>
    <entry key="ProfilingNotSupportedForFixedAndDiscrete">Solver Profiling is not supported for fixed step solvers and models with no states.\nNo solver information will be produced related to the fixed step ODE solver or the discrete solver\n</entry>
    <entry key="ProjStateNotFinite">After imposing invariants at time {0}, state ''{1}'' of ''{2}'' is Inf or NaN.  Stopping simulation.</entry>
    <entry key="ProjectionsNotSupported">Unable to generate code for model ''{0}'' because it requires state projection, which is currently not supported</entry>
    <entry key="RTI_ASSIGN_COMPLEX_MISMATCH">Invalid assignment in ''{0}'': attempt to assign ''complex'' to ''real''</entry>
    <entry key="RTI_ASSIGN_DATA_TYPE_MISMATCH">Invalid assignment in ''{0}'': attempt to assign ''{1}'' to ''{2}''</entry>
    <entry key="RTI_ASSIGN_DIMS_MISMATCH">Invalid assignment in ''{0}'': attempt to assign a matrix of dimensions {1} to a matrix of dimensions {2}</entry>
    <entry key="RTI_ASSIGN_INVALID_DATA">Invalid assignment in ''{0}''. Data must be a numeric or logical array</entry>
    <entry key="RTI_ASSIGN_NUM_DIMS_MISMATCH">Invalid assignment in ''{0}'': attempt to assign a matrix to a vector</entry>
    <entry key="RTI_ASSIGN_VECT_WIDTH_MISMATCH">Invalid assignment in ''{0}'': attempt to assign a vector of width {1,number,integer} to a vector of width {2,number,integer}</entry>
    <entry key="RTI_ContStatesInvalidComplexity">Invalid data complexity specified for continuous states of ''{0}''. Data complexity must be ''Real'' or ''Complex''</entry>
    <entry key="RTI_ContStatesInvalidDatatype">Invalid datatype specified for continuous states of ''{0}''. Datatype ID of continuous states must 0 for ''double''</entry>
    <entry key="RTI_ContStatesInvalidDims">Invalid dimension specified for continuous states of ''{0}''. Dimension for continuous states must be a positive integer</entry>
    <entry key="RTI_DataAsDouble_NonBuiltInNotSupported">DataAsDouble method in ''{0}'' is not supported for non built-in data types</entry>
    <entry key="RTI_DataStoreCmplxReadOnly">Cannot set the read-only ''Complexity'' field of DataStore ''{0,number,integer}'' in ''{1}''</entry>
    <entry key="RTI_DataStoreDimsReadOnly">Cannot set the read-only ''Dimensions'' field of DataStore ''{0,number,integer}'' in ''{1}''</entry>
    <entry key="RTI_DataStoreDtypeReadOnly">Cannot set the read-only ''DataType'' field of DataStore ''{0,number,integer}'' in ''{1}''</entry>
    <entry key="RTI_Data_NonBuiltInNotSupported">Accessing data with non built-in data types in ''{0}'' is not supported</entry>
    <entry key="RTI_DerivativesInvalidComplexity">Invalid data complexity specified for derivatives of ''{0}''. Data complexity must be ''Real'' or ''Complex''</entry>
    <entry key="RTI_DerivativesInvalidDatatype">Invalid datatype specified for derivatives of ''{0}''. Datatype ID of derivatives must be 0 for ''double''</entry>
    <entry key="RTI_DerivativesInvalidDims">Invalid dimension specified for derivatives of ''{0}''. Dimension for continuous states must be a positive integer</entry>
    <entry key="RTI_DlgPrmInvalidComplexity">Invalid data complexity specified for dialog parameter {0,number,integer} of ''{1}''. Data complexity must be ''Real'' or ''Complex''</entry>
    <entry key="RTI_DlgPrmInvalidDatatype">Invalid datatype specified for dialog parameter {0,number,integer} of ''{1}''. Datatype ID must be one of the following: 0 for ''double'', 1 for ''single'', 2 for ''int8'', 3 for ''uint8'', 4 for ''int16'', 5 for ''uint16'', 6 for ''int32'', 7 for ''uint32'', 8 for ''boolean''</entry>
    <entry key="RTI_DlgPrmInvalidDims">Invalid dimensions specified for dialog parameter {0,number,integer} of ''{1}''. Dimensions must be an array of positive integers</entry>
    <entry key="RTI_DworkInvalidComplexity">Invalid data complexity specified for Dwork {0,number,integer} of ''{1}''. Data complexity must be ''Real'' or ''Complex''</entry>
    <entry key="RTI_DworkInvalidDatatype">Invalid datatype specified for Dwork {0,number,integer} of ''{1}''. Datatype ID of Dwork must be one of the following: 0 for ''double'', 1 for ''single'', 2 for ''int8'', 3 for ''uint8'', 4 for ''int16'', 5 for ''uint16'', 6 for ''int32'', 7 for ''uint32'', 8 for ''boolean'', or fixed-point data types</entry>
    <entry key="RTI_DworkInvalidDims">Invalid dimensions specified for Dwork {0,number,integer} of ''{1}''. Dwork must be a vector, and its width must be a positive integer</entry>
    <entry key="RTI_EmptyDataStoreName" note="stringDatatypeUpdate">The name of DataStore {0,number,integer} of ''{1}'' cannot be an empty character vector</entry>
    <entry key="RTI_EmptyDworkName" note="stringDatatypeUpdate">The name of Dwork {0,number,integer} of ''{1}'' cannot be an empty character vector</entry>
    <entry key="RTI_FullDimInfoUnknown">The dimension information of Dwork {0,number,integer} in ''{1}'' is not fully specified</entry>
    <entry key="RTI_IdxForNoDataStore">Invalid DataStore index for ''{0}''. This block has no registered DataStores.</entry>
    <entry key="RTI_IdxForNoDlgPrm">Invalid dialog parameter index for ''{0}''. This block has no dialog parameters</entry>
    <entry key="RTI_IdxForNoDwork">Invalid Dwork index for ''{0}''. This block has no registered Dwork</entry>
    <entry key="RTI_IdxForNoInputPort">Invalid input port index specified for ''{0}''. This block has no input ports</entry>
    <entry key="RTI_IdxForNoOutputPort">Invalid output port index specified for ''{0}''. This block has no output ports</entry>
    <entry key="RTI_IdxForNoRTP">Invalid run-time parameter index for ''{0}''. This block has no run-time parameters</entry>
    <entry key="RTI_InputPortInvalidComplexity">Invalid signal complexity specified for input port {0,number,integer} of ''{1}''. Signal complexity must be ''Real'', ''Complex'', or ''Inherited''</entry>
    <entry key="RTI_InputPortInvalidDatatype">Invalid datatype specified for input port {0,number,integer} of ''{1}''. Datatype ID of input port must be one of the following: -1 for ''inherited'', 0 for ''double'', 1 for ''single'', 2 for ''int8'', 3 for ''uint8'', 4 for ''int16'', 5 for ''uint16'', 6 for ''int32'', 7 for ''uint32'', 8 for ''boolean'', or fixed-point data types</entry>
    <entry key="RTI_InputPortInvalidDims">Invalid dimensions specified for input port {0,number,integer} of ''{1}''. Dimensions must be an array of positive integers (or -1 for inherited)</entry>
    <entry key="RTI_InputPortInvalidDimsMode">Invalid dimensions mode specified for input port {0,number,integer} of ''{1}''. Dimensions mode must be ''Fixed'', ''Variable'' or ''Inherited''</entry>
    <entry key="RTI_InputPortInvalidFrameness">Invalid sampling mode specified for input port {0,number,integer} of ''{1}''. Sampling mode must be ''Sample'', ''Frame'' or ''Inherited''</entry>
    <entry key="RTI_InputPortInvalidOverwriteDatatype">The data type ID of input port {0,number,integer} of ''{1}'' cannot be changed from {2,number,integer} to {3,number,integer}</entry>
    <entry key="RTI_InputPortInvalidReuseSetting">Invalid reusability specified for input port {0,number,integer} of ''{1}''. Input port reusability must be ''NotReusableAndGlobal'' or ''ReusableAndLocal''</entry>
    <entry key="RTI_InputPortOverwriteComplexity">The signal complexity of input port {0,number,integer} of ''{1}'' cannot be changed from ''{2}'' to ''{3}''</entry>
    <entry key="RTI_InputPortOverwriteDims">The dimensions of input port {0,number,integer} of ''{1}'' cannot be changed from {2} to {3}</entry>
    <entry key="RTI_InputPortOverwriteDimsMode">The dimensions mode of input port {0,number,integer} of ''{1}'' cannot be changed from ''{2}'' to ''{3}''</entry>
    <entry key="RTI_InputPortOverwriteFrameness">The sampling mode of input port {0,number,integer} of ''{1}'' cannot be changed from ''{2}'' to ''{3}''</entry>
    <entry key="RTI_InvalidDataStoreIdx">Invalid DataStore index for ''{0}''. Dwork index must be in the range from 1 through {1,number,integer}</entry>
    <entry key="RTI_InvalidDlgPrmIdx">Invalid dialog parameter index for ''{0}''. Dialog parameter index must be in the range from 1 through {1,number,integer}</entry>
    <entry key="RTI_InvalidDworkIdx">Invalid Dwork index for ''{0}''. Dwork index must be in the range from 1 through {1,number,integer}</entry>
    <entry key="RTI_InvalidInputPortIdx">Invalid input port index specified for ''{0}''. Input port index must be in the range from 1 through {1,number,integer}</entry>
    <entry key="RTI_InvalidInputPortIdx2">Invalid input port index ({0,number,integer}) specified for block "''{1}''", which has {2,number,integer} input ports. Tip: port numbering goes 1,2,3...</entry>
    <entry key="RTI_InvalidOutputPortIdx">Invalid output port index for ''{0}''. Output port index must be in the range from 1 through {1,number,integer}</entry>
    <entry key="RTI_InvalidRTPIdx">Invalid run-time parameter index for ''{0}''. Run-time parameter index must be in the range from 1 through {1,number,integer}</entry>
    <entry key="RTI_Listener_TIDs_ExecOnly">The event listener TIDs for ''{0}'' can be accessed only when simulation is running</entry>
    <entry key="RTI_Listener_Const_SampleTime">Simulink can only add an execution event listener to a block with a non-constant sample time.
Block ''{0}'' has a constant sample time.</entry>
    <entry key="RTI_MATLAB_BLK_ONLY">Property ''{0}'' can only be set for an MATLAB S-function block</entry>
    <entry key="RTI_MATLAB_BLK_OR_EVENT_CALLBACK_ONLY">Property ''{0}'' can only be set for an MATLAB S-function block or from an event listener</entry>
    <entry key="RTI_NULL_DATA">Cannot access data in ''{0}''. The probable cause of this error is accessing data that is available only when simulation is running</entry>
    <entry key="RTI_OutputPortInvalidComplexity">Invalid signal complexity specified for output port {0,number,integer} of ''{1}''. Signal complexity must be ''Real'', ''Complex'', or ''Inherited''</entry>
    <entry key="RTI_OutputPortInvalidDatatype">Invalid datatype specified for output port {0,number,integer} of ''{1}''. Datatype ID of output port must be one of the following: -1 for ''inherited'', 0 for ''double'', 1 for ''single'', 2 for ''int8'', 3 for ''uint8'', 4 for ''int16'', 5 for ''uint16'', 6 for ''int32'', 7 for ''uint32'', 8 for ''boolean'', or fixed-point data types</entry>
    <entry key="RTI_OutputPortInvalidDims">Invalid dimensions specified for output port {0,number,integer} of ''{1}''. Dimensions must be an array of positive integers (or -1 for inherited)</entry>
    <entry key="RTI_OutputPortInvalidDimsMode">Invalid dimensions mode specified for output port {0,number,integer} of ''{1}''. Sampling mode must be ''Fixed'', ''Variable'' or ''Inherited''</entry>
    <entry key="RTI_OutputPortInvalidFrameness">Invalid sampling mode specified for output port {0,number,integer} of ''{1}''. Sampling mode must be ''Sample'', ''Frame'' or ''Inherited''</entry>
    <entry key="RTI_OutputPortInvalidOverwriteDatatype">The data type ID of output port {0,number,integer} of ''{1}'' cannot be changed from {2,number,integer} to {3,number,integer}</entry>
    <entry key="RTI_OutputPortInvalidReuseSetting">Invalid reusability specified for output port {0,number,integer} of ''{1}''. Output port reusability must be ''NotReusableAndGlobal'' or ''ReusableAndLocal''</entry>
    <entry key="RTI_OutputPortOverwriteComplexity">The signal complexity of output port {0,number,integer} of ''{1}'' cannot be changed from ''{2}'' to ''{3}''</entry>
    <entry key="RTI_OutputPortOverwriteDims">The dimensions of output port {0,number,integer} of ''{1}'' cannot be changed from {2} to {3}</entry>
    <entry key="RTI_OutputPortOverwriteDimsMode">The dimensions mode of output port {0,number,integer} of ''{1}'' cannot be changed from ''{2}'' to ''{3}''</entry>
    <entry key="RTI_OutputPortOverwriteFrameness">The sampling mode of output port {0,number,integer} of ''{1}'' cannot be changed from ''{2}'' to ''{3}''</entry>
    <entry key="RTI_PROPERTY_READONLY">Property ''{0}'' is read-only and cannot be set</entry>
    <entry key="RTI_REDUCED_BLOCK">Cannot create a runtime object for ''{0}''. This block has been removed by block reduction optimization</entry>
    <entry key="RTI_RTPInvalidComplexity">Invalid data complexity specified for run-time parameter {0,number,integer} of ''{1}''. Data complexity must be ''Real'' or ''Complex''</entry>
    <entry key="RTI_RTPInvalidDatatype">Invalid datatype specified for run-time parameter {0,number,integer} of ''{1}''. Datatype ID must be one of the following: 0 for ''double'', 1 for ''single'', 2 for ''int8'', 3 for ''uint8'', 4 for ''int16'', 5 for ''uint16'', 6 for ''int32'', 7 for ''uint32'', 8 for ''boolean''</entry>
    <entry key="RTI_RTPInvalidDims">Invalid dimensions specified for run-time parameter {0,number,integer} of ''{1}''. Dimensions must be an array of positive integers</entry>
    <entry key="RTI_SetEvaledDlgParamsNotPerm">The data for dialog parameter {0,number,integer} in ''{1}'' is read-only and cannot be set</entry>
    <entry key="RTI_SetInputVarDimsNotPerm">The variable dimensions for input port {0,number,integer} in ''{1}'' is read-only and cannot be set</entry>
    <entry key="RTI_SparseMatrixNotSupported">The block run-time interface used in ''{0}'' does not support MATLAB sparse matrices</entry>
    <entry key="RTI_WRITE_TO_BUS_NOT_SUPPORTED">Cannot use a runtime object of ''{0}'' to write data to a bus object</entry>
    <entry key="RTWBoolsToBitsWithStructAlignment">Booleans may not be packed to bitfields when using a target that specifies an explicit structure alignment.  Turn off the option ''Pack Boolean data into bitfields'' on the Optimization > Signals and Parameters pane of the Configuration Parameters dialog</entry>
    <entry key="RTWCSCStructureFieldIdConflict">A Custom Storage Class Structure Field ''{0}'' conflicts with a programming reserved identifier.</entry>
    <entry key="RTWCSCStructureMacroIdConflict">A Custom Storage Class Structure Field ''{0}'' conflicts with another Custom Storage Class Macro specification</entry>
    <entry key="RTWBusElementNameReservedIdConflictCSC">Unable to generate code using bus object ''{0}'' because it has an element named ''{1}'' which conflicts with a Parameter with Custom Storage Macro specification</entry>
    <entry key="RTWDataTypeNameReservedIdConflictCSC">Unable to generate code using user-defined data type ''{0}'' because it conflicts with a ''{1}'' Parameter with Custom Storage Macro specification</entry>
    <entry key="RTWCSCStructFieldIdConflictEnum">Unable to generate code using user-defined data type ''{0}'' because it has an element ''{1}'' that conflicts Custom Storage Structure specification</entry>
    <entry key="RTWBusElementNameReservedIdConflict">Unable to generate code using bus object ''{0}'' because it has an element named ''{1}'' which conflicts with a {2} language reserved identifier</entry>
    <entry key="RTWCGAutosarArgData">Error during reading argument specification data from UDD object for AUTOSAR configuration</entry>
    <entry key="RTWCGAutosarEmptyConfigurationError">The model has selected the AUTOSAR target, yet the model specifies no AUTOSAR interface. Specify an AUTOSAR interface via the ''Code > C/C++ Code > Configure Model as Autosar Component'' menu in the model window.</entry>
    <entry key="RTWCGAutosarEmptySSConfigurationError">You are attempting to use the AUTOSAR target when generating code for the subsystem ''{0}'', yet the subsystem does not have a proper AUTOSAR interface configured for it. To specify an AUTOSAR interface for the subsystem, convert the subsystem to a model and configure the model.</entry>
    <entry key="RTWCGAutosarValidateError">Error during the validation of AUTOSAR configuration: {0}</entry>
    <entry key="RTWCGAutosarConditionalImplicitWrite">The current configuration of output port block ''{0}'' will result in a conditional implicit write, which has undefined behavior. Either change its data access mode to ExplicitSend, or change its sample time to match the fundamental sample time of the model.</entry>
    <entry key="RTWCGAutosarMergedIRVConditionalWrite"><![CDATA[Output port {0,number,integer} of ''{1}'' may conditionally write to the Merge block ''{2}'', which is written to by multiple function-call subsystems being exported as runnables; this modeling pattern is not supported by the AUTOSAR target unless <sldiag objui="configset" objparam="UnderspecifiedInitializationDetection">Underspecified initialization detection</sldiag> is set to 'Simplified' in order to ensure consistent behavior. As a result, the behavior of the generated code may be inconsistent with simulation.  For a large or complex model, use the Model Advisor check ''Check consistency of initialization parameters for Outport and Merge blocks'' to help with this task. Use <sldiag objui="configset" objparam="ModelReferenceIOMsg">Invalid root Inport/Outport block connection</sldiag> to control reporting of this condition.]]></entry>
    <entry key="RTWCGAutosarNvmRwInvReadBlockArgSpec">Function Caller block ''{0}'' is mapped to ReadBlock or RestoreBlockDefaults AUTOSAR non-volatile memory service operation. These operations expect only 1 input argument. Connect an output to a Data Store Write block and map this data store memory port to the input argument to pass it in directly to the operation.</entry> 
    <entry key="RTWCGAutosarNvmRwInvWriteBlockArgSpec">Function Caller block ''{0}'' is mapped to the WriteBlock AUTOSAR non-volatile memory service operation. This operation expects only 1 input argument. Connect the input directly to a Data Store Read block and map this data store memory port to the input argument to pass it in directly to the operation.</entry> 
    <entry key="RTWCGAutosarNvmRwInvReadBlockInoutArg">Function Caller block ''{0}'' is mapped to ReadBlock or RestoreBlockDefaults AUTOSAR non-volatile memory service operation. Output port ''{1}'' cannot be specified as an input-output argument.</entry>
    <entry key="RTWCGAutosarNvmRwInvWriteBlockInoutArg">Function Caller block ''{0}'' is mapped to the WriteBlock AUTOSAR non-volatile memory service operation. The data store memory input port cannot be specified as an input-output argument.</entry>
    <entry key="RTWCGAutosarNvmRwUnsupportedWriteBlockSrc">Function Caller block ''{0}'' is mapped to the WriteBlock AUTOSAR non-volatile memory service operation. Connect the input directly to a Data Store Read block to pass the data store memory directly to the operation. Configure the Data Store Read block to execute at the same time step and remove any element assignment specifications. Verify that the Function Caller block immediately follows the Data Store Read block in execution order.</entry>
    <entry key="RTWCGAutosarNvmRwUnsupportedReadBlockDst">Function Caller block ''{0}'' is mapped to the ReadBlock or RestoreBlockDefaults AUTOSAR non-volatile memory service operation. Output port ''{1}'' can only be connected to a Data Store Write block to pass the data store memory directly to the operation. Configure the Data Store Write block to execute at the same time step and remove any element assignment specifications. Verify that the Data Store Write block immediately follows the Function Caller block in execution order.</entry>
    <entry key="RTWCGAutosarNvmRwUnsupportedReadBlockTestpointSignal">Function Caller block ''{0}'' is mapped to ReadBlock or RestoreBlockDefaults AUTOSAR non-volatile memory service operation. Signals connected to output port ''{1}'' cannot be designated as test points in the generated code since the data store memory will be passed in directly to the operation in generated code for AUTOSAR targets.</entry>
    <entry key="RTWCGAutosarNvmRwUnsupportedReadBlockNonvirtualSignal">Function Caller block ''{0}'' is mapped to ReadBlock or RestoreBlockDefaults AUTOSAR non-volatile memory service operation. Signal name cannot be specified for signals connected to output port ''{1}'' since the data store memory will be passed in directly to the operation in generated code for AUTOSAR targets.</entry>
    <entry key="RTWCGAutosarNvmRwValidationFailure">Function Caller block ''{0}'' is mapped to the WriteBlock, ReadBlock, or RestoreBlockDefaults AUTOSAR non-volatile memory service operation. The code generator is unable to pass the data store memory directly to the operation.</entry>
    <entry key="RTWCGAutosarNvmRwUnaddressableDstore">Function Caller block ''{0}'' is mapped to the WriteBlock, ReadBlock, or RestoreBlockDefaults AUTOSAR non-volatile memory service operation. The data store memory signal needs to be addressable in order to pass it in directly to the operation. For example, you can create an AUTOSAR.Signal object to specify the data store memory.</entry>
    <entry key="RTWCGCPPClassGenStr">C++ class interface</entry>
    <entry key="RTWCGCPPClassGenValidateError">Error while validating the C++ class interface specification for model ''{0}'' : {1}</entry>
    <entry key="RTWCGCPPClassMdlRefOutUpdCombined">The code interface packaging option ''C++ class'' cannot be selected for model ''{0}'' because it does not combine its output and update functions when generating code for model reference targets</entry>
    <entry key="RTWCGCPPClassMdlRefVoidStyleNotSupported">Only ''I/O arguments step method'' style C++ class interface is supported for model ''{0}'' that is used as a referenced model.</entry>
    <entry key="RTWCGCPPClassSetNotAllowed">C++ class interface customization is not allowed for non-ERT based targets</entry>
    <entry key="RTWCGCPPMdlRefInstanceVariables">Error reading model reference instance variables for C++ class generation''s I/O arguments step method</entry>
    <entry key="RTWCGEmptyCPPEncapConfigurationError">The model has selected ''C++ class'' as the code interface packaging, yet the model specifies no C++ class interface configuration. Specify a C++ class interface via the Code Generation > Interface pane of the Configuration Parameters dialog</entry>
    <entry key="RTWCGFcnProtoCtlArgData">Error reading argument specification data from UDD object for model step function prototype control</entry>
    <entry key="RTWCGFcnProtoCtlArgDataForCPPClass">Error reading argument specification data from UDD object for C++ class interface''s I/O arguments step method</entry>
    <entry key="RTWCGFcnProtoCtlArgNameForCPPClass">Error reading argument name from UDD object for C++ class interface''s I/O arguments step method</entry>
    <entry key="RTWCGFcnProtoCtlClassNameForCPPClass">Error reading model class name from UDD object for C++ class interface</entry>
    <entry key="RTWCGFcnProtoCtlNamespaceForCPPClass">Error reading model class namespace from UDD object for C++ class interface</entry>
    <entry key="RTWCGFcnProtoCtlFunctionNameForCPPClass">Error reading step member function name from UDD object for C++ class interface''s I/O arguments step method</entry>
    <entry key="RTWCGFcnProtoCtlMdlRefOutUpdCombined">Model function prototype control cannot be used for this model because it does not combine its output and update functions when generating code for model reference targets</entry>

    <entry key="RTWCGFcnProtoCtlMdlRefVirtualBusRootIO">Model function prototype
    control cannot be used for model ''{0}'' because it is a referenced model
    with a virtual bus at a root Inport or root Outport block. Either disable
    model function prototype control or configure root Inport and root Outport
    blocks to use non-virtual buses.</entry>
    <!-- RTWCGCPPClassMdlRefVirtualBusRootIO TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineModelRefs.m -->
    <entry key="RTWCGCPPClassMdlRefVirtualBusRootIO"><![CDATA[Configuration of referenced
    model ''{0}'' does not support using a virtual bus at a root Inport or root
    Outport block.
      <actions exclusiveFixIts="yes">
        <action type="suggestion">Configure the root Inport and root Outport blocks to use nonvirtual buses</action>
        <action cmd="matlab:configset.internal.open(''{0}'',''CodeInterfacePackaging'')" type="suggestion">Change the setting of ''Code interface packaging'' (might impact referenced or referencing models)</action>
        <action cmd="matlab:coder.internal.launchCPPFunctionPrototypeControl(''{0}'',''listbox'')" type="suggestion">Change the setting of ''Function specification'' to ''Default step method''.</action>
    </actions>
    ]]></entry>

    <entry key="RTWCGFcnProtoCtlValidateError">Error while validating model function prototypes for ''{0}'' : {1}
      <![CDATA[<actions exclusiveFixIts="yes">
        <action cmd="matlab:coder.internal.launchCFunctionPrototypeControl(''{0}'',[],''listbox'')" type="suggestion">Fix the errors described above, or change the setting of ''Function specification'' to ''Default model initialize and step functions''</action>
      </actions>]]>
    </entry>
    <entry key="RTWCGArchSpecValidateError">Error while validating {2} for model ''{0}'' : a referenced model ''{1}'' has generated C-API interface and one of its signals connecting to a root inport of this model has set the test point attribute, but this configuration combination is not supported for the feature. Fix the error by avoiding the combination, or consider inserting a Signal Conversion at the root inport of the referenced model leading to the test pointed signal.</entry>
    <entry key="RTWCGInternalError">Error during code generation: {0}</entry>
    <entry key="RTWCGInvalidDTReasonUnknownInternal">Code cannot be generated for this model because block ''{0}'' is using the data type ''{1}'' For input signals, output signals, runtime parameters, and dwork states, unsupported data types usually cause errors earlier in the code generation process. This error occurred at a later stage. It is therefore likely that the unsupported data type is used by an local variable internal to a block</entry>
    <entry key="RTWCGInvalidDTSize">Code cannot be generated for this model because block ''{0}'' is using the data type ''{1}'' which requires {2,number,integer} bits, but the maximum supported by the block for code generation is {3,number,integer}</entry>
    <entry key="RTWCGInvalidDTSize2Internal">Code cannot be generated for this model because block ''{0}'' is using the data type ''{1}'' which requires {2,number,integer} bits, but the maximum supported for code generation is {3,number,integer}. For input signals, output signals, runtime parameters, and dwork states, unsupported data types usually cause errors earlier in the code generation process. This error occurred at a later stage. It is therefore likely that the unsupported data type is used by a local variable internal to the block.  The local variable may be holding the results of an intermediate calculation.  The data type and scaling selected to hold the intermediate calculation can depend on the model''s embedded hardware.  The embedded hardware may specify that the number of bits in a long is greater than 32.  The embedded hardware properties are specified by the Hardware Implementation parameters in the ''All Parameters'' tab of the Configuration Parameters dialog box.</entry>
    <entry key="RTWCGInvalidTargetLongSize">Code cannot be generated for this model because the Number of bits for a long is specified as ''{0,number,integer}'' bits in ''Configuration Parameters > All Parameters > Bits per long in test hardware''. The size of the target long int type must be at least 32 bits.</entry>
    <entry key="RTWCGModelReferenceStackSizeConflict">The estimated required stack size of {0,number,integer} bytes for the model ''{1}'' referenced by ''{2}'' is more than the maximum stack size of {3,number,integer} bytes, specified by the "Maximum stack size" parameter on the Optimization > Signals and Parameters pane of the Configuration Parameters dialog box for ''{4}''. To resolve this conflict, modify the "Maximum stack size parameter" for ''{5}'' by increasing the maximum stack size to a value greater than or equal to {6,number,integer} bytes or select ''{7}''. An alternative resolution is to specify the "Maximum stack size" parameter to  {8,number,integer} bytes (or less) on the Optimization > Signals and Parameters pane of the Configuration Parameters dialog box for model ''{9}''.</entry>
    <!-- RTWCGTargetStackSizeConflict TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsOpen.m -->
    <entry key="RTWCGTargetStackSizeConflict"><![CDATA[The model ''{0}'' has {1,number,integer} bytes specified as ''Maximum stack size (bytes)''. However the current system target requires a maximum stack size no larger then {2,number,integer} bytes.
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:configset.internal.open(''{0}'',''MaxStackSize'')" type="suggestion">Change ''Maximum stack size (bytes)'' to {3,number,integer} (or less) or the string ''{4}''</action>
        <action type="suggestion">Increase the maximum stack size value of the current system target (might impact referenced or referencing models)</action>
      </actions>]]>
    </entry>
    <entry key="RTWCGReusableCSCNotRenamable">Reusable buffer specification problem: the output ports of ''{0}'' is not reusable and re-nameable.</entry>
    <entry key="RTWCGReusableCSCNotInTheSameNonVirtualSS">Reusable buffer specification problem: the reusable CSC at the output port {0,number,integer} of ''{1}'' is not in the same non-virtual subsystem as the other reusable CSC.</entry>
    <entry key="RTWCGReusableCSCNotOnAContinuousPath">Reusable buffer specification problem: the reusable CSC at the output port {0,number,integer} of ''{1}'' is not on a continuous path with the other reusable CSC; or the compilation of the model introduced new blocks that make the Reusable CSC specification discontinuous.</entry>
    <entry key="RTWCGReusableCSCHasNoBuffer">Reusable buffer specification problem: the output port {0,number,integer} of ''{1}'' does not have a buffer.</entry>
    <entry key="RTWCGReusableCSCOutputCannotOverwriteInput">Reusable buffer specification problem: the output port {0,number,integer} of ''{1}'' cannot overwrite the output port {2,number,integer} of ''{3}''.</entry>
    <entry key="RTWCGReusableCSCDataTypesMismatch">Reusable buffer specification problem: the data type/shape of the signal connected to the output port {0,number,integer} of ''{1}'' does not match with the data type/shape of the signal connected to the output port {2,number,integer} of ''{3}''.</entry>
    <entry key="RTWCGReusableCSCDataTypesMismatch2">Reusable buffer specification problem: the data type/shape of the signal connected to the output port {0,number,integer} of ''{1}'' does not match with the data type/shape of the signal connected to the state {2,number,integer} of ''{3}''.</entry>
    <entry key="RTWCGReusableModelReferenceTarget">Reusable CSC specification problem: Reusable CSC specification is not allowed inside the referenced model block. Found one such instance in the output port {0,number,integer} of {1}.</entry>
    <entry key="RTWCGReusableCSCDifferentSampleTimesInMultiTaskingMode">Reusable buffer specification problem: the signal connected to the output port {0,number,integer} of ''{1}'' and the signal connected to the output port {2,number,integer} of ''{3}'' have different rates in the multi-tasking solver mode. This is not supported.</entry>
    <entry key="RTWCGReusableCSCDifferentSampleTimes">Reusable buffer specification problem: the signal connected to the output port {0,number,integer} of ''{1}'' and the signal connected to the output port {2,number,integer} of ''{3}'' have different rates. This is not supported.</entry>
    <entry key="RTWCGReusableCSCRootIOCannotReuseState">Reusable CSC specification problem: the state in the unit delay block ''{0}'' cannot reuse the root IO.</entry>
    <entry key="RTWCGReusableCSCStateWithUnsupportedFeatures">Reusable CSC specification problem: the state of the unit delay block ''{0}'' cannot use a reusable CSC when the model's target is not ERT, or Simulink buffer reuse option is off, or packing boolean data into bitfields is on, or SLCI is on, or State Reader/State Writer blocks are used.</entry>
    <entry key="RTWCGReusableCSCStateMustUseItsIO">Reusable CSC specification problem: the state in the unit delay block ''{0}'' is supported to merge with only its IO buffers.</entry>
    <entry key="RTWCGReusableCSCPairsCannotReuseStates">Reusable CSC specification problem: the output port {0,number,integer} of ''{1}'' reuses the other signal at model boundary, and cannot reuse the state in the unit delay block ''{2}''.</entry>
    <entry key="RTWCGReusableCSCStateCannotUseBackPropedSig">Reusable CSC specification problem: the state of the unit delay block ''{0}'' cannot use a reusable CSC propagated from a model.</entry>
    <entry key="RTWCGReusableCSCAtMultipleInputs">Reusable CSC specification problem: the same specification is found at multiple inputs: ''{0}'' and ''{1}''. This is not allowed.</entry>
    <entry key="RTWCGReusableCSCAtMultipleOutputs">Reusable CSC specification problem: the same specification is found at multiple outputs: the output port {0,number,integer} of ''{1}'' and the output port {2,number,integer} of ''{3}''. This is not allowed.</entry>
    <entry key="RTWCGReusableCSCAtMultipleOutputsOfABlock">Reusable CSC specification problem: the same specification is found at multiple outputs: the output port {0,number,integer} of ''{1}'' and the output port {2,number,integer} of ''{3}''. This is not allowed.</entry>
    <entry key="RTWCGReusableCSCAtMultipleInputsOfABlock">Reusable CSC specification problem: the same specification is found at multiple inputs: the output port {0,number,integer} of ''{1}'' and the output port {2,number,integer} of ''{3}''. This is not allowed.</entry>
    <entry key="RTWCGReusableCSCSignalsNotAtModelBoundary">Reusable CSC specification problem: the duplicate specification is supported only for root IO signals or at block boundary; if one reusable CSC is at root IO ports, the other one must also be at root IO ports. In this case, either of the signal connected to the output port {0,number,integer} of ''{1}'' or the signal connected to the output port {2,number,integer} of ''{3}'' or both do not satisfy the specification.</entry>    
    <entry key="RTWCGReusableCSCSignalsCannotBeInClassicMode">Reusable CSC specification problem: the duplicate specification is supported only for model IO signals in simplified initialization mode. In this case, either of the signal connected to the output port {0,number,integer} of ''{1}'' or the signal connected to the output port {2,number,integer} of ''{3}'' or both are at model IO ports.</entry>    
    <entry key="RTWCGReusableFPCMdlRefCannotRequireGlobalAccess">FPC IO reuse specification problem: the IO port ''{0}'' cannot require global access in a model reference build.</entry>    
    <entry key="RTWCGReusableCSCSignalsLiferangeOverlapped">Reusable CSC specification problem: the signal connected to the output port {0,number,integer} of ''{1}'' and the signal connected to the output port {2,number,integer} of ''{3}'' are not reusable, because their life ranges could be overlapped.</entry>    
    <entry key="RTWCGReusableCSCSignalsMustBeAtTheSameModel">Reusable CSC specification problem: the duplicate specification is supported only for model IO signals of the same model. In this case, the signal connected to the output port {0,number,integer} of ''{1}'' and the signal connected to the output port {2,number,integer} of ''{3}'' are not defined in the same model.</entry>    
    <entry key="RTWCGReusableCSCSignalAtModelBoundMustHaveSingleUse">Reusable CSC specification problem: the signal connected to the output port {0,number,integer} of ''{1}'' cannot be connected to multiple blocks.</entry>    
    <entry key="RTWCGReusableCSCSignalsCannotBeInsideModelBlock">Reusable CSC specification problem: reusable CSC cannot be used inside a model reference block. In this case, either of the signal connected to the output port {0,number,integer} of ''{1}'' or the signal connected to the output port {2,number,integer} of ''{3}'' or both are in a model reference block.</entry>    
    <entry key="RTWCGReusableCSCCannotBeUsedByMultipleStates">Reusable CSC specification problem: multiple unit delay states cannot use the same reusable CSC. In this case, both ''{0}'' and ''{1}'' use the same reusable CSC.</entry>    
    <entry key="RTWCGReusableCSCInterceptingOutputHiddenBuffer1">Reusable CSC specification problem: there is an internal buffer at the output port {0,number,integer} of ''{1}''.</entry>
    <entry key="RTWCGReusableCSCInterceptingOutputHiddenBuffer">Reusable CSC specification problem: the duplicate specification is supported only for model or root IO signals. In this case, either of the signal connected to the input port ''{0}'' or the signal connected to the output port {1,number,integer} of ''{2}'' or both are not in model or root IO ports. Reason: There is an internal buffer at the output port {3,number,integer} of ''{4}''.</entry>
    <entry key="RTWCGReusableCSCInterceptingInputHiddenBuffer">Reusable CSC specification problem: the duplicate specification is supported only for model or root IO signals. In this case, either of the signal connected to the input port ''{0}'' or the signal connected to the output port {1,number,integer} of ''{2}'' or both are not in model or root IO ports. Reason: There is an internal buffer at the input port ''{3}''.</entry>
    <entry key="RTWCGReusableCSCInputMustBeDirectFeedThrough">Reusable CSC specification problem: the input port {0,number,integer} of ''{1}'' must be direct feed through.</entry>
    <entry key="RTWCGReusableCSCOutputCannotBeInDifferentRate">Reusable buffer specification problem: the output port {0,number,integer} of ''{1}'' is running at a sample rate slower than the model's base rate, which might leave the outport conditionally assigned. Consider not to reuse the outport.</entry>
    <entry key="RTWCGReusableCSCOutputCannotBeConditional">Reusable buffer specification problem: the output port {0,number,integer} of ''{1}'' cannot be conditional.</entry>
    <entry key="RTWCGReusableCSCMultipleSource">Reusable buffer specification problem: the output port ''{0}'' is not driven by a single data source.</entry>
    <entry key="RTWCGReusableCSCInterceptingHiddenBufferAtModelBound">Reusable CSC specification problem: the duplicate specification is supported only for root IO signals or at block boundary. Reason: There is an internal buffer at the output port {0,number,integer} of ''{1}'' or at the output port {2,number,integer} of ''{3}''.</entry>
    <entry key="RTWCGReusableCSCEmbeddedSigObj">An embedded signal object does not support Reusable specification. Found one such instance in the output port {0,number,integer} of {1}.</entry>
    <entry key="RTWCGReusableCSCSimulinkFcnUnsupported">Reusable CSC specification is not allowed inside a Simulink Function block. Found one such instance in the port {0,number,integer} of {1}.</entry>
    <entry key="RTWCGReusableCSCDimVarUnsupportedAtBO">Reusable CSC specification is not allowed at blocks with dimension variants. Found one such instance in the port {0,number,integer} of {1}.</entry>
    <entry key="RTWCGReusableCSCDimVarUnsupportedAtDW">Reusable CSC specification is not allowed at blocks with dimension variants. Found one such instance in the state of {0}.</entry>
    <entry key="RTWCGReusableCSCVarDimsUnsupported">Reusable CSC specification problem in {0}: Reusable CSC specification cannot be honored in the presence of signals of variable dimension types anywhere in the model.</entry>
    <entry key="RTWCGReusableCSCExportFcnUnsupported">Reusable CSC specification problem in {0}: Reusable CSC specification cannot be honored in models having export functions.</entry>
    <entry key="RTWCGReusableCSCFcnProtoControlUnsupported">Reusable CSC specification problem in {0}: Reusable CSC specification cannot be honored when function prototyping control is enabled.</entry>
    <entry key="RTWCGReusableCSCEncapCPPIOUnsupported">Reusable CSC specification problem in {0}: Reusable CSC specification cannot be honored when generating a C++ class interface.</entry>
    <entry key="RTWCGReusableCSCMoreThanOnePair">Reusable CSC specification problem in {0}: Reusable CSC specification allows only one pair of input and output signals.</entry>    
    <entry key="RTWCGReusableFPCSwitchedNonreusedToReused">Converting ''Nonreusable function'' packaging setting of subsystem ''{0}'' to ''Reusable function'' because the subsystem accesses reusable IO arguments by FPC</entry>
    <entry key="RTWCGReusableFPCCannotSwitchNonreusedToReusedO">Function prototyping control IO reuse problem: the setting to subsystems that access the output port {0,number,integer} of ''{1}'' cannot be ''Nonreusable function''</entry>
    <entry key="RTWCGReusableFPCCannotSwitchNonreusedToReusedI">Function prototyping control IO reuse problem: the setting to subsystems that access the input port {0,number,integer} of ''{1}'' cannot be ''Nonreusable function''</entry>
    <entry key="RTWCGReusableMatlabIOCannotReusePartialI">Matlab function block in-place optimization problem: the input port {0,number,integer} of ''{1}'' does not have a buffer with a full memory region.</entry>
    <entry key="RTWCGReusableMatlabIOCannotReuseNoBufferI">Matlab function block in-place optimization problem: the input port {0,number,integer} of ''{1}'' has no buffer.</entry>
    <entry key="RTWCGReusableMatlabIOCannotReuseNoBufferO">Matlab function block in-place optimization problem: the output port {0,number,integer} of ''{1}'' has no buffer.</entry>
   <entry key="RTWCGConcurrentAccessOnlyDSM">Invalid attribute on Signal {0}.Concurrent Access Attribute is valid for only Signals on Data Store Memory.</entry>
    <entry key="RTWDataTypeNameReservedIdConflict">Unable to generate code using user-defined data type ''{0}'' because it conflicts with a {1} language reserved identifier</entry>
    <entry key="RTWEmptyNamingRule">The naming rule ''{0}'' specified for the ''{1}'', results in an empty string. Specify a different naming rule or ensure that the naming rule contains $M or $N. </entry>
    <entry key="RTWExternNameClash">Potential conflicting usages of identifier ''{0}'': {1}</entry>
    <entry key="RTWExternNameClash2" note="stringDatatypeUpdate">Potential usage conflicts for identifier ''{0}''.  This might occur when multiple referenced models have similar model names and similar naming rules.  You can resolve this conflict by: increase the maximum identifier length parameter on the Symbols pane of the Configuration Parameter dialog, add different literal character vectors in identifier naming rules for each referenced model, or use dis-similar names for each referenced model</entry>
    <entry key="RTWGenBadParamValue">Invalid value specified for rtwgen parameter ''{0}''</entry>
    <entry key="RTWGenBuildAdvisorWarning">Code generation advisor detects potential issues with your model.  Address issues in advisor window.  Or, turn off the advisor by selecting "Off" for "Check model before code generation" on the Code Generation pane of the Configuration Parameters dialog</entry>
    <entry key="RTWGenDupParam">Duplicate rtwgen parameter ''{0}'' specified</entry>
    <entry key="RTWGenExportedIdClash1">Attempt to export two different function-calls using the same name ''{0}''</entry>
    <entry key="RTWGenExportedIdClash2">The exported function name ''{0}'' clashes with the name of the system for which function-calls are exported</entry>
    <entry key="RTWGenExportedIdClash3">The exported function name ''{0}'' clashes with the Function Name for subsystem ''{1}''</entry>
    <entry key="RTWGenNoInliningSubsysOfSeparateData">The exported function name ''{0}'' clashes with the Function Name for subsystem ''{1}''. To avoid this name conflict, either uncheck ''Function with separate data'' on the subsystem parameters dialog or rename one of the functions.</entry>
    <entry key="RTWGenNoInliningSubsysOfReusableFunction">The exported function name ''{0}'' clashes with the Function Name for subsystem ''{1}''. To avoid this name conflict, either select ''Function'' for ''Function packaging'' on the subsystem parameters dialog or rename one of the functions.</entry>
    <entry key="RTWGenMdlInputDataSpec">External input data for the root inports of model ''{0}'' has been specified. This is not automatically embedded in the generated code. Your target must create a specific run-time interface for the generated code to feed non-zero signals into the root inports</entry>
    <entry key="RTWGenSyntaxErr">Usage: rtwgen(''BlockDiagram'')</entry>
    <entry key="RTWGenUnknownParam">Unknown rtwgen parameter ''{0}'' specified</entry>
    <entry key="RTWIllegalUseOfReservedId">Cannot use identifier ''{0}'' as a "{1}" because it is a programming language reserved identifier</entry>
    <entry key="RTWReservedIdentifier">The identifier ''{0}'' has already been reserved</entry>
    <entry key="RTWIdentifierServiceCodeGenNotStarted">Cannot request Identifier as Code Generation Context is not available</entry>
    <entry key="RTWIdentifierServiceCodeGenStarted">Cannot reserve Identifier as Code Generation has started. Use requestIdentifier to request for an identifier during Code Generation</entry>
    <entry key="RTWInvalidExportFunctionsCall">The TLC option ''ExportFunctionsMode'' is not supported for generating code from a model. The option applies only to generating code from a subsystem</entry>
    <entry key="RTWNameUnableToLocateRootBlock">Unable to locate ''{0}'' in root window of model {1}</entry>
    <entry key="RTWNameUnableToLocateSubsystemBlock">Unable to locate ''{0}'' in subsystem ''{1}'' (S{2,number,integer}) of model {3}</entry>
    <entry key="RTWNonReuseWideGroundCanInputGrnd">Cannot generate a reusable function for Subsystem block ''{0}''. This subsystem is fed by the Ground block ''{1}'' that has a nonscalar output signal.  Either replace the Ground block with a Constant block having all zero values or modify the ''Function packaging'' setting of the Subsystem block to Inline or Function</entry>
    <entry key="RTWNonReuseWideGroundCanInputGrndCPP"><![CDATA[Cannot generate a reusable function for Subsystem block ''{0}'', which is required when generating a C++ class interface. This subsystem is fed by the Ground block ''{1}'' that has a nonscalar output signal.  Either replace the Ground block with a Constant block having all zero values or set <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to a value other than ''C++ class'']]></entry>
    <entry key="RTWNonReuseWideGroundCanInputUnconn">Cannot generate a reusable function for Subsystem block ''{0}''. Some of the input port elements of this Subsystem block are not connected, either directly or indirectly, to actual (i.e., nonvirtual) signals. Either connect the unconnected inputs of the Subsystem block to Constant blocks having zero values or modify the ''Function packaging'' setting of the Subsystem block to Inline or Function</entry>
    <entry key="RTWNonReuseWideGroundCanInputUnconnCPP"><![CDATA[Cannot generate a reusable function for Subsystem block ''{0}'', which is required when generating a C++ class interface. Some of the input port elements of this Subsystem block are not connected, either directly or indirectly, to actual (i.e., nonvirtual) signals. Either connect the unconnected inputs of the Subsystem block to Constant blocks having zero values or set <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to a value other than ''C++ class'']]></entry>
    <!-- RTWNotConfigForExtMode TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsHotLinks.m -->
    <entry key="RTWNotConfigForExtMode"><![CDATA[Current code generation target for model ''{0}'' is either not configured for or does not support external mode.  Select <sldiag objui="configset" objparam="ExtMode">External mode</sldiag> to enable external mode for targets that support it]]></entry>
    <entry key="RTTNotConfigForExtMode">The model is not configured for External mode. In the model''s Tools menu, select Run on Target Hardware > Options... In the Run on Target Hardware pane that opens, select the ''Enable External mode'' checkbox.</entry>
    <entry key="RTTNotConfigForExtModeNotPreparedToRun">The model is not configured for External mode. In the model''s Tools menu, select Run on Target Hardware > Prepare to Run. Next, select Run on Target Hardware > Options... In the Run on Target Hardware pane that opens, select the ''Enable External mode'' checkbox.</entry>
    <entry key="RTWSFcnComplexTunableParameterNotSupported">S-function parameter ''{0}'' can not be made tunable because its value is complex</entry>
    <entry key="RTWSFcnNonBuiltInTunableParameterNotSupported">S-function parameter ''{0}'' can not be made tunable because its data type is not a built-in type</entry>
    <entry key="RTWSFcnTransformedTunableParameterNotSupported">S-function parameter ''{0}'' can not be made tunable because its value or data type has been transformed relative to the corresponding external parameter</entry>
    <entry key="RTWSimRunning">Cannot generate code for ''{0}'' because the model is currently simulating.</entry>
    <entry key="RTWStateFlowBitSetsWithStructAlignment">Bitsets may not be used when using a target that specifies an explicit structure alignment.  Turn off the options ''Use bitsets for storing state configuration'' and ''Use bitsets for storing boolean data'' on the Optimization page of the Configuration Parameters Dialog</entry>
    <entry key="RTWDataTypeElementNameReservedIdConflict">Unable to generate code using user-defined data type ''{0}'' because it has an element named ''{1}'' which conflicts with a {2} language reserved identifier</entry>
    <entry key="RateTransBlkNotAllowedAtMergeBlk">Rate transition block is not allowed at input port {0,number,integer} of Merge block ''{1}''. Consider putting a Signal Conversion at the input port of the Merge block before inserting the Rate Transition block.</entry>
    <entry key="RTWCGInvalidCSCDataTypeForOutput">The output port {0,number,integer} of ''{1}'' has a custom storage class as well as a multi-word data type. This combination is not supported. Try using a built-in storage class, such as ''ExportedGlobal'', ''ImportedExtern'', or ''ImportedExternPointer'' instead.</entry>
    <entry key="RTWCGInvalidCSCDataTypeForState">The state in ''{0}'' has a custom storage class as well as a multi-word data type. This combination is not supported. Try using a built-in storage class, such as ''ExportedGlobal'', ''ImportedExtern'', or ''ImportedExternPointer'' instead.</entry>
    <entry key="RTWCGInvalidCSCDataTypeForParam">A parameter in ''{0}'' has a custom storage class as well as a multi-word data type. This combination is not supported. Try using a built-in storage class, such as ''ExportedGlobal'', ''ImportedExtern'', or ''ImportedExternPointer'' instead.</entry>
    <entry key="RapidAcceleratorCantUploadDataNoDWork">Rapid Accelerator mode cannot update ''{0}'' because it has no uploadable dworks</entry>
    <entry key="RapidAcceleratorCantUploadDataNoInputPorts">Rapid Accelerator mode cannot update ''{0}'' because it has no input ports</entry>
    <entry key="RapidAcceleratorCantUploadDataNoConnectedSignals">Rapid Accelerator mode cannot update ''{0}'' because it has no connected signals</entry>
    <entry key="RapidAcceleratorCantUploadDataPortBasedSampleTime">Rapid Accelerator mode cannot update ''{0}'' because it has port based sample time</entry>
    <entry key="RapidAcceleratorCantUploadDataConstantSampleTime">Rapid Accelerator mode cannot update ''{0}'' because it has constant sample time</entry>
    <entry key="RapidAcceleratorCantUploadDataMultipleRates">Rapid Accelerator mode cannot update ''{0}'' because it is not single rate.</entry>
    <entry key="RapidAcceleratorCantUploadDataRootInport">Rapid Accelerator mode cannot update ''{0}'' because one of its driving blocks is a top level inport</entry>
    <entry key="RapidAcceleratorCantUploadDataCSC">Rapid Accelerator mode cannot update ''{0}'' because one of its source signals uses a custom storage class</entry>
    <entry key="RapidAcceleratorCantUploadDataNoConvertFunc">Rapid Accelerator mode cannot update ''{0}'' because one of its source signals uses a data type not supported by Rapid Accelerator mode</entry>
    <entry key="RapidAcceleratorCantUploadDataVarDims">Rapid Accelerator mode cannot update ''{0}'' because one of its source signals is of variable-size</entry>
    <entry key="RateTransBlkNotAllowedInTrigSubsys">''{0}'' is a rate transition block. A rate transition block is not allowed inside the {1} subsystem ''{2}'' unless its input or output port sample time is asynchronous sample time. Consider placing the rate transition block outside the {3} subsystem.</entry>
    <entry key="RemoveNonRemovableItem">Item ''{0}'' is not removable.</entry>
    <entry key="RemovedSysDoesNotHaveThis">Subsystem ''{0}'' does not have a ''{1}'' because it is a SimViewingDevice and does not generate code</entry>
    <entry key="ResetSignalMustBeScalar">Cannot set dimensions of the reset input port of ''{0}''. Reset signal must be a scalar signal.</entry>
    <entry key="ResettableSubsystemMustBeSingleRate">All blocks within subsystem ''{0}'', including the reset port ''{1}'', must have the same sample time.</entry>
    <entry key="ReturnWkspOutputNotSupported">Returning workspace outputs is supported with only single return argument</entry>
    <entry key="ReturnWkspOutputOptNotSupported">Setting ReturnWorkspaceOutputs option to ''off'' in this form of syntax is ambiguous. Either specify the option as ''on'' or do not specify the option</entry>
    <entry key="RightClickBuildFailInsertRateTransBlkInput">Subsystem right click build failed to insert a Rate Transition block at input port {0,number,integer} of block ({1}). Investigate this issue in the original model, by verifying \n - The original model uses a fixed step solver; \n - The Sample Time parameters of the Inport and Outport blocks in the subsystem are all set to -1; \n - The subsystem input signals do not have a constant sample time.</entry>
    <entry key="RightClickBuildFailInsertRateTransBlkOutput">Subsystem right click build failed to insert a Rate Transition block at output port {0,number,integer} of block ({1}). Investigate this issue in the original model, by verifying \n - The original model uses a fixed step solver; \n - The Sample Time parameters of the Inport and Outport blocks in the subsystem are all set to -1; \n - The subsystem input signals do not have a constant sample time.</entry>
    <entry key="InsertBlkInpWithEnumTypeNotPermitted">
      Simulink cannot automatically insert a Rate Transition block.\nManually insert a Rate Transition block at input port {0,number,integer} of block ''{1}'',\nand set ''Initial Conditions'' to a valid enumeration value.
    </entry>
    <entry key="InsertBlkOupWithEnumTypeNotPermitted">
      Simulink cannot automatically insert a Rate Transition block.\nManually insert a Rate Transition block at output port {0,number,integer} of block ''{1}'',\nand set ''Initial Conditions'' to a valid enumeration value.
    </entry>
    <entry key="InsertBlkAtVirtualBlkInputError">Simulink cannot automatically insert a Rate Transition block downstream of a virtual block.\nManually insert a Rate Transition block at the input port of the virtual block upstream to ''{0}''.</entry>
    <entry key="RootInportCannotCodeGenForVarDims">The root-level input port ''{0}'' is carrying a variable-size signal.  This is supported only for the following targets:\n\t
            - Model reference\n\t
            - Accelerator\n\t
            - GRT (except GRT malloc)\n\t
            - ERT\n\t
            - S-function\n
        However, even for the above targets, variable-size input ports are not supported when:\n\t
            - 'Code interface packaging' is set to either 'C++ class' or 'Reusable function' on the Interface pane of the Configuration Parameters dialog box\n</entry>
    <entry key="RunTimeChangeDimsFixedDimsMode">Simulink cannot modify the dimensions of output port {0,number,integer} of ''{1}'' because this port has a fixed-size signal.</entry>
    <entry key="RunTimeChangeDimsFixedDimsNVBus">Simulink cannot modify the dimensions of output port {0,number,integer} of ''{1}'' because this port has a nonvirtual bus with only fixed-size elements.</entry>
    <entry key="RunTimeChangeDimsPassThruOutput">Simulink cannot modify the dimensions of output port {0,number,integer} of ''{1}''. Modifying the dimensions is disallowed because the block indicates the dimensions of this output port must match the dimensions of one of its input ports. (In the case of an S-function, ''ssSetInputDimsSameAsOutputDims'' has been used).</entry>
    <entry key="RunTimeChangeNumRowsFrameOutputSignal">Simulink cannot modify the first dimension of output port {0,number,integer} of ''{1}'' because the sampling mode of this port is frame-based. Consider changing the sampling mode of this port to be sample-based.</entry>
    <entry key="RunTimeInvalidDims">Simulink cannot set the current dimensions for output port {0,number,integer} of ''{1}''. The specified dimension ({2,number,integer}) must be in the range of 0 to {3,number,integer}.</entry>
    <entry key="RunTimeInvalidDimsNVBus">Simulink cannot set the current dimensions for output port {0,number,integer} of ''{1}''. The specified dimension ({2,number,integer}) for bus element ''{3}'' must be in the range of 0 to {4,number,integer}.</entry>
    <entry key="RunTimeExceedNumDims">Simulink cannot set the current dimensions for output port {0,number,integer} of ''{1}''. The specified dimensions index ({2,number,integer}) must be in the range of 0 to {3,number,integer} because the number of dimensions of the output port is {4,number,integer}.</entry>
    <entry key="RunTimeExceedNumDimsNVBus">Simulink cannot set the current dimensions for output port {0,number,integer} of ''{1}''. The specified dimensions index ({2,number,integer}) must be in the range of 0 to {3,number,integer} because the total number of dimensions of the variable-size elements at the output port is {4,number,integer}.</entry>
    <entry key="RuntimeMethodCalledInUnallowedPhase">The ''{0}'' method of ''{1}'' can be called only when simulation is running</entry>
    <entry key="SFSfcnFunctionToReusableFunctionCPP">Converting ''Function packaging'' setting of the Stateflow chart ''{0}'' from ''Nonreusable function'' to ''Reusable function'', because the chart contains subfunctions, which require code generation to use ''Reusable function'' as the ''Function packaging'' setting for the chart when generating a C++ class interface.</entry>
    <entry key="SFSfcnInlinedToFunction">Converting ''Function packaging'' setting of the Stateflow chart ''{0}'' from ''inlined'' to ''{1}'', because the chart contains subfunctions and can''t be entirely inlined</entry>
    <entry key="SFSfcnReusableToFunction">Converting ''Function packaging'' setting of the Stateflow chart ''{0}'' from ''Reusable function'' to ''function'', because the chart contains exported graphical functions or machine parented events and can''t generated as a reusable function</entry>
    <entry key="SFcnAPICannotChangeTXUDuringSim">The simulation time, states and model inputs can not be changed when programmatically calling the model during simulation</entry>
    <entry key="SFcnAPIInvalidExtInputs">Model ''{0}'' contains non-double or complex signals. Cannot set non-double or complex external inputs. Use Data Type Conversions</entry>
    <entry key="SFcnAPIInvalidExtInputs1">The specified number of model inputs ({0,number,integer}) does not match actual number ({1,number,integer}) of inputs</entry>
    <entry key="SFcnAPIInvalidInputs">The simulation inputs must be specified as a vector of doubles</entry>
    <entry key="SFcnAPIInvalidExtOutputs">Model ''{0}'' contains non-double or complex signals. Cannot save external outputs. Use Data Type Conversions</entry>
    <entry key="SFcnAPIInvalidSyntax">Invalid syntax in programmatically accessing the model ''{0}''</entry>
    <entry key="SFcnAPIInvalidTime1">The simulation time must be a real, double, scalar value</entry>
    <entry key="SFcnAPIInvalidTime2">The specified value of simulation time ({0}) is invalid, it must be a double scalar between the simulation start ({1}) and stop ({2}) times</entry>
    <entry key="SFcnAPIInvalidStates">The states of the simulation must be specified as a vector of real doubles or a structure</entry>
    <entry key="SFcnAPIInvalidTs">The sample time value must be either empty or a double non-negative scalar</entry>
    <entry key="SFcnAPITerminationDeferred">Termination of ''{0}'' deferred</entry>
    <entry key="SFcnCannotChangeSampleTime">S-function ''{0}'' method {1} cannot change the sample time of ports once they have been set.</entry>
    <entry key="SFcnDidNotSetSampleTime">S-function should set the sample time of {0} port {1,number,integer} of ''{2}'' to the value specified by the sample and offset time arguments of method {3}.</entry>
    <entry key="SFcnDidnotSetPortFrameData">S-function should set the frame data of {0} port {1,number,integer} of ''{2}'' to the frame data specified by the input argument of method {3}</entry>
    <entry key="SFcnDoesNotExist">Error in S-function ''{0}'': S-Function ''{1}'' does not exist</entry>
    <entry key="SFcnInvConstantTs">Invalid sample time assigned in S-function {0} in ''{1}''. To use constant (inf) sample time it must specify the option SS_OPTION_ALLOW_CONSTANT_PORT_SAMPLE_TIME.</entry>
    <entry key="SFcnInvInputPortTsAssigned">Invalid sample time assigned to input port {0,number,integer} of S-function {1} in ''{2}''. Sample times assigned to ports must be one of the registered sample times.</entry>
    <entry key="SFcnInvName">Error in S-function ''{0}'': ''{1}'' is an invalid model name specification</entry>
    <entry key="SFcnInvNumSampleTimes">Invalid number of sample times return by S-function ''{0}'' in ''{1}''.</entry>
    <entry key="SFcnInvOutputPortTsAssigned">Invalid sample time assigned to output port {0,number,integer} of S-function {1} in ''{2}''. Sample times assigned to ports must be one of the registered sample times.</entry>
    <entry key="SFcnMissingSetInputFrameData">S-function ''{0}'' in ''{1}'' does not have a mdlSetInputPortFrameData routine. When an S-function with multiple output ports has dynamic frame data setting for any of its ports, it is necessary to define a mdlSetInputPortFrameData routine</entry>
    <entry key="SFcnMissingSetInputPortSampleTime">S-function ''{0}'' in ''{1}'' uses PORT_BASED_SAMPLE_TIMES, but doesn''t have a mdlSetInputPortSampleTime routine.</entry>
    <entry key="SFcnMissingSetOutputPortSampleTime">S-function ''{0}'' in ''{1}''uses PORT_BASED_SAMPLE_TIMES, but doesn''t have a mdlSetOutputPortSampleTime routine.</entry>
    <entry key="SFcnNeedsContTs">S-function {0} in ''{1}'' must have a continuous sample time since it has continuous states.</entry>
    <entry key="SFcnNoUnorientedFrameData">S-function ''{0}'' in ''{1}'' sets number of dimensions to be one for its {2} port {3,number,integer} even though that port is frame-based. Note that if a port is frame-based, then the number of dimensions should be at least 2</entry>
    <entry key="SFcnUnableToAcqFcnHdl">Error in S-function ''{0}'': Unable to acquire handle to MATLAB function ''{1}''</entry>
    <entry key="SFcnUseDisallowConstTs">''{0}'' has become invariant (i.e., it will execute only once at the start of simulation). However, it has states. Consider preventing it from becoming invariant by using ssSetOptions(S, SS_OPTION_DISALLOW_CONSTANT_SAMPLE_TIME) in its mdlInitializeSizes method</entry>
    <entry key="SIDCannotAllowCopiedSID">Copied objects cannot have same Simulink ID because high-watermark is not zero.</entry>
    <entry key="SIDCannotSetHighWatermark">Cannot change high-watermark. New high-watermark must be greater than current high-watermark.</entry>
    <entry key="SIDNoSIDSpace">No Simulink ID space exists.</entry>
    <entry key="SLDV_PrecisionLost">    Precision lost when converting values to the signal type in ''{0}''</entry>
    <entry key="SLDV_ProofViolation">    Proof property violated in {0} at time {1}</entry>
    <entry key="SLType_MI_NoPublicCtor">No public constructor for class ''{0}''</entry>
    <entry key="SLType_MI_OneIndexed">Index value must be greater or equal to one</entry>
    <entry key="SLType_ModifyLockedType">Cannot modify locked type object</entry>
    <entry key="SampHitInvalidTid">The sample time index passed into the method ''{0}'' of ''{1}'' must be in the range from 0 to {2,number,integer}</entry>
    <entry key="SampHitInvalidTidForSingleRate">The sample time index passed into the method ''{0}'' of ''{1}'' must be 0 because this model has only one sample time</entry>   
    <entry key="SaveWithDisabledLinks_Error">Block diagram ''{0}'' contains a disabled library link and will not be saved. To disable this restriction, type set_param(''{1}'',''SaveWithDisabledLinksMsg'',''none'') and save again.  To find the disabled link use the Model Advisor.</entry>
    <entry key="SaveWithDisabledLinks_Warning">Block diagram ''{0}'' contains disabled library links.  Use Model Advisor to find the disabled links in non-library models.  The diagram has been saved but may not contain what you intended.</entry>
    <entry key="SaveWithParameterizedLinks_Error">Block diagram ''{0}'' contains a parameterized library link and will not be saved. To disable this restriction, type set_param(''{1}'',''SaveWithParameterizedLinksMsg'',''none'') and save again.  To find the parameterized link use the Model Advisor.</entry>
    <entry key="SaveWithParameterizedLinks_Warning">Block diagram ''{0}'' contains one or more parameterized library links.  To find the parameterized links use the Model Advisor.  The diagram has been saved but may not behave as you intended.</entry>
    <entry key="SetCurrentOutputDimsRunTime">Simulink can only call the method ''ssSetCurrentOutputPortDimensions'' for S-function ''{0}'' in {1} during block-diagram execution.</entry>
    <entry key="SetDirty_MdlFileChangedOnDisk">Block diagram ''{0}'' is being edited but the file has changed on disk since it was loaded.  You should close and reload the block diagram.</entry>
    <entry key="SetDstateNotPerm">The number of discrete states is read-only. Discrete states can be registered by marking appropriate Dworks as states through the ''UsedAsDiscState'' flag</entry>
    <entry key="SetNumCStatesEvalOrPostPropTaskOnly">The number of continuous states can be set only in the Initialize and PostPropagationSetup methods of ''{0}''</entry>
    <entry key="SetNumDataStoresEvalOnly">The number of DataStores can be set only in the CheckPrms method of ''{0}''</entry>
    <entry key="SetNumDworksPostPropOnly">The number of Dworks can be set only in the PostPropagationSetup method of ''{0}''</entry>
    <entry key="SetNumInputPortsInitOnly">The number of input ports can be set only in the Initialize method of ''{0}''</entry>
    <entry key="SetNumOutputPortsInitOnly">The number of output ports can be set only in the Initialize method of ''{0}''</entry>
    <entry key="SetSampleTimeEvalOnly">Sample times can be set only in the Initialize method of ''{0}''</entry>
    <entry key="SettingAliasedThroughDatatypeIdNotPermitted">The aliasedthrough datatype ids for ''{0}'' are read-only and cannot be set</entry>
    <entry key="SettingAliasedThroughDatatypeNameNotPermitted">The aliasedthrough datatype names for ''{0}'' are read-only and cannot be set</entry>
    <entry key="SettingBlockHandleNotPermitted">The block handle for ''{0}'' is read-only and cannot be set</entry>
    <entry key="SettingBlockPortNameNotPermitted">Port name for block ''{0}'' is read-only and cannot be set</entry>
    <entry key="SettingDatatypeNameNotPermitted">The datatype names for ''{0}'' are read-only and cannot be set</entry>
    <entry key="SettingNotPermitted">Property ''{0}'' is read-only and cannot be set</entry>
    <entry key="SettingNumDlgPrmsNotPermitted">The number of dialog parameters for ''{0}'' is read-only and cannot be set</entry>
    <entry key="SettingNumRuntimePrmsNotPermitted">The number of run-time parameters for ''{0}'' is read-only and cannot be set</entry>
    <entry key="SettingObjectTypeEnumNotPermitted">The object type enumeration for ''{0}'' is read-only and cannot be set</entry>
    <entry key="SfcnCannotUseDefaultDimsMethods_s">S-function ''{0}'' does not have mdlSetInputPortDimensionInfo (mdlSetInputPortWidth) and mdlSetOutputPortDimensionInfo (mdlSetOutputPortWidth) methods.  Since it does not follow the default rules, it cannot use Simulink default methods to set its port widths or dimensions.  Please update the S-function by adding the above methods.  You can find more information about these methods in the ''Writing S-functions'' document.</entry>
    <entry key="SfcnHasBothReuseAndssWriteRTW">The S-function ''{0}'' has the option SS_OPTION_WORKS_WITH_CODE_REUSE set but it either uses ssWriteRTWParameters in its mdlRTW function or does not explicitly set parameter tunabilities using ssSetSFcnParamTunable. To be compatible with code reuse, the S-function needs to register its run time parameters. Please see the S-function documentation for information on how to do this</entry>
    <entry key="SfcnInvalidOutputAsMatrix">Error in mdlRTW of S-function ''{0}''. It is using obsolete macros for writing out parameters in 2D format to the .rtw file. In order to write out parameters in 2D, you should upgrade the S-function to register run-time parameters. See the run-time parameter demo in ''sfundemo'' for an example</entry>
    <entry key="SfcnJacobianConfigButNoMethod">S-Function ''{0}'' configured its Jacobian dimensions in the mdlSetWorkWidths function, but failed to implement the mdlJacobian method.</entry>
    <entry key="SfcnJacobianMethodButNoConfig">S-Function ''{0}'' implements the mdlJacobian method, but failed to configure its Jacobian dimensions in the mdlSetWorkWidths function</entry>
    <entry key="SfcnJacobianMethodButNoIrJc">S-Function ''{0}'' implements the mdlJacobian method, but failed to initialize its Jacobian structure (Ir, Jc) in the mdlStart function</entry>
    <entry key="SfcnMissingDefinedDimsDependRuleVarDims">The S-function ''{0}'' in ''{1}'' has declared ''ssSetSignalSizesComputeType'' to be SS_VARIABLE_SIZE_FROM_INPUT_SIZE. Consequently, you must use ''ssAddOutputDimsDependencyRule'' method to register the dimension dependency rules of output port {2,number,integer}.</entry>
    <entry key="SfcnMissingReqTLCforSetVarDims">The S-function ''{0}'' in ''{1}'' does not have a TLC file. A TLC file is required for this S-function because the S-function has registered output dimension dependency rules for the support of variable-size signals.</entry>
    <entry key="SfcnMustHaveMdlDimsFcn_ss">S-function ''{0}'' must have {1} function.</entry>
    <entry key="SfcnRedundantDimsDepRule">The S-function ''{0}'' in ''{1}'' has registered a redundant output dimension dependency rule for output port {2,number,integer}. The input index registered in rule {3,number,integer} is a subset or superset of an existing rule. For example, a rule that contains input index "0, 1" is redundant if another rule already contains the input index "0", "1" or "0, 1".</entry>
    <entry key="SfcnTsNotMatchGlbDSMTs">The block ''{0}'' has sample time {1}, yet it accesses the data store memory ''{2}'' whose corresponding Simulink.Signal object has conflicting sample time {3}.</entry>
    <entry key="SfsDomainMustBeFirst">Error in {0} Symbol Format String. If a domain macro ''$D'' is specified in a symbol format string, it must appear at the beginning of the symbol format string</entry>
    <entry key="SfsInvalid1stChar">Error in {0} Symbol Format String.  The first character specified must be a macro, alphabetic, or an underscore</entry>
    <entry key="SfsInvalidChar">Error in {0} Symbol Format String.  ''{1}'' is not recognized as a valid macro or C-language identifier</entry>
    <entry key="SfsInvalidMacro">Error in {0} Symbol Format String.  ''${1}'' is not recognized as a valid macro</entry>
    <entry key="SfsMangleMacroCount">Error in {0} Symbol Format String.  There must be at least one and only one mangle macro ($M)</entry>
    <entry key="SfsMangleRequired">Error computing symbol names in model ''{0}''. The maximum identifier length ''{1,number,integer}'' does not provide sufficient space to make symbol names unique using the symbol format string ''{2}''. Consider increasing the maximum identifier length</entry>
    <entry key="SfsMangleOrChange">Error computing symbol names in model ''{0}''. The following symbol ''{1}'' needs to be changed or mangled to make symbol names unique using the symbol format string ''{2}''. Consider changing one of the symbols or adding $M to the symbol format string</entry>   
    <entry key="SfsModelNameRequired">Insufficient space for computing symbol names in model ''{0}''. The maximum identifier length ''{1,number,integer}'' does not provide sufficient space to make symbol names unique using the symbol format string in ''{2}''. This is required when using model reference. Consider increasing the maximum identifier length. To eliminate this message enter the command\n \tset_param(''{3}'', ''ModelReferenceSymbolNameMessage'', ''none'')\n at the MATLAB prompt</entry>
    <entry key="SfsNoMethod">Error in {0} Symbol Format String. Macro for method name ''$F'' is not supported in this symbol format string</entry>
    <entry key="SfsNoRoot">Error in {0} Symbol Format String. Macro for model name ''$R'' is not supported in this symbol format string</entry>
    <entry key="SfsNoSysId">Error in {0} Symbol Format String. Macro for system hierarchy number ''$H'' is not supported in this symbol format string</entry>
    <entry key="SfsNoType">Error in {0} Symbol Format String. Macro for data type ''$A'' is not supported in this symbol format string</entry>
    <entry key="SfsTooLong">Incompatible settings among {0} Symbol Format String, Maximum Identifier Length, and Minimum Mangle Length.  Maximum identifier length must be larger than the sum of reserved length, i.e. {1,number,integer}, minimum mangle length, and the length of literal string in {2} symbol format string</entry>
    <entry key="SfsMangleTooLong">Mangle Length cannot exceed 15 characters</entry>
	<entry key="SignalBasedLinearizationBusNotSupported">When performing signal-based linearization, it is required that the model parameter ''InjectionData'' has a non-empty ''BusSignalName'' field for the IO points that are placed on bus signals.</entry>
    <entry key="SignalBasedLinearizationInvalidInjectionData">The model parameter ''InjectionData'' is invalid. It is required that the model parameter ''InjectionData'' is either empty, a double array of port handles or a MATLAB structure with fields ''PortHandle'', ''InputWKSVariable'', ''OutputWKSVariable'' and ''SignalInjectionData''. ''SignalInjectionData'' field is required to be another structure with fields ''IOType'', ''DataType'', ''Dimensions'', ''PortDataSize'', ''SampleTime'', ''BusSignalName'', ''SignalIndex''.</entry>
    <!-- SignalDataNotReusableSC TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsHotLinks.m -->
    <entry key="SignalDataNotReusableSC"><![CDATA[The storage class of the signal connected to output port {0,number,integer} of ''{1}'' is global, thus the generated code is not reusable.  Consider using storage class ''Auto'', setting <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function'', or setting <sldiag objui="configset" objparam="MultiInstanceErrorCode">Multi-instance code error diagnostic</sldiag> to ''None'' or ''Warning'']]></entry>
    <!-- SignalDimNotReusableSC TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsHotLinks.m -->
    <entry key="SignalDimNotReusableSC"><![CDATA[The model cannot generate reusable code. The storage class of the signal connected to the output port {0,number,integer} of ''{1}'' is global and has variable size dimension. Consider using either the storage class ''Auto'' for the signal or, setting <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function'' for the model.]]></entry>
    <entry key="RootOutportSignalDataNotReusableSC"><![CDATA[The storage class of root outport ''{0}'' is global, thus the generated code is not reusable.  Consider using storage class ''Auto'', setting the option ''Code interface packaging'' to ''Nonreusable function'', or setting the option ''Multi-instance code error diagnostic'' to ''None'' or ''Warning'' on the Configuration Parameters > Code Generation > Interface pane]]></entry>
    <entry key="InvalidSettingInLinearAnalysisIOBusElement">Cannot find the bus element for the given bus element in the linearization IO specification. </entry>
    <entry key="LinearAnalysisIOBusElementStrictBusMsg">Must enable Strict Bus Message to use Bus Element in linearization IO spec.</entry>
    <entry key="ArrayOfBusesLinearAnalysisIOBusElement">Cannot set linearization analysis points on elements of buses in an array.</entry>
    <entry key="LinearAnalysisIOBusElementOnNonBusSignal">Cannot set linearization analysis point using bus elements on a non-bus signal.</entry>
    <entry key="SignalBasedLinearizationIOOnABus">Cannot use a bus signal as an I/O point for signal based linearization.</entry>
    <entry key="SignalDimsLargerThan32">The number of dimensions specified in ''{0}'' exceeds the maximum (32).</entry>
    <entry key="SignalWidthLargerThanProductLongIntSize">The size of output port {0,number,integer} of ''{1}'' exceeds the embedded hardware long int size (''{2,number,integer}'' bits) or the test hardware long int size (''{3,number,integer}'' bits). This can cause overflows during execution.</entry>
    <entry key="SigobjConsistencyDWork">Signal attribute inconsistency found on the state of block ''{0}'', where the state attribute does not match the signal object ''{1}'' referenced by the state:\n   State attribute ({2}): {3}\n   Object setting ({4}): {5}</entry>
    <entry key="SigobjConsistencyDWork2">Signal attribute inconsistency found on the state of block ''{0}'', where the block attribute does not match the signal object ''{1}'' referenced by the state:\n   Block attribute ({2}): {3}\n   Object setting ({4}): {5}</entry>
    <entry key="SigobjConsistencyPort">Signal attribute inconsistency found on output port {0,number,integer} of block ''{1}'', where port setting does not match signal object ''{2}'' on output port {3,number,integer} of block ''{4}'':\n   Port setting ({5}): {6}\n   Object setting ({7}): {8}</entry>
    <entry key="SimCantChangeBDPropDuringExtModeSim">Cannot change the ''{0}'' parameter while the model ''{1}'' is running in External Mode</entry>
    <entry key="SimCantChangeBDPropDuringSim">Cannot change the ''{0}'' parameter while the model ''{1}'' is running</entry>
    <entry key="SimCantChangeBDPropInFastRestart">Cannot change the ''{0}'' parameter when the model ''{1}'' is initialized in Fast Restart</entry>
    <entry key="SimCantChangeInputGlobalAttrDuringSim">Cannot change the global attribute of input port {0,number,integer} of ''{1}'' while simulation is running</entry>
    <entry key="SimCantChangeInputReusableAttrDuringSim">Cannot change the reusable attribute of input port {0,number,integer} of ''{1}'' while simulation is running</entry>
    <entry key="SimCantChangeOutputReusableAttrDuringSim">Cannot change the reusable attribute of output port {0,number,integer} of ''{1}'' while simulation is running</entry>
    <entry key="SimCantChangeOutputTestPointAttrDuringSim">Cannot change the test point attribute of output port {0,number,integer} of ''{1}'' while simulation is running</entry>
    <entry key="SimCantChangeOverWritableAttrDuringSim">Cannot change the over writable attribute of input port {0,number,integer} of ''{1}'' while simulation is running</entry>
    <entry key="SimOptInitStepTooLarge">Initial step size ({0}) is larger than the maximum step size ({1})</entry>
    <entry key="SimOptInitStepTooSmall">Initial step size ({0}) is smaller than the minimum step size ({1})</entry>
    <entry key="SimOptMinEqualToMax">Maximum step size ({0}) is equal to the minimum step size ({1}).  For fixed step size problems, use a fixed step solver</entry>
    <entry key="SimOptMinLargerThanMax">Maximum step size ({0}) must be greater than minimum step size ({1})</entry>
    <entry key="SimOptMinLargerThanSample">Minimum step size ({0}) is larger than discrete sampling period ({1})</entry>
    <entry key="SimOptMinLargerThanTotalTime">Minimum step size ({0}) is larger than the total time interval ({1}). Decrease the minimum step size</entry>
    <entry key="SimOptMinStepIgnoredInVarStepDisc">Minimum step size ({0}) will be ignored because the model is using variable step discrete solver</entry>
    <entry key="SimOptRelTolTooSmall">Relative tolerance of {0} is too small, setting relative tolerance to {1}</entry>   
    <entry key="SimStatusBuilding">Building</entry>
    <entry key="SimStatusBuildingAsModelRef">Building as referenced model</entry>
    <entry key="SimStatusExternal">External</entry>
    <entry key="SimStatusExternalAsModelRef">External as referenced model</entry>
    <entry key="SimStatusExternalAsNormalModelRef">Referenced model not connected to external simulation</entry>
    <entry key="SimStatusInitializing">Initializing</entry>
    <entry key="SimStatusInitializingAsModelRef">Initializing as referenced model</entry>
    <entry key="SimStatusPaused">Paused</entry>
    <entry key="SimStatusPausedAsModelRef">Paused as referenced model</entry>
    <entry key="SimStatusPausedInDebugger">Paused in debugger</entry>
    <entry key="SimStatusPausedInDebuggerAsModelRef">Paused in debugger as referenced model</entry>
    <entry key="SimStatusCompiled">Compiled</entry>
    <entry key="SimStatusCompiledAsModelRef">Compiled as referenced model</entry>
    <entry key="SimStatusRunning">Running</entry>
    <entry key="SimStatusRunningAsModelRef">Running as referenced model</entry>
    <entry key="SimStatusPacingUtilization">: {0,number,integer} utilization</entry>
    <entry key="SimStatusPacingOverrun">: unable to pace</entry>
    <entry key="SimStatusPacingPollMode">Pacing (poll){0}</entry>
    <entry key="SimStatusPacingPollModeAsModelRef">Pacing (poll) as referenced model{0}</entry>
    <entry key="SimStatusPacingSleepMode">Pacing (sleep){0}</entry>
    <entry key="SimStatusPacingSleepModeAsModelRef">Pacing (sleep) as referenced model{0}</entry>
    <entry key="SimStatusStopped">Stopped</entry>
    <entry key="SimStatusStoppedAsModelRef">Stopped as referenced model</entry>
    <entry key="SimStatusTerminating">Terminating</entry>
    <entry key="SimStatusTerminatingAsModelRef">Terminating as referenced model</entry>
    <entry key="SimStatusUpdating">Updating</entry>
    <entry key="SimStatusUpdatingAsModelRef">Updating as referenced model</entry>
    <entry key="StopRequestedBy">Stop requested by {0}</entry>
    <entry key="StopCommandIssued">Simulation stopped using stop command</entry>
    <entry key="ReachedStopTime">Reached stop time of {0}</entry>
    <entry key="SimulationTimedOut">Simulation timed out</entry>
    <entry key="StartTimeGreaterThanStop">Start time greater than stop time</entry>
    <entry key="SimTypeMismatch">Model ''{0}'' is currently compiled for ''{1}'' simulation type. The current compilation needs to be terminated before the model can be compiled for the specified simulation type ''{2}''</entry>
    <entry key="SimViewingDeviceNotAtomic">''{0}'' is specified as a ''SimViewingDevice'' but it is not atomic. Subsystems that are ''SimViewingDevices'' must be atomic</entry>
    <entry key="SimulationCommandInNoDisplay">You cannot use set_param to run a simulation in a MATLAB session that does not have a display.</entry>
    <entry key="SingularJacobian">Jacobian computed for algebraic loop containing ''{0}'' at time {1} is singular.  Stopping simulation.  It appears that the algebraic equations are either under-constrained or over-constrained, or that the differential/algebraic equation system is not of index 1.  If the model is correct, try reducing the step size (either by reducing the fixed step size or by tightening the error tolerances)</entry>
    <entry key="SlType_IndexOutOfRange">Index value is out of range</entry>
    <entry key="SlType_InvalidElementName">Invalid element name</entry>
    <entry key="SlvrJacobianMethodCorrected">The ''Solver Jacobian method''
    specified is ''{0}'', however Simulink has chosen the ''{1}'' method because {3}You can disable this diagnostic by explicitly setting the ''Solver Jacobian method'' to ''{2}'', or by setting the ''Automatic solver parameter selection'' diagnostic to ''none'' in the Diagnostics pane of the Configuration Parameters dialog box.</entry>
    <entry key="SlvrJacobianNotSupported">To get slvrJacobian pattern information, the solver of model ''{0}'' must be implicit solver and must use sparse perturbation method.</entry>
    <entry key="SolverConsecutiveZCNum">At time {0}, simulation hits
      ({1,number,integer}) consecutive zero crossings. Consecutive zero
      crossings will slow down the simulation or cause the simulation to
      hang. To continue the simulation, you may 1) Try using Adaptive
      zero-crossing detection algorithm or 2) Disable the zero crossing of the
      blocks shown in the following table. \n
      {2}
      You can turn off this message by using the MATLAB
      command: \n
      set_param(''{3}'',''MaxConsecutiveZCsMsg'',''none'');
      \n\n
    </entry>
    <entry key="SolverDerivConsistencyCheckFailure">Simulation of ''{0}'' causes derivative consistency check failure at time {1}</entry>
    <entry key="SolverIgnoredZCBracketing">The simulation has ignored searching
      for zero-crossing events at time {0} for ({1,number,integer}) zero crossing
      signals. These signals are being ignored either because their values are
      smaller than the zero crossing tolerance, or because they caused multiple
      consecutive zero crossings. This indicates your system is in Zeno, or has
      strong chattering. \n
      {2}
      You can turn off this message by using the MATLAB
      command: \n
      set_param(''{3}'',''IgnoredZcDiagnostic'',''none'');
      \n\n
    </entry>
    <entry key="SolverInconsistentInitialConditionsWarnForDAE">The values returned by mdlMassMatrix, mdlDerivatives, and mdlForcingFunction do not satisfy the consistency requirements at time {0}. {1}</entry>
    <entry key="SolverMaskedZC">At time {0}, simulation found
      ({1,number,integer}) Masked zero-crossing events. Masked zero crossings are
      caused by even roots problems. It indicates that some zero crossings may not
      be detected. To solve this problem, you can increase the refine factor from
      ({2,number,integer}) to a larger value. The refine factor can be accessed
      from ''Configuration Parameters > All Parameters > Refine factor''. \n
      {3}
      You can turn off this message by using the MATLAB
      command: \n
      set_param(''{4}'',''MaskedZcDiagnostic'',''none'');
      \n\n
    </entry>
    <!-- SolverMaxConsecutiveMinStepsViolated TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsHotLinks.m -->
    <entry key="SolverMaxConsecutiveMinStepsViolated"><![CDATA[Unable to reduce the step size without violating minimum step size of {0} {1,number,integer} consecutive times at time {2}. Simulation stopped. This usually may be caused by the high stiffness of the system. Please check the model ''{3}'' or increase the <sldiag objui="configset" objparam="MaxConsecutiveMinStep">Number of consecutive min steps</sldiag>]]></entry>
    <!-- SolverMaxConsecutiveMinStepsViolatedForDAE TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsHotLinks.m -->
    <entry key="SolverMaxConsecutiveMinStepsViolatedForDAE"><![CDATA[Unable to reduce the step size without violating minimum step size of {0} {1,number,integer} consecutive times at time {2}. Simulation stopped. This usually may be caused by violating algebraic constraints in the differential-algebraic system or by the high stiffness of the system. Try tightening the error tolerances, and/or the tolerances for computing consistent conditions. If the problem persists, please check the model ''{3}'' or increase <sldiag objui="configset" objparam="MaxConsecutiveMinStep">Number of consecutive min steps</sldiag>]]></entry>
    <entry key="SolverMaxNumMinStepsViolated">Maximum number of steps with step size equal to minimum step size ({0}) taken at time {1}. This option will soon be obsolete and please set the solver parameter Max consecutive min step size violation instead</entry>
    <entry key="SolverMinStepErr">Unable to reduce the step size without violating a minimum step size of {0} at time {1} for model ''{2}''</entry>
    <!-- SolverMinStepNonlinearIterWarnForDAE TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsHotLinks.m -->
    <entry key="SolverMinStepNonlinearIterWarnForDAE"><![CDATA[
     Unable to reduce the step size without violating minimum step size of {0} for {1,number,integer} consecutive times at time {2}.  This usually may be caused by violating algebraic constraints in the differential-algebraic system or by the high stiffness of the system. Try tightening the error tolerances, and/or the tolerances for computing consistent conditions. If the problem persists, please check the model ''{3}'' or increase the <sldiag objui="configset" objparam="MaxConsecutiveMinStep">Number of consecutive min steps</sldiag>
     <actions exclusiveFixIts="yes">
     <action cmd="matlab:solverprofiler.launchSolverProfiler" type="suggestion">Open Solver Profiler to explore such issues</action>
     </actions>
    ]]></entry>
    
    <entry key="SolverMinStepSizeCausedByShapePreserveErr">Unable to reduce the step size to satisfy the state shape preservation Constraint without violating minimum step size of {0} at time {1}.</entry>
    <entry key="SolverMinStepSizeCausedByShapePreserveWarn">Unable to reduce the step size to satisfy the state shape preservation constraint without violating minimum step size of {0} at time {1}. Continuing simulation with the step size restricted to {2} and using 1st order Euler integration method to satisfy the state shape preservation constraint</entry>
    <!-- SolverMinStepSizeWarn TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsHotLinks.m -->
    <entry key="SolverMinStepSizeWarn"><![CDATA[Unable to reduce the step size without violating minimum step size of {0} for {1,number,integer} consecutive times at time {2}.  Continuing simulation with the step size restricted to {3} and using an effective relative error tolerance of {4}, which is greater than the specified relative error tolerance of {5}. This usually may be caused by the high stiffness of the system. Please check the model ''{6}'' or increase <sldiag objui="configset" objparam="MaxConsecutiveMinStep">Number of consecutive min steps</sldiag>]]></entry>
    <!-- SolverMinStepSizeWarnForDAE TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsHotLinks.m -->
    <entry key="SolverMinStepSizeWarnForDAE"><![CDATA[
     Unable to reduce the step size without violating minimum step size of {0} for {1,number,integer} consecutive times at time {2}.  Continuing simulation with the step size restricted to {3} and using an effective relative error tolerance of {4}, which is greater than the specified relative error tolerance of {5}. This usually may be caused by violating algebraic constraints in the differential-algebraic system or by the high stiffness of the system. Try tightening the error tolerances, and/or the tolerances for computing consistent conditions. If the problem persists, please check the model ''{6}'' or increase <sldiag objui="configset" objparam="MaxConsecutiveMinStep">Number of consecutive min steps</sldiag>.
     <actions exclusiveFixIts="yes">
     <action cmd="matlab:solverprofiler.launchSolverProfiler" type="suggestion">Open Solver Profiler to explore such issues</action>
     </actions>
    ]]></entry>
    
    <entry key="SolverNonlIterMinStepErr"><![CDATA[
     Nonlinear iteration is not converging with step size reduced to hmin ({0}) at time {1}.  Try reducing the minimum step size and/or relax the relative error tolerance
     <actions exclusiveFixIts="yes">
     <action cmd="matlab:solverprofiler.launchSolverProfiler" type="suggestion">Open Solver Profiler to explore such issues</action>
     </actions>
    ]]></entry>
    
    <entry key="SolverOutputAssertConsoleErrMsg">Output consistency check failed at time {0} for output element {1,number,integer} of port {2,number,integer} in ''{3}''\n</entry>
    <entry key="SolverOutputAssertDlgErrMsg">Simulation of ''{0}'' terminated due to output inconsistencies</entry>
    <entry key="SolverOutputAssertForDblsConsoleErrMsg">Output consistency check failed at time {0} for output element {1,number,integer} of port {2,number,integer} in ''{3}'':\n   Expected value: {4}\n   Actual value  : {5}\n</entry>
    <entry key="SolverStateConsistencyCheckFailure">Simulation of ''{0}'' causes state consistency check failure at time {1}</entry>
    
    <entry key="SolverZCConsistencyCheckFailure"><![CDATA[
     Simulation of ''{0}'' causes zero crossing consistency check failure at time {1}
     <actions exclusiveFixIts="yes">
     <action cmd="matlab:solverprofiler.launchSolverProfiler" type="suggestion">Open Solver Profiler to explore such issues</action>
     </actions>
    ]]></entry>
    
    <entry key="SortAlgLoopThruIntegrator">Detected algebraic loop path(s) through integrator reset or IC ports. Results may not be intuitive (see documentation).  Use integrator state port to avoid algebraic loops</entry>
    <entry key="SortDiscontinuityInAlgLoop">Discontinuities detected within algebraic loop(s), may have trouble solving</entry>
    <entry key="SortICInAlgLoop">Ignoring IC ''{0}'' which is in an algebraic loop because it is driven by IC ''{1}''</entry>
    <entry key="SourceLoopError">Unable to determine signal dimensions. There is a loop consisting of ''{0}'' that cannot be resolved because signal dimensions are defined by a cyclic relationship. Specifying the signal dimensions on Inport, Mux, Selector, Demuxes will help resolve signal dimensions in the loop.  You can also use the Signal Specifications to define the signal dimensions.</entry>
    <entry key="SrcsCannotHaveDynamicDimensionsMode">Source ''{0}'' cannot have inherited dimension mode setting for its output port {1,number,integer}. All output ports of all sources should be set explicitly to fixed-size mode or variable-size mode.</entry>
    <entry key="SrcsCannotHaveDynamicFrameData">Source ''{0}'' cannot have dynamic frame data setting for its output port {1,number,integer}. All sources should explicitly set all their output ports to be frame or non-frame</entry>
    <entry key="StandaloneNoCStates">The subsystem ''{0}'' is configured as a Function with separate data and initialization.  Subsystems using this configuration may not contain any continuous states.   Please deselect the ''Separate data and initialization'' option on the subsystem block</entry>
    <entry key="StandaloneNoContTime">The subsystem ''{0}'' is configured as a Function with separate data and initialization and has a block with a continuous sample time. Subsystems using this configuration must only have discrete sample times</entry>
    <entry key="StandaloneNoMdlRef">The model ''{0}'' contains the subsystem ''{1}'' which is configured as a Function with separate data and initialization. Subsystems using this configuration are not supported for the model reference code generation target</entry>
    <!-- StandaloneNoMultiInstanceERT TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsOpen.m -->
    <entry key="StandaloneNoMultiInstanceERT"><![CDATA[The model ''{0}'' contains the subsystem ''{1}'' which is configured as a Function with separate data and initialization. Subsystems using this configuration are not supported when <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> is set to either ''C++ class'' or ''Reusable function''.
      <actions exclusiveFixIts="yes">
        <action cmd="matlab:Simulink.internal.OpenBlockParamsDialog(''{1}'',''FunctionWithSeparateData'')" type="suggestion">Clear <sldiag objui="blockdlg" objparam="FunctionWithSeparateData">Function with separate data</sldiag></action>
        <action cmd="matlab:configset.internal.open(''{0}'',''CodeInterfacePackaging'')" type="suggestion">Set ''Code interface packaging'' to ''Nonreusable function'' (might impact referenced or referencing models)</action>
      </actions>]]>
    </entry>
    <entry key="StandaloneNoMultiRate">The subsystem ''{0}'' is configured as a Function with separate data and initialization and has multiple sample times.  Subsystems using this configuration must be single rate</entry>
    <entry key="StandaloneNoNoninlinedSfcns">The subsystem ''{0}'' is configured as a Function with separate data and initialization and contains the S-Function ''{1}'' which does not have a TLC file.  Subsystems using this configuration only support inlined S-Functions</entry>
    <entry key="StandaloneOutFedByProbeBlock">The Probe block ''{0}'' is driving an outport of the subsystem ''{1}'' which is configured as a Function with separate data and initialization.  The Probe block does not support global data so please place a Signal Conversion block between the Probe block and the subsystem outport</entry>
    <entry key="StandaloneOutFedByWidthBlock">The Width block ''{0}'' is driving an outport of the subsystem ''{1}'' which is configured as a Function with separate data and initialization.  The Width block does not support global data so please place a Signal Conversion block between the Width block and the subsystem outport</entry>
    <entry key="StandaloneOutputFcnCall">The subsystem ''{0}'' is configured as a Function with separate data and initialization.  Subsystems using this configuration are not allowed to output any function-call signals.  Please deselect the ''Separate data and initialization'' option on the subsystem block</entry>
    <entry key="StartTimeCorrected">The specified simulation start time ({0}) is not an integer multiple of the fixed step size ({1}).  Changing the start time to ({2}).  You can disable this diagnostic by either specifying a start time that is an integer multiple of the fixed step size, or setting ''Automatic solver parameter selection'' diagnostic to ''none'' in the Diagnostics tab of the Configuration Parameters dialog</entry>
    <entry key="StateEnableSignalMustBeScalar">Cannot set dimensions of the enable input port of ''{0}''. The enable signal must be a scalar signal.</entry>
    <entry key="StateEnabledSubsystemMustBeSingleRate1">All blocks within subsystem ''{0}'' must have the same sample time since the subsystem contains an enable port and is in the synchronous mode.</entry>
    <entry key="StateEnabledSubsystemMustBeSingleRate2">All signals entering subsystem ''{0}'' must have the same sample time as that of the subsystem since the subsystem contains an enable port and is in the synchronous mode.</entry>
    <entry key="StateEnabledSubsystemMustHaveDiscreteOrTrigTs">Subsystem ''{0}'' must have a discrete or triggered sample time since it contains an enable port.</entry>
    <entry key="StateflowWithStatesModifiedInOutputUpdateInAlgLoop1"><![CDATA[''{0}'' updates persistent or state variables while computing outputs, therefore it cannot be used in an algebraic loop. However, it is in a loop with the following blocks. For more information, see <a href="matlab:helpview([docroot ''/simulink/helptargets.map''],''mlfb_stateflow_algebraic_loops'')">Algebraic Loops with MATLAB Function and Stateflow Blocks</a>.]]></entry>
    <entry key="StateflowWithStatesModifiedInOutputUpdateInAlgLoop2"><![CDATA[''{0}'' updates persistent or state variables while computing outputs, therefore it cannot be used in an algebraic loop. However, its parent subsystem ''{1}'' is in a loop with the following blocks. For more information, see <a href="matlab:helpview([docroot ''/simulink/helptargets.map''],''mlfb_stateflow_algebraic_loops'')">Algebraic Loops with MATLAB Function and Stateflow Blocks</a>.]]></entry>
    <entry key="StateflowWithStatesModifiedInOutputUpdateInAlgLoop3"><![CDATA[The model referenced by ''{0}'' contains blocks that update persistent or state variables while computing outputs, therefore it cannot be used in an algebraic loop. However, it is in a loop with the following blocks. For more information, see <a href="matlab:helpview([docroot ''/simulink/helptargets.map''],''mlfb_stateflow_algebraic_loops'')">Algebraic Loops with MATLAB Function and Stateflow Blocks</a>.]]></entry>
    <entry key="StateflowWithStatesModifiedInOutputUpdateInAlgLoop4"><![CDATA[The model referenced by ''{0}'' contains blocks that update persistent or state variables while computing outputs, therefore it cannot be used in an algebraic loop. However, its parent subsystem ''{1}'' is in a loop with the following blocks. For more information, see <a href="matlab:helpview([docroot ''/simulink/helptargets.map''],''mlfb_stateflow_algebraic_loops'')">Algebraic Loops with MATLAB Function and Stateflow Blocks</a>.]]></entry>
    <entry key="StatePerturbationMustBeScalar">State perturbation level for the block ''{0}'' must be a scalar variable.</entry>
    <entry key="StatePortCannotFeedOutport">State port cannot feed into outports of nonvirtual subsystems.  Offending connection involves outport ''{0}''</entry>
    <entry key="StateResetForFCSSWithNonExplicitInit">The "States when enabling" parameter of block ''{0}'' may not be set to "reset"; it may only be set to "inherit" or "held" since its function call initiator ''{1}'' is not configured to explicitly enable and disable its destinations</entry>
    <entry key="StopAndCloseRunningModel">''{0}'' is running. Do you want to stop it and close the model?</entry>
    <entry key="StopAndCloseRunningModelInFastRestart">''{0}'' is running in Fast Restart. Do you want to exit Fast Restart and close the model?</entry>
    <entry key="StopAndCloseModelInitializedInFastRestart">''{0}'' is initialized in Fast Restart. Do you want to exit Fast Restart and close the model?</entry>
    <entry key="CannotChangeFastRestartWhenStepping">Fast Restart can not be enabled or disabled during a simulation</entry>
    <entry key="FastRestartNotSupportedInThisMode">Fast Restart is supported only for normal and accelerator modes. You can use ''set_param(''{0}'', ''FastRestart'', ''off'')'' to disable Fast Restart.</entry>
    <entry key="FastRestartArgNotSupportedInThisMode">Fast Restart is supported only for normal and accelerator modes.</entry>
    <entry key="StopTimeCorrected">The specified simulation stop time ({0}) is not an integer multiple of the fixed step size ({1}).  Changing the stop time to ({2}).  You can disable this diagnostic by either specifying a stop time that is an integer multiple of the fixed step size, or setting ''Automatic solver parameter selection'' diagnostic to ''none'' in the Diagnostics tab of the Configuration Parameters dialog</entry>
    <entry key="StructFormatNotCompatible">The struct data of the given MATLAB array is not compatible with the Simulink non-virtual bus data</entry>
    <entry key="SubsystemCannotBeReusableForMultiInstanceCode"><![CDATA[The model cannot generate reusable code with inputs and outputs passed as individual arguments, because ''{0}'' can not generate a reusable function. Consider changing  <sldiag objui="configset" objparam="RootIOFormat">Pass root-level I/O</sldiag> to ''Structure reference''. Alternatively, consider setting <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to ''Nonreusable function''.]]></entry>
    <entry key="SubsystemCannotBeReusableForMultiInstanceCodeCPP"><![CDATA[''{0}'' can not generate a reusable function which is required when generating a C++ class interface. Consider setting <sldiag objui="configset" objparam="CodeInterfacePackaging">Code interface packaging</sldiag> to a value other than ''C++ class'']]></entry>
    <entry key="SubsystemChangedToBeReusableNotSupportedInInplace">Inplace specification not supported when the implementation of ''{0}'' needs to be changed to a Reusable function. Please set the function packaging on this block to Reusable.</entry>
    <entry key="SubsystemChangedToBeReusableForMultiInstanceCode">Attempting to change the implementation of ''{0}'' to a reusable function, so that the generated code may be reusable</entry>
    <entry key="SubsystemChangedToBeReusableInsideServer">Changing the implementation of ''{0}'' to a reusable function since it is inside the server block ''{1}''</entry>
    <entry key="StandaloneNoServer">The model ''{0}'' contains the subsystem ''{1}'' which is configured as a Function with separate data and initialization. Subsystems using this configuration are not supported inside of server blocks, and that subsystem is inside the server block ''{2}''</entry>
    <entry key="SubsystemNonReusableInReusableSubsysCPP">''{0}'' is a subsystem using the Code generation function packaging parameter value: ''Function'', while it has an ancestor subsystem ''{1}'' that is using the ''Reusable function'' option. This is not allowed when generating a C++ class interface. Consider either changing the former subsystem''s option to ''Reusable function'', or changing the latter subsystem''s option to ''Function''</entry>
    <entry key="SuppressErrStNotSupportNonInlinedSF"><![CDATA[Block ''{0}'' is a non-inlined sfunction block, which is not supported when <sldiag objui="configset" objparam="SuppressErrorStatus">Remove error status field in real-time model data structure</sldiag> is checked. Consider unselecting the option or removing the block]]></entry>
    <entry key="SuppressErrorStatusNotSupportCTime"><![CDATA[Model ''{0}'' has both <sldiag objui="configset" objparam="SupportContinuousTime">Support: continuous time</sldiag> and <sldiag objui="configset" objparam="SuppressErrorStatus">Remove error status field in real-time model data structure</sldiag> checked, which is not a supported configuration. One of these options must be unselected in order to build this model.]]></entry>
    <entry key="SwitchedReusedToNonreused">Converting ''Reusable function'' setting of subsystem ''{0}'' to ''Nonreused function'' because a child system has either been explicitly marked as nonreused, or is used in a configuration that must be nonreused. Please generate the HTML report during code generation and see the "Subsystems" section for more information</entry>
    <entry key="SysGenSameFcnAsMdl">Subsystem ''{0}'' function name setting ({1}) is the same name as the model ''{2}''.  Please change the function name setting for this subsystem</entry>
    <entry key="SysGenSameFileAsMdl">The subsystem ''{0}'' is trying to generate code to an reserved file ({1}) for the model ''{2}''.  Please change the file name setting for this subsystem</entry>
    <entry key="SysIllegalFileName">The subsystem ''{0}'' is trying to generate code into a file ({1}) whose name starts with ''rt_sys''.  This is an Simulink Coder reserved identifier, please change the file name setting for this subsystem</entry>
    <entry key="TagEmpty">Tag should not be empty</entry>
    <entry key="Target_BadTFLSource">Code Replacement Library ''{0}'' is missing or does not contain a valid table.</entry>
    <entry key="Target_FailedToGetHostWordLengths">Attempt to obtain Host Word Lengths failed with error.</entry>
    <entry key="TipAlert_AutoConnectionDescription">To quickly connect blocks, select the source block(s), then hold down the Ctrl key while left-clicking on the destination block.</entry>
    <entry key="TipAlert_AutoConnectionPrefsKey">SimulinkTipAlertAutoConnectTip</entry>
    <entry key="TipAlert_AutoConnectionTitle">Automatic Block Connection Tip</entry>
    <entry key="TnextMustBeScalar">Time of next hit returned by S-function ''{0}'' in ''{1}'' during flag={2,number,integer} call must be a real scalar.</entry>
    <entry key="TrigSSDataInputPortsInLoop">Input port(s), {0} of ''{1}'' are involved in a loop. To remove loops involving triggered subsystems and/or Model blocks, specify ''Latch input by delaying outside signal'' on the appropriate inport(s).</entry>
    <entry key="TrigSSEnabPortInLoop">The enable input port of enabled and triggered subsystem or Model block ''{0}'' is involved in a loop. This causes the enable signal at time t to be dependent on the output of the subsystem or Model block at time t, resulting in an ambiguous execution. You can use a Memory block to break the loop.</entry>
    <entry key="TrigSSTrigPortInLoop">The trigger input port of triggered subsystem or Model block ''{0}'' is involved in a loop. This causes the  trigger signal at time t to be dependent on the output of the triggered subsystem or Model block at time t, resulting in an ambiguous execution order. You can use a Memory to break the loop.</entry>
    <entry key="TrigSigMustBeRealDouble">External mode trigger signal must be non-complex and of type ''int32'' for integer only targets or ''double'' for all others.</entry>
    <entry key="TrigStateflowDataInputPortsInLoop">Input port(s), {0}, of triggered Stateflow chart ''{1}'' are involved in a loop. You can use a Memory block to remove loops involving Triggered Stateflow charts</entry>
    <entry key="TriggerECPotentialPreStartOutputDiff"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases if ''{1}'' is not triggered at t = 0. Block ''{2}'' may produce non-zero outputs for zero inputs and has been inherited by the ''{3}'' execution context. In previous releases, the ''{4}'' was not inherited by the execution context and may have produced a non-zero output prior to start of the conditional subsystem. To prevent the inheritance of the context, explicitly set the sample time of ''{5}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextPreStartOutputMsg">Check preactivation output of execution context</sldiag>.]]></entry>
    <entry key="TriggerECPotentialPreStartOutputDiffConsistentOutportInit"><![CDATA[The output of ''{0}'' may produce different results than the previous Simulink releases if ''{1}'' is not triggered at t = 0. Block ''{2}'' may produce non-zero outputs for zero inputs and has been inherited by the ''{3}'' execution context. In previous releases, the ''{4}'' was not inherited by the execution context and may have produced a non-zero output prior to start of the conditional subsystem. To prevent the inheritance of the context, explicitly set the sample time of ''{5}'' to the rate at which you want the signal recomputed. To turn off this warning message, deselect <sldiag objui="configset" objparam="CheckExecutionContextPreStartOutputMsg">Check preactivation output of execution context</sldiag>.]]></entry>
    <entry key="TriggeredFcnCallCannotBeITVS">The Function-Call Port block ''{0}'' has an invalid setting specified for its ''Sample time type'' parameter. When ''Propagate sizes of variable-size signals'' is set to ''Only when enabling'', the ''Sample time type'' option must be set to ''periodic''.</entry>
    <entry key="InitTrigStateCannotBeNegative">Parameter ''Initial trigger signal state'' for Trigger Port block ''{0}'' cannot be ''negative'' because the data type ''{1}'' of the corresponding parent subsystem trigger port is unsigned.</entry> 
    <entry key="UINotUpdatedDuringRapidAccelSim">Visualization blocks are not updated during command line simulation in rapid accelerator mode.</entry>  
    <entry key="UnableRepresentDataInFi">Unable to construct the fi object for the fixed-point data type ''{0}'' associated with block ''{1}''.</entry>
    <entry key="UnableRepresentModelDataInFi">Unable to construct the fi object for the fixed-point data type ''{0}''.</entry>
    <entry key="UnableRepresentDataInMatlab">Unable to find the appropriate MATLAB data type to save the Simulink internal data</entry>
    <entry key="UnableRepresentDataInMatlabErr">Unable to find the appropriate MATLAB data type to save the Simulink internal data of type ''{0}'' for ''{1}''</entry>
    <entry key="UnableToHonorPriority">Unable to honor user-specified priorities. ''{0}'' (pri={1}) has to execute before ''{2}'' (pri={3}) to satisfy data dependencies</entry>
    <entry key="UnableToLoadBd">Unable to load block diagram ''{0}''</entry>
    <entry key="UnableToLoadExtInputsFromWkspForCodeGen">Loading external inputs from the workspace is not supported for current code generation target</entry>
    <entry key="PossibleSimulationResultsMismatchForCodeGen">Cannot guarantee that results retrieved from .mat file are identical to results of other simulation modes because root inport ''{0}'' and root outport ''{1}'' are reused.</entry>
    <entry key="UnableToLocateRTWNameInBd">Unable to locate Simulink Coder block or system name ''{0}'' in model ''{1}''</entry>
    <entry key="UnableToSolveAlgLoop">Cannot solve algebraic loop involving ''{0}'' because it consists of blocks that cannot be assigned algebraic variables, such as blocks with discrete-valued outputs, blocks with non-double or complex outputs, Stateflow blocks, or nonvirtual subsystems. Consider breaking the algebraic loop. For example, add a delay or a memory block to the loop.</entry>
    <entry key="UnableToUpdateDisplayInRapidAccelMode">Rapid accelerator mode does not update some visualization blocks such as ''{0}''. Run the model in normal or accelerator mode to take full advantage of visualization blocks.</entry>
    <entry key="UnconnLine">Unconnected line found in ''{0}'' (starts {1,number,integer}% from left and {2,number,integer}% from top of view)</entry>
    <entry key="UnconnLineOutsideWindow">Unconnected line found in ''{0}'' (outside of current view)</entry>
    <entry key="UnitDelayDiscreteInheritContinuous"><![CDATA[The block ''{0}'' only supports discrete sample time. However, the input is a continuous sample time. Consider changing the sample time to discrete, using fixed-step solver or replacing it with a Memory block. For help in replacing with memory block and other upgrade issues, use the <a href="matlab:UpgradeAdvisor.open(bdroot)">Simulink Upgrade Advisor</a>.]]></entry>
    <entry key="UnnamedRegsitryItem">Cannot add an unnamed item to a registry.</entry>
    <entry key="UnresolvedPassThroughLoop">Simulink detected an invalid loop containing blocks with variable sizes in ''{0}''. The loop consists of blocks and their corresponding ports. All of these blocks indicate that the dimensions of their output ports must match the dimensions of their respective input ports. (In the case of an S-function, ''ssSetInputDimsSameAsOutputDims'' has been used). As a result, none of the blocks in the loop are actually setting the port dimensions at any given time step. The blocks and the port indices corresponding to the external input ports of this loop are: {1}.</entry>
    
    <entry key="UnsupportedBlockJacobian">The Jacobian of this block is not supported.</entry>
    <entry key="VerySmallMaxStepSize">Auto step size of model ''{0}'' is selected to be {1} because of a high frequency source block in the model. The simulation requires a minimum of {2} simulation steps to complete. To reduce the number of simulation steps, decrease the stop time or select a larger maximum step size.</entry>
    <entry key="VerySmallFixedStepSize">Auto step size of model ''{0}'' is selected to be {1} because of a high frequency source block in the model. The simulation requires {2} simulation steps to complete. To reduce the number of simulation steps, decrease the stop time or select a larger fixed step size.</entry>
    <entry key="UsingDefaultMaxStepSize"><![CDATA[Model ''{0}'' is using a default value of {1} for maximum step size. You can disable this diagnostic by setting <sldiag objui="configset" objparam="SolverPrmCheckMsg">Automatic solver parameter selection</sldiag> to ''none'']]></entry>
    <entry key="UsingDiscreteSolver"><![CDATA[The model ''{0}'' does not have continuous states, hence Simulink is using the solver ''{1}'' instead of solver ''{2}''. You can disable this diagnostic by explicitly specifying a discrete solver in <sldiag objui="configset" objparam="Solver">Solver</sldiag>, or by setting <sldiag objui="configset" objparam="SolverPrmCheckMsg">Automatic solver parameter selection</sldiag> to ''none'']]></entry>
    <entry key="AutoSolverHighNx">The stiffness check in auto solver is not supported for this model because the number of continuous states ''{0}'' is  greater than the threshold value ''{1}''. To change the threshold value, set the ''NumStatesForStiffnessChecking'' model parameter at the MATLAB command line.</entry>
    <entry key="ValueLabelSignalReuseClashPart1">Signal storage reuse is turned on for this model. Consequently, the output port display for blocks may be incorrect.</entry>
    <entry key="ValueLabelSignalReuseClashPart2">Select OK to turn on the port displays regardless, or select Cancel to keep the current setting.</entry>
    <entry key="VarDimRulesExceedMaxNumber">The number of propagated dimension dependency rules ({0,number,integer}) of ''{1}'' has exceeded the maximum number of rules ({2,number,integer}) allowed in the model. You can use ''set_param(modelname, ''MaxNumVariableDimRules'', N)'' to change this setting, but this might result in longer block-diagram updates.</entry>
    <entry key="VarDimsBlockExecTimeWithBlockRequestStateResetSizeVary">Block ''{0}'' contains states that require resetting whenever the input signal sizes vary. This block property is inconsistent with a block property of ''{1}''; the output signal sizes of block ''{2}'' depend on its input signal values. Consider placing ''{3}'' in an Enabled/Function-Call/Action/Resettable Subsystem and setting the parameter ''Propagate sizes of variable-size signals'' on the corresponding control port block to: ''Only when enabling'' for an Enabled or a Function-Call Subsystem; ''Only when execution is resumed'' for an Action Subsystem; or ''Only when resetting'' for a Resettable Subsystem.</entry>
    <entry key="VarDimsBlockRequestStateResetNonModelRef">Block ''{0}'' contains states that require resetting whenever the input signal sizes vary. However, Simulink can only set signal sizes when this block is being enabled. Consider placing ''{1}'' inside an Enabled/Function-Call/Action/Resettable Subsystem and setting the parameter ''Propagate sizes of variable-size signals'' on the corresponding control port block to: ''Only when enabling'' for an Enabled or a Function-Call Subsystem; ''Only when execution is resumed'' for an Action Subsystem; or ''Only when resetting'' for a Resettable Subsystem.</entry>
    <entry key="VarDimsBusElementNotAllowed">{0} does not support nonvirtual buses which contain variable-size elements.</entry>
    <entry key="VarDimsContextNotResetBlockRequestStateResetSizeVary1">The block ''{0}'' contains states that require resetting when input signal sizes vary. Consider changing ''States when enabling'' parameter of ''{1}'' to ''reset''.</entry>
    <entry key="VarDimsContextNotResetBlockRequestStateResetSizeVary2">The block ''{0}'' contains states that require resetting when input signal sizes vary. Consider changing ''States when execution is resumed'' parameter of ''{1}'' to ''reset''.</entry>
    <entry key="VarDimsExecTimeContextModelBlockInitTime"><![CDATA[The subsystem ''{0}'' contains the control port block ''{1}'' and the model block ''{2}''. For the control port block ''{3}'', the parameter ''Propagate sizes of variable-size signals'' is set to ''During execution''. In addition, the model block  has one of the following properties: 1) the model block contains states that require resetting when the input signal sizes vary. 2) the ''Configuration Parameters > Model Referencing > Propagate sizes of variable-size signals'' parameter of the referenced model ''{4}'' is set to ''Only when enabling''. Consider changing the parameter ''Propagate sizes of variable-size signals'' for ''{5}'' to ''Only when enabling''.]]></entry>
    <entry key="VarDimsExecTimeContextModelBlockInitTimeAction"><![CDATA[The subsystem ''{0}'' contains the control port block ''{1}'' and the model block ''{2}''. For the control port block ''{3}'', the parameter ''Propagate sizes of variable-size signals'' is set to ''During execution''. In addition, the model block  has one of the following properties: 1) the model block contains states that require resetting when the input signal sizes vary. 2) the ''Configuration Parameters > Model Referencing > Propagate sizes of variable-size signals'' parameter of the referenced model ''{4}'' is set to ''Only when enabling''. Consider changing the parameter ''Propagate sizes of variable-size signals'' for ''{5}'' to ''Only when execution is resumed''.]]></entry>
    <entry key="VarDimsExecTimeContextModelBlockInitTimeReset"><![CDATA[The subsystem ''{0}'' contains the control port block ''{1}'' and the model block ''{2}''. For the control port block ''{3}'', the parameter ''Propagate sizes of variable-size signals'' is set to ''During execution''. In addition, the model block  has one of the following properties: 1) the model block contains states that require resetting when the input signal sizes vary. 2) the ''Configuration Parameters > Model Referencing > Propagate sizes of variable-size signals'' parameter of the referenced model ''{4}'' is set to ''Only when enabling''. Consider changing the parameter ''Propagate sizes of variable-size signals'' for ''{5}'' to ''Only when resetting''.]]></entry>
    <entry key="VarDimsExecTimeContextRequestStateResetSizeVary">Block ''{0}'' contains states that require resetting when input signal sizes vary. However, the subsystem that contains this block is set to ''Propagate sizes for variable-size signals during execution''. The resetting of states for ''{1}'' can occur only when the subsystem is being enabled. Consider changing the parameter ''Propagate sizes of variable-size signals'' for ''{2}'' to ''Only when enabling''.</entry>
    <entry key="VarDimsExecTimeContextRequestStateResetSizeVaryAction">Block ''{0}'' contains states that require resetting when input signal sizes vary. However, the subsystem that contains this block is set to ''Propagate sizes for variable-size signals during execution''. The resetting of states for ''{1}'' can occur only when the subsystem execution is resumed. Consider changing the parameter ''Propagate sizes of variable-size signals'' for ''{2}'' to ''Only when execution is resumed''.</entry>
    <entry key="VarDimsExecTimeContextRequestStateResetSizeVaryReset">Block ''{0}'' contains states that require resetting when input signal sizes vary. However, the subsystem that contains this block is set to ''Propagate sizes for variable-size signals during execution''. The resetting of states for ''{1}'' can occur only when the subsystem is reset. Consider changing the parameter ''Propagate sizes of variable-size signals'' for ''{2}'' to ''Only when resetting''.</entry>
    <entry key="VarDimsInitTimeContextModelBlockExecTime"><![CDATA[The subsystem ''{0}'' contains the control port block ''{1}'' and the model block ''{2}''. For the control port block ''{3}'', the parameter ''Propagate sizes of variable-size signals'' is set to ''Only when enabling''. In addition, the model block  has one of the following properties: 1) the model block contains a block for which the output signal sizes depend on the input signal values; 2) the ''Configuration Parameters > Model Referencing > Propagate sizes of variable-size signals'' parameter of the referenced model ''{4}'' is set to ''During execution''. Consider changing the parameter ''Propagate sizes of variable-size signals'' for ''{5}'' to ''During execution''.]]></entry>
    <entry key="VarDimsInitTimeContextSizeDependOnValue">The output signal sizes of block ''{0}'' depend on the input signal values. However, the subsystem that contains this block is set to ''Propagate sizes of variable-size signals only when enabling''. Consider placing this block outside subsystems with this parameter setting  or changing the parameter ''Propagate sizes of variable-size signals'' for ''{1}'' to ''During execution''.</entry>
    <entry key="ResetSSVarDimsInitTimeContextSizeDependOnValue">The output signal sizes of block ''{0}'' depend on the input signal values. However, the subsystem that contains this block is set to ''Propagate sizes of variable-size signals only when resetting''. Consider changing the parameter ''Propagate sizes of variable-size signals'' for ''{1}'' to ''During execution''.</entry>
    <entry key="VarDimsInputEmpty">The signal at input port {0,number,integer} of ''{1}'' cannot have an empty size.</entry>
    <entry key="VarDimsInputRequireDiscreteST">The signal at input port {0,number,integer} of ''{1}'' is a variable-size signal with a nondiscrete sample time. The sample time for any variable-size signal must be discrete.</entry>
    <entry key="VarDimsBusInputRequireDiscreteST">The signal at input port {0,number,integer} of ''{1}'' is a bus with a variable-size element and has a nondiscrete sample time. The sample time for any variable-size signal must be discrete.</entry>
    <entry key="VarDimsInvalidDrivingSS"><![CDATA[Outport ''{0}'' is driven directly by output port {1,number,integer} of subsystem ''{2}''. Since ''{3}'' has a variable-size input and it is inside a subsystem that propagates sizes of variable-size signals during execution, it cannot be driven directly by a subsystem that propagates sizes of variable-size signals only when enabling, resetting, or when execution is resumed. To fix this, you can either insert a Signal Conversion block with its ''Output'' parameter set to ''Signal copy'' and ''Override optimizations and always copy signal'' parameter checked between two Outport blocks; or you can enable simplified initialization mode by setting <sldiag objui="configset" objparam="UnderspecifiedInitializationDetection">Underspecified initialization detection</sldiag> to ''simplified''. Note that some modifications may be necessary to ensure the model conforms to certain modeling standards required by the new initialization mode. For more information, see documentation for the Model Advisor check ''Check consistency of initialization parameters for Outport and Merge blocks''.]]></entry>
    <entry key="VarDimsInvalidDrivingMdlRef"><![CDATA[Outport ''{0}'' is driven directly by output port {1,number,integer} of Model block ''{2}''. Since ''{3}'' has a variable-size input and it is inside a subsystem that propagates sizes of variable-size signals during execution, it cannot be driven directly by a subsystem inside the referenced model that propagates sizes of variable-size signals only when enabling, resetting, or when execution is resumed. To fix this, you can either insert a Signal Conversion block with its ''Output'' parameter set to ''Signal copy'' and ''Override optimizations and always copy signal'' parameter checked between two Outport blocks; or you can enable simplified initialization mode by setting <sldiag objui="configset" objparam="UnderspecifiedInitializationDetection">Underspecified initialization detection</sldiag> to ''simplified''. Note that some modifications may be necessary to ensure the model conforms to certain modeling standards required by the new initialization mode. For more information, see documentation for the Model Advisor check ''Check consistency of initialization parameters for Outport and Merge blocks''.]]></entry>
    <entry key="VarDimsInvalidInputIndexDimsDependencyRule">The dimension dependency rule specified for ''{0}'' is invalid. Input port indices must be in the range of 0 to {1,number,integer} (where {2,number,integer} is the number of input ports minus 1).</entry>
    <entry key="VarDimsInvalidInputModeDimsDependencyRule">The dimension dependency rule specified for ''{0}'' is invalid. The input port {1,number,integer} cannot have a fixed-size mode.</entry>
    <entry key="VarDimsMultiModeLoopInputError">Simulink is not able to determine the dimension dependency rules for the loop involving the input port {0,number,integer} of ''{1}''. Simulink cannot resolve the dimension dependency rules because they are defined by a cyclic relationship.</entry>
    <entry key="VarDimsMultiModeLoopOutputError">Simulink is not able to determine the dimension dependency rules for the loop involving the output port {0,number,integer} of ''{1}''. Simulink cannot resolve the dimension dependency rules because they are defined by a cyclic relationship.</entry>
    <entry key="VarDimsOutportInitOutConflict">Outport ''{0}'' and ''{1}'' which are driven by the same signal specify conflicting values for the "Initial output" parameter. Initial outputs should be the same.</entry>
    <entry key="VarDimsSfChartOutportInitOutConflict">The Stateflow Chart ''{0}'' and Outport block ''{1}'' specify conflicting initial output values. Initial outputs should be the same.</entry>
    <entry key="VarDimsOutputRequireDiscreteST">The signal at output port {0,number,integer} of ''{1}'' is a variable-size signal with a nondiscrete sample time. The sample time for any variable-size signal must be discrete.</entry>
    <entry key="VarDimsBusOutputRequireDiscreteST">The signal at output port {0,number,integer} of ''{1}'' is a bus with a variable-size element and has a nondiscrete sample time. The sample time for any variable-size signal must be discrete.</entry>
    <entry key="VarDimsOutputRequireNonCustomStorageClass">The signal at output port {0,number,integer} of ''{1}'' is a variable-size signal with a custom storage class. However, variable-size signals do not support any custom storage class. Consider, in the ''Signal Properties...'' dialog, selecting a noncustom storage class from the list. (Open the ''Signal Properties...'' dialog by right-clicking the signal line).</entry>
    <entry key="VarDimsRequireContiguousInput">The input port {0,number,integer} of ''{1}'' is set to accept variable-size signals, but the port is using discontiguous memory. If you are using an S-function, consider setting ''ssSetInputPortRequiredContiguous'' to on. Otherwise, consider inserting a Signal Conversion block upstream of this input port.</entry>
    <entry key="VarDimsSSExecTimeWithBlockRequestStateResetSizeVary">Block ''{0}'' contains states that require resetting whenever the input signal sizes vary. This block property is inconsistent with the block parameter setting for block ''{1}'' in subsystem ''{2}''. Specifically, the parameter ''Propagate sizes of variable-size signals'' is set to ''During execution''. Consider placing ''{3}'' inside an Enabled/Function-Call/Action/Resettable Subsystem and setting the parameter ''Propagate sizes of variable-size signals'' for the corresponding control port block to: ''Only when enabling'' for an Enabled or a Function-Call Subsystem; ''Only when execution is resumed'' for an Action Subsystem; or ''Only when resetting'' for a Resettable Subsystem. Alternatively, change the ''Propagate sizes of variable-size signals'' parameter setting for ''{4}'' to ''Only when enabling''.</entry>
    <entry key="VarDimsSSExecTimeWithBlockRequestStateResetSizeVaryAction">Block ''{0}'' contains states that require resetting whenever the input signal sizes vary. This block property is inconsistent with the block parameter setting for block ''{1}'' in subsystem ''{2}''. Specifically, the parameter ''Propagate sizes of variable-size signals'' is set to ''During execution''. Consider placing ''{3}'' inside an Enabled/Function-Call/Action/Resettable subsystem and setting the parameter ''Propagate sizes of variable-size signals'' for the corresponding control port block to: ''Only when enabling'' for an Enabled or a Function-Call Subsystem; ''Only when execution is resumed'' for an Action Subsystem; or ''Only when resetting'' for a Resettable Subsystem. Alternatively, change the ''Propagate sizes of variable-size signals'' parameter setting for ''{4}'' to ''Only when execution is resumed''.</entry>
    <entry key="VarDimsSSExecTimeWithBlockRequestStateResetSizeVaryReset">Block ''{0}'' contains states that require resetting whenever the input signal sizes vary. This block property is inconsistent with the block parameter setting for block ''{1}'' in subsystem ''{2}''. Specifically, the parameter ''Propagate sizes of variable-size signals'' is set to ''During execution''. Consider placing ''{3}'' inside an Enabled/Function-Call/Action/Resettable subsystem and setting the parameter ''Propagate sizes of variable-size signals'' for the corresponding control port block to: ''Only when enabling'' for an Enabled or a Function-Call Subsystem; ''Only when execution is resumed'' for an Action Subsystem; or ''Only when resetting'' for a Resettable Subsystem. Alternatively, change the ''Propagate sizes of variable-size signals'' parameter setting for ''{4}'' to ''Only when resetting''.</entry>
    <entry key="VarDimsSfcnRequireContiguous">The input port {0,number,integer} of S-Function block ''{1}'' is set to accept variable-size signals. The S-function ''{2}'' must call the method ''ssSetInputPortRequiredContiguous(S,port,true)''.</entry>
    <entry key="VarDimsMultiRateEnableNotSupported"> Simulink does not support the multirate enabled subsystem ''{0}'' as configured for a variable-size input. Since the subsystem ''{1}'' is multirate and the parameter ''Propagate sizes of variable-size signals'' of the control port ''{2}'' is set to ''Only when enabling'', this subsystem cannot accept any variable-size signals as input. Consider using a single-rate enabled subsystem instead.</entry>
    <entry key="VarDimsTrivialRTBNotAllowed">Rate Transition Block ''{0}'' cannot be used with a variable-size signal when the block parameter ''Ensure data integrity during data transfer'' is disabled. To eliminate this message, enable that parameter.</entry>
    <entry key="VarSTInpPortIsFrameBased">Input port {0,number,integer} of ''{1}'' is set to be frame-based even though this port has a variable sample time. Frame-based signals should have a discrete sample time.</entry>
    <!-- VectToMatrixConversionByBlock TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsFixIt.m -->
    <entry key="VectToMatrixConversionByBlock"><![CDATA[Mixture of 1-D array and 2-D vector (matrix) signals are driving ''{0}''. It has automatically converted the 1-D signals to 2-D vector signals.
      <actions exclusiveFixIts="yes">
        <action type="suggestion">Use a Reshape</action>
        <action cmd="matlab:configset.internal.fixIt(''{0}'',''VectorMatrixConversionMsg'',''none'')" type="fixit">Suppress this message by setting <sldiag objui="configset" objparam="VectorMatrixConversionMsg">Vector/matrix block input conversion</sldiag> to ''none''</action>
      </actions>]]>
    </entry>
    <entry key="VirtSubsysDoesNotHaveThis">Virtual subsystem ''{0}'' does not have a ''{1}''</entry>
    <entry key="VirtSubsysHasNoSList">Virtual subsystem ''{0}'' does not have a sorted list</entry>
    <entry key="WaitingForDisconnectResponse">A disconnect message was sent to the target {0,number,integer} seconds ago.  Waiting for response..</entry>
    <entry key="WaitingForFinalLogBufferTerminator">Received shutdown message from target {0,number,integer} seconds ago.  Waiting for final data logging buffer and logging terminator..</entry>

    <entry key="WarnAlgLoopsFound">Block diagram ''{0}'' contains {1,number,integer} algebraic loop(s). To see more details about the loops use the command &lt;a href=\"matlab:Simulink.BlockDiagram.getAlgebraicLoops(bdroot);\"&gt;Simulink.BlockDiagram.getAlgebraicLoops(''{2}'') &lt;/a&gt; or the command line Simulink debugger 
by typing &lt;a href=\"matlab:sldebug(bdroot);\"&gt;sldebug(''{3}'') &lt;/a&gt; in the MATLAB command window. To eliminate this message, set <![CDATA[<sldiag objui="configset" objparam="AlgebraicLoopMsg">Algebraic loop</sldiag>]]> to "none".</entry>

    <entry key="WarnAlgLoopsFoundInDebugger">Block diagram ''{0}'' contains {1,number,integer} algebraic loop(s). To get more information about the loops use the "ashow" commands in the command line Simulink debugger (sldebug)</entry>
    <entry key="WarnArtAlgLoopMdlPortDF">If the inport ''{0}'' of referenced model ''{1}'' involves direct feedback, then an algebraic loop exists, which Simulink cannot remove. Consider clearing the ''Minimize algebraic loop occurrences'' parameter to avoid this warning.</entry>
    <entry key="WarnArtAlgLoopSysPortDF">If the inport ''{0}'' of subsystem ''{1}'' involves direct feedback, then an algebraic loop exists, which Simulink cannot remove. Consider clearing the ''Minimize algebraic loop occurrences'' parameter to avoid this warning. </entry>
    <entry key="WarnForFrameUpgrade"><![CDATA[Block ''{0}'' uses the frame status of the signal. Update your model to move control of sample-based and frame-based processing from the frame status of the signal to the block dialog parameters. For help in resolving this and other upgrade issues, run the 'Check model for block upgrade issues requiring compile time information' check in <a href="matlab:{1}">the Simulink Upgrade Advisor</a>.\n\nTo identify user-created library blocks with frame upgrade issues, run the 'Check model for custom library blocks that rely on frame status of the signal' check in the Upgrade Advisor.\n\nFor general information about the changes to frame-based processing, see your product-specific Release Notes.]]></entry>
    <entry key="WarnForFrameObjUpgrade">Your model contains at least one Simulink.Signal object whose 'SamplingMode' setting is set to 'Frame based'. Please manually change it to 'auto'.</entry>
    <entry key="WidthNotMatchMatlab">The width of the given MATLAB array does not match that of the Simulink internal data</entry> 
    <entry key="kthDimensionsNotMatchMatlab">The {0,number,integer}-th dimensions of the given MATLAB array does not match that of the Simulink internal data</entry>
    <entry key="VariantChildSubsystemMustBeAtomic"><![CDATA[To generate preprocessor conditionals for the Variant Subsystem ''{0}'', its child Subsystems must be atomic Subsystems. The Variant child Subsystem ''{1}'' is a virtual Subsystem.<actions exclusiveFixIts="yes"><action cmd="matlab:slprivate(''variantfixes'',''VariantChildSubsystemMustBeAtomic'',''{0}'')" type="fixit">For all virtual Variant choices of ''{0}'', select the 'Treat as atomic unit' checkbox on the parameters dialog of the child subsystems</action></actions>]]></entry>
    <entry key="VariantChildSubsystemMustBeAtomic_Fix">The command 'set_param(child, 'TreatAsAtomicUnit', 'on')' is executed for these Subsystems:</entry>
    <entry key="VariantChildSimViewingDevice">The variant choice block ''{0}'' has "SimViewingDevice" parameter set to "on", which means it is removed during code generation, which conflicts with the 'Generate preprocessor conditionals' setting. Turn SimViewingDevice off to generate code.</entry>
    <entry key="VariantChildSubsystemMustBeNoConditional">To generate preprocessor conditionals for a Variant Subsystem, all child subsystems must be valid atomic subsystems. Variant child subsystem ''{0}'' is invalid as it is a conditional subsystem.</entry>
    <entry key="CodeVariantCannotContainCStates">Block ''{0}'' contains continuous states. Continuous states are not allowed in Variant Subsystem block ''{1}'' when configured to generate preprocessor conditionals.</entry>
    <entry key="NoConnectionPortsForCodeVariants">Connection Ports are not allowed in Variant Subsystem block ''{0}'' when generating preprocessor conditionals for a Variant Subsystem.</entry>
    <entry key="NoGlobalGPC">
      In release, R2015b, the "Generate preprocessor conditionals" global setting was removed
      from the Model Configuration Parameters > Code Generation (ert) > Interface pane.
      Generation of preprocessor conditionals is now a strict property of the individual
      variant blocks. You can run slConfigureVariantGPC(''{0}'',''{1}'') to transfer
      the prior release global setting to the individual variant blocks. This will make your model
      behave the same way it did in the prior version of Simulink. Alternatively, you
      can run set_param(''{2}'',''GeneratePreprocessorConditionals'',''Use local settings'') to
      eliminate this warning and then manually configure the individual variant blocks'
      "Generate preprocessor conditionals" setting.
    </entry>
    <entry key="InvalidConnFromInactiveVariant">Invalid connection, Goto block ''{0}'' resides in an inactive variant and is connected to From ''{1}'' block which is active.</entry>
    <entry key="SimStepperWrongStage"> Cannot call the method in the current stage. </entry>
    <entry key="SimStepperWrongMode">Cannot use SimStepper in the current simulation mode. As of now, SimStepper can only be used for models in normal mode.</entry>
    <entry key="SimStepperModelExistsWhileInit">The model ''{0}'' is already running.</entry> 
    <entry key="SimStepperOnlySingleTasking">Selection of the 'Configuration Parameters' > 'Solver' > 'Treat each discrete rate as a separate task' option is not supported in SimStepper.</entry>
<!-- Simple String fragments for use by engine in constructing messages. These are mainly used for constructing zero-crossing table where these values are keys -->
    <entry key="StringNumberConsecutiveZc">Number of consecutive zero-crossings</entry>
    <entry key="StringZcSignalName">Zero-crossing signal name</entry>
    <entry key="StringZcSignalIndex">Zero-crossing signal index</entry>
    <entry key="StringBlockType">Block type</entry>
    <entry key="StringBlockPath">Block path</entry>
    <entry key="StringTime">Time</entry>
    <entry key="StringReason">Reason</entry>
    <entry key="StringSuggestion">Suggestion</entry>
    <entry key="SparsePerturbationMayCauseProblem">For the model ''{0}'', the Solver Jacobian method parameter is set to Sparse perturbation. If the size of the model is large, this setting might cause slower simulation times or memory allocation errors. If you observe such issues, choose the Full perturbation method for this parameter.</entry>
    <entry key="NoAnalyticalSlvrJacobian">of the following reasons.\n{0}\n </entry>
    <entry key="NoAnalyticalJacobian">Block has no analytical jacobian</entry>
    <entry key="AnalyticalJacobianIsNotExact">Analytical jacobian is not exact</entry>
    <entry key="AnalyticalJacobianIsNotExactSuggestion">Turn off 'Treat as gain when linearizing' in the Block Parameters dialog box</entry>
<!-- Please pay attention to the [space] at the end of 'HasDataStoreForSlvrJacobian', 'TooMuchMemoryForSlvrJacobian'and 'EmptySlvrJacobian', they are necessary for the message format. -->
    <entry key="HasDataStoreForSlvrJacobian">there are data read or data write blocks in the model. </entry>
    <entry key="TooMuchMemoryForSlvrJacobian">too much memory will be required if the original method is selected. </entry>
    <entry key="UseFullPerturbationToAvoidMemoryError">There is insufficient memory for computing the pattern of the solver Jacobian matrix. To correct this error, set the ''Solver Jacobian method'' in the Solver pane of the Configuration Parameters dialog box to ''Full perturbation''.</entry>  
    <entry key="EmptySlvrJacobian">the solver Jacobian matrix is an empty matrix. </entry>
    <entry key="InvalidArraySize">Simulink supports signal size up to {0,number,integer} number of bytes. The signal size is calculated based on data type size, number of elements, and signal type (real/complex). The signal originated from output port {1,number,integer} of block ''{2}'' has a signal size greater than {0,number,integer}. Consider reducing the signal size before compiling or simulating the model.</entry>
    <entry key="InvalidBlockIOSize">Simulink supports total block I/O buffer size up to {0,number,integer} number of bytes. The total block I/O size is calculated based on data type size, number of elements, and signal type (real/complex) of all signals in the model. Consider reducing signal sizes before compiling or simulating the model.</entry>
    <entry key="InputPortStrLC">input port</entry>
    <entry key="OutputPortStrLC">output port</entry>
    <entry key="InvSignalDimensionSize">Simulink supports signal dimension size up to {0,number,integer}, which is the maximum allowable 32-bit signed integer value. The dimension size specified on or computed for {1} {2,number,integer} of ''{3}'' exceeds this limit. Consider reducing the signal size before compiling or simulating the model.</entry>
    <entry key="InvalidDWorkOffsetSize">Simulink supports discrete states/dwork size  up to {0,number,integer} number of bytes. It uses the size of each discrete state to calculate the offset needed for internal memory alignment.  The size of the offset is calculated based on data type size, number of elements, and type (real/complex). The computed offset of discrete state or dwork of the block ''{1}''  is greater than {2,number,integer}. Consider reducing the discrete state/dwork or the signal width before compiling or simulating the model.</entry>
    <entry key="InvalidVarDimsRootInportForEnabledModel">The root inport ''{0}'' has an output 
      that is a variable-size signal, this is not allowed
      because the model has a root-level Enable port ''{1}''.</entry>
    <entry key="InvalidVarDimsRootOutportForEnabledModel">The root outport ''{0}'' has an input 
      that is a variable-size signal, this is not allowed
      because the model has a root-level Enable port ''{1}''.</entry>
    <entry key="ParamNotAllowed">Cannot set parameter ''{0}'' to ''on' because it is not allowed ({1}: ''{2}'')</entry>
    <entry key="ParamNotAllowedGeneric">Cannot set parameter ''{0}'' because it is not allowed ({1}: ''{2}'')</entry>
    <entry key="Model">Model</entry>
    <entry key="Library">Library</entry>
    <entry key="STFNotSupported">The selected system target file ''{0}'' is not currently supported for concurrent execution.</entry>
    <entry key="SILPILNotSupportedForConcurrency">SIL and PIL modes currently do not support concurrent execution.</entry>
    <entry key="IDsLessThanDynamic">Cannot have IDs &lt; dynamic.</entry>
    <entry key="DynamicMixError">Cannot mix, always needed and dynamically needed</entry>
    <entry key="ConditionalMixError">Cannot have same conditional, ID for input and output ports</entry>
    <entry key="NoCompiledModel">No compiled model to terminate</entry>
    <entry key="UseTopModel">Cannot call this API on the referenced model ''{0}''.  Instead, use the topmost model in the compiled hierarchy: ''{1}''.</entry>
    <entry key="InvalidBlockDiagram">Invalid block diagram</entry>
    <entry key="UninitializedModel">Model is not initialized</entry>
    <entry key="ModelNotCompiledForQuery">Model is not compiled for this query</entry>
    <entry key="UnknownModel">Unknown Model</entry>
    <entry key="FixUseDblUsage">Detect obsolete usage of global variable 'FixUseDbl'.  To set the datatype override status, please set the parameter of 'DataTypeOverride' in the model or subsystem level</entry>
    <entry key="FixLogPrefUsage">Detect obsolete usage of global variable 'FixLogPref'.  To set the min/max/overflow logging status, please set the parameter of 'MinMaxOverflowLogging' in the model or subsystem level</entry>
    <entry key="InvalidRTWIndex">Internal Error: ''{0}'' has an invalid RTWIndex</entry>
    <entry key="NotCurrentNetList">Internal Error: ''{0}'' is not part of the current net-list.</entry>
    <entry key="CompRTWCGDiffRTWIndex">Internal Error: ''{0}'' has a different RTWIndex {1,number,integer} != {2,number,integer} than its first instance ''{3}''.</entry>
    <entry key="CompRTWCGDiffInputType">Internal Error: ''{0}'' has a different input type {1,number,integer} != {2,number,integer} than its first instance ''{3}''.</entry>
    <entry key="CompRTWCGDiffOutputType">Internal Error: ''{0}'' has a different output type {1,number,integer} != {2,number,integer} than its first instance ''{3}''.</entry>
    <entry key="SubsystemHiddenParameterImproperlyAccessed">Using a testing get_param that is valid only if you do model([],[],[],'compileForRTW') first.</entry>
    <entry key="VirtualSubsystemHiddenParameterImproperlyAccessed">Using a testing get_param that is valid only for a non-virtual subsystem.</entry>
    <entry key="RealizingTransformedBlocksIsDebugOnly">Realizing blocks from the transformed graph into the visible graph is a feature to be used only in internal debugging and testing.</entry>
    <entry key="ShadowedModelName">Shadowed Model Name</entry>
    <entry key="CannotInitMLSysForCodeGen">Model ''{0}'' contains one or more MATLAB System blocks and is configured to load initial states. This capability is only supported for Normal mode.
    </entry>
    <entry key="ConflictingEnumerationAlreadyPresentInModelReference">
        Enumeration ''{0}'' used to output state activity inside reference model {1} conflicts
        with an enumeration used to output state activity inside reference model {2}.
    </entry>
    <entry key="DisableVolatileCSCForCPPClass">The usage of custom storage class ''{0}'' with C++ class code generation is not supported, because the custom storage class uses a ''Volatile'' specification.</entry>
    <entry key="DisableOtherTypeCSCForCPPClass">The usage of C++ class code generation with custom storage class ''{0}'' is not supported, because the custom storage class'' CSCType is ''Other''.</entry>
    <entry key="DisableVolatileMemSecForCPPClass">The usage of memory section ''{0}'' for parameter ''{1}'' with C++ class code generation is not supported, because the memory section uses a ''Volatile'' specification.</entry>


    <!-- The followings are CCF Format related messages, no need to be translated -->
    <entry key="MxArrayIsNotSparse" translate="false">
      The matrix is not sparse.
    </entry>
    <entry key="PrArrayIsNULL" translate="false">
      Its Pr array is NULL.
    </entry>
    <entry key="PiArrayIsNULL" translate="false">
      Its Pi array is NULL.
    </entry>
    <entry key="IrArrayIsNULL" translate="false">
      Its Ir array is NULL.
    </entry>
    <entry key="JcArrayIsNULL" translate="false">
      Its Jc array is NULL.
    </entry>
    <entry key="PrArrayIsNotZero" translate="false">
      Its Pr array is Pr = '{'{0}'}' now. However, it should be Pr = '{'0'}'.
    </entry>
    <entry key="PiArrayIsNotZero" translate="false">
      Its Pi array is Pi = '{'{0}'}' now. However, it should be Pi = '{'0'}'.
    </entry>
    <entry key="IrArrayIsNotZero" translate="false">
      Its Ir array is Ir = '{'{0}'}' now. However, it should be Ir = '{'0'}'.
    </entry>
    <entry key="JcArrayNotOneZero" translate="false">
      Its Jc array is Jc = '{'{0}'}' now. However, it should be Jc = '{'0'}'.
    </entry>
    <entry key="JcArrayTailWrong" translate="false">
      The last element of Jc array does not equal to nzmax. nCols == {0}, Jc[nCols] == {1}, nzmax == {2}. 
    </entry>
    <entry key="AllZeroButNzmax" translate="false">
      Its Ir and Jc arrays'' elements are all zero, but nzmax is {0}.
    </entry>
    <entry key="PassFormatCheck" translate="false">
      Pass the check.
    </entry>
    
    <entry key="IrArrayWrongOrder" translate="false">
      The order of element in Ir array's is wrong at row {0} (the first row's index is 0).
    </entry>
    <entry key="JcArrayWrongOrder" translate="false">
      Jc[{0}] is larger than Jc[{1}].
    </entry>

    <entry key="JcArrayNotAllZero" translate="false">
      Its Jc array has Jc[{0}] == {1}. However, Jc should be a all zero array.
    </entry>
    <entry key="JcArrayHeadWrong" translate="false">
      Its nzmax > 0, the Jc array has Jc[0] = {0} now. However, there should always be Jc[0] = 0.   
    </entry>

    <entry key="NzmaxNotMatch" translate="false">
      Its Jc[nCols] == 0, nzmax == {0}. However, there should be Jc[nCols] == nzmax or Jc[nCols] == 0, nzmax == 1. 
    </entry>

    <entry key="StateOwnerRequirementsForStateReader">Block ''{0}'' has attributes or configurations that are not supported by State Reader block ''{1}''.</entry>
    <entry key="StateOwnerRequirementsForStateWriter">Block ''{0}'' has attributes or configurations that are not supported by State Writer block ''{1}''.</entry>
    <entry key="StateOwnerFrameInput">Block ''{0}'' has frame-based signal at input port {1,number,integer}.</entry>
    <entry key="StateOwnerFrameOutput">Block ''{0}'' has frame-based signal at output port {1,number,integer}.</entry>
    <entry key="StateOwnerVarDimsInput">Block ''{0}'' has variable-size signal at input port {1,number,integer}.</entry>
    <entry key="StateOwnerVarDimsOutput">Block ''{0}'' has variable-size signal at output port {1,number,integer}.</entry>
    <entry key="StateOwnerVirtualBusInput">Block ''{0}'' has virtual bus signal at input port {1,number,integer}. Consult documentation to see if block ''{2}'' supports non-virtual buses.</entry>
    <entry key="StateOwnerVirtualBusOutput">Block ''{0}'' has virtual bus signal at output port {1,number,integer}. Consult documentation to see if block ''{2}'' supports non-virtual buses.</entry>
    <entry key="StateOwnerStatePort">Block ''{0}'' has a state port.</entry>
    <entry key="StateOwnerResetPort">Block ''{0}'' has a reset port.</entry>
    <entry key="StateOwnerInitCondPort">Block ''{0}'' has an initial condition port.</entry>
    <entry key="StateOwnerInSubsystemResettingStates">Block ''{0}'' is inside a subsystem that can reset states such as a Resettable Subsystem or an Enabled Subsystem with parameter ''States when enabling'' of the Enable Port block set to ''reset''.</entry>
    <entry key="StateOwnerFrameBasedProcessing">Block ''{0}'' has parameter ''Input processing'' set to ''Columns as channels (frame based)''. Consider setting the parameter to ''Elements as channels (sample based)''.</entry>
    <entry key="StateOwnerCircularBuffer">Block ''{0}'' must have parameter ''Use circular buffer for state'' unchecked.</entry>
    <entry key="StateOwnerZeroDelay">Block ''{0}'' has parameter ''Delay length'' set to 0.</entry>
    <entry key="StateOwnerDiscIntegratorICMode">Discrete-Time Integrator block ''{0}'' must have parameter ''Initial condition setting'' set to ''State (most efficient)''.</entry>
    <entry key="StateOwnerDiscIntegratorLimitOutput">Discrete-Time Integrator block ''{0}'' must have parameter ''Limit output'' unchecked.</entry>
    <entry key="StateAccessForOutportResetWhenDisabled">Outport block ''{0}'' must have parameter ''Output when disabled'' set to ''held''.</entry>
    <entry key="StateAccessForOutportInheritIC">Outport block ''{0}'' is inheriting its initial output value from its source(s). To correct this problem, set the parameter ''Initial output'' of the Outport block to a value other than empty matrix ([]).</entry>
    <entry key="StateAccessForMessageOutport">Outport block ''{0}'' is outputting a message.</entry>
    <entry key="StateAccessForMergedOutport">The subsystem output corresponding to the Outport block ''{0}'' is connected to a Merge block. To correct this problem, change the state owner block for each State Reader or State Writer block to the root Merge block ''{1}'' instead.</entry>
    <entry key="StateAccessForCompleteMergedOutport">The subsystem output corresponding to the Outport block ''{0}'' is connected to the Merge block ''{1}''. The memory of this Merge block is being written to by alternately executing subsystems with completely complimentary control logic. The Merge block''s memory is not persistent in this case and therefore cannot serve as a state.</entry> 
    <entry key="StateAccessForNonRootMerge">Merge block ''{0}'' is driving another Merge block. To correct this problem, change the state owner block for each State Reader or State Writer block to the root Merge block ''{1}'' instead.</entry>
    <entry key="StateAccessForCompleteRootMerge">The memory of Merge block ''{0}'' is being written to by alternately executing subsystems with completely complimentary control logic. The Merge block''s memory is not persistent in this case and therefore cannot serve as a state.</entry>
    <entry key="StateAccessForNonRootMergeWithCompleteRootMerge">Merge block ''{0}'' is driving the root Merge block ''{1}''. The memory of this root Merge block is being written to by alternately executing subsystems with completely complimentary control logic. The root Merge block''s memory is not persistent in this case and therefore cannot serve as a state.</entry> 
    <entry key="StateAccessForSignedTriggerPort">For Trigger Port block ''{0}'', the data type ''{1}'' of the corresponding parent subsystem trigger port is signed. Consider using unsigned data type such as ''boolean'' or ''uint32''.</entry>
    <entry key="StateAccessForEitherRisingOrFallingTriggerPort">Trigger Port block ''{0}'' must have parameter ''Initial trigger signal state'' set to ''zero'' or ''positive'' when parameter ''Trigger type'' is set to ''either'' in order to support State Reader or State Writer blocks.</entry>
    <entry key="StateOwnerFcnCall">The state of block ''{0}'' is of data type function-call. State Reader and State Writer blocks do not support function-call.</entry>
    <entry key="StateOwnerEmptyStates">The state of block ''{0}'' is empty.</entry>
    <entry key="InconsistentStateReaderDims">State dimensions {0} computed by block ''{1}'' is inconsistent with output signal dimensions {2} computed by State Reader block ''{3}''.</entry>
    <entry key="InconsistentStateWriterDims">State dimensions {0} computed by block ''{1}'' is inconsistent with input signal dimensions {2} computed by State Writer block ''{3}''.</entry>
    <entry key="InconsistentDefaultStateReaderDims">Simulink used heuristics to determine signal dimensions for block ''{0}'' due to underspecification. However, the resulting state dimensions {1} computed by this block is inconsistent with output signal dimensions {2} computed by State Reader block ''{3}''. Consider specifying dimensions for all input and output signals of block ''{4}'' fully to avoid this problem.</entry>
    <entry key="InconsistentDefaultStateWriterDims">Simulink used heuristics to determine signal dimensions for block ''{0}'' due to underspecification. However, the resulting state dimensions {1} computed by this block is inconsistent with input signal dimensions {2} computed by State Writer block ''{3}''. Consider specifying dimensions for all input and output signals of block ''{4}'' fully to avoid this problem.</entry>
    <entry key="InconsistentStateReaderDataType">State data type ''{0}'' computed by block ''{1}'' is inconsistent with output signal data type ''{2}'' computed by State Reader block ''{3}''.</entry>
    <entry key="InconsistentStateWriterDataType">State data type ''{0}'' computed by block ''{1}'' is inconsistent with input signal data type ''{2}'' computed by State Writer block ''{3}''.</entry>
    <entry key="InconsistentDefaultStateReaderDataType">Simulink used heuristics to determine signal data types for block ''{0}'' due to underspecification. However, the resulting state data type ''{1}'' computed by this block is inconsistent with output signal data type ''{2}'' computed by State Reader block ''{3}''. Consider specifying data type for all input and output signals of block ''{4}'' fully to avoid this problem.</entry>
    <entry key="InconsistentDefaultStateWriterDataType">Simulink used heuristics to determine signal data types for block ''{0}'' due to underspecification. However, the resulting state data type ''{1}'' computed by this block is inconsistent with input signal data type ''{2}'' computed by State Writer block ''{3}''. Consider specifying data type for all input and output signals of block ''{4}'' fully to avoid this problem.</entry>
    <entry key="InconsistentStateReaderComplexSignal1">State signal type ''real'' computed by block ''{0}'' is inconsistent with output signal type ''complex'' computed by State Reader block ''{1}''.</entry>
    <entry key="InconsistentStateReaderComplexSignal2">State signal type ''complex'' computed by block ''{0}'' is inconsistent with output signal type ''real'' computed by State Reader block ''{1}''.</entry>
    <entry key="InconsistentStateWriterComplexSignal1">State signal type ''real'' computed by block ''{0}'' is inconsistent with input signal type ''complex'' computed by State Writer block ''{1}''.</entry>
    <entry key="InconsistentStateWriterComplexSignal2">State signal type ''complex'' computed by block ''{0}'' is inconsistent with input signal type ''real'' computed by State Writer block ''{1}''.</entry>
    <entry key="InconsistentDefaultStateReaderComplexSignal1">Simulink used heuristics to determine signal types for block ''{0}'' due to underspecification. However, the resulting state signal type ''real'' computed by this block is inconsistent with output signal type ''complex'' computed by State Reader block ''{1}''. Consider specifying signal type for all input and output signals of block ''{2}'' fully to avoid this problem.</entry>
    <entry key="InconsistentDefaultStateReaderComplexSignal2">Simulink used heuristics to determine signal types for block ''{0}'' due to underspecification. However, the resulting state signal type ''complex'' computed by this block is inconsistent with output signal type ''real'' computed by State Reader block ''{1}''. Consider specifying signal type for all input and output signals of block ''{2}'' fully to avoid this problem.</entry>
    <entry key="InconsistentDefaultStateWriterComplexSignal1">Simulink used heuristics to determine signal types for block ''{0}'' due to underspecification. However, the resulting state signal type ''real'' computed by this block is inconsistent with input signal type ''complex'' computed by State Writer block ''{1}''. Consider specifying signal type for all input and output signals of block ''{2}'' fully to avoid this problem.</entry>
    <entry key="InconsistentDefaultStateWriterComplexSignal2">Simulink used heuristics to determine signal types for block ''{0}'' due to underspecification. However, the resulting state signal type ''complex'' computed by this block is inconsistent with input signal type ''real'' computed by State Writer block ''{1}''. Consider specifying signal type for all input and output signals of block ''{2}'' fully to avoid this problem.</entry>
    <entry key="SFcnStateWidthChangeInMdlSetWorkWidths">The width of work vector ''{0}'' in S-Function block ''{1}'' changes from {2,number,integer} in mdlInitializeSizes to {3,number,integer} in mdlSetWorkWidths. Consider removing the call to ssSetDWorkWidth from mdlSetWorkWidths or ensure that ssSetDWorkWidth sets the width to DYNAMICALLY_SIZED in mdlInitializeSizes for this work vector.</entry>
    <entry key="SFcnStateDataTypeChangeInMdlSetWorkWidths">The data type of work vector ''{0}'' in S-Function block ''{1}'' changes from ''{2}'' in mdlInitializeSizes to ''{3}'' in mdlSetWorkWidths. Consider removing the call to ssSetDWorkDataType from mdlSetWorkWidths or ensure that ssSetDWorkDataType sets the data type to DYNAMICALLY_TYPED in mdlInitializeSizes for this work vector.</entry>
    <entry key="SFcnStateComplexSignalChangeInMdlSetWorkWidths1">Signal type of work vector ''{0}'' in S-Function block ''{1}'' changes from ''real'' in mdlInitializeSizes to ''complex'' in mdlSetWorkWidths. Consider removing the call to ssSetDWorkComplexSignal from mdlSetWorkWidths or ensure that ssSetDWorkComplexSignal sets the signal type to DYNAMICALLY_TYPED in mdlInitializeSizes for this work vector.</entry>
    <entry key="SFcnStateComplexSignalChangeInMdlSetWorkWidths2">Signal type of work vector ''{0}'' in S-Function block ''{1}'' changes from ''complex'' in mdlInitializeSizes to ''real'' in mdlSetWorkWidths. Consider removing the call to ssSetDWorkComplexSignal from mdlSetWorkWidths or ensure that ssSetDWorkComplexSignal sets the signal type to DYNAMICALLY_TYPED in mdlInitializeSizes for this work vector.</entry>
    <entry key="InconsistentStateReaderDimsSFcn">Dimensions {0} of the work vector ''{1}'' in S-Function block ''{2}'' is inconsistent with output signal dimensions {3} of State Reader block ''{4}''. Consider moving the call to ssSetDWorkWidth from mdlSetWorkWidths to mdlInitializeSizes for this work vector. Alternatively, ensure that the output port of the State Reader block has matching dimensions, e.g. by using Signal Specification block.</entry>
    <entry key="InconsistentStateReaderDimsSFcnDefault">Simulink used heuristics to determine the dimensions {0} for the work vector ''{1}'' in S-Function block ''{2}''. However, the result is inconsistent with output signal dimensions {3} of State Reader block ''{4}''. Consider using ssSetDWorkWidth in mdlInitializeSizes or mdlSetWorkWidths to specify dimensions for this work vector.</entry>
    <entry key="InconsistentStateWriterDimsSFcnDefault">Simulink used heuristics to determine the dimensions {0} for the work vector ''{1}'' in S-Function block ''{2}''. However, the result is inconsistent with input signal dimensions {3} of State Writer block ''{4}''. Consider using ssSetDWorkWidth in mdlInitializeSizes or mdlSetWorkWidths to specify dimensions for this work vector.</entry>
    <entry key="InconsistentStateReaderDataTypeSFcn">Data type ''{0}'' of the work vector ''{1}'' in S-Function block ''{2}'' is inconsistent with output signal data type ''{3}'' of State Reader block ''{4}''. Consider moving the call to ssSetDWorkDataType from mdlSetWorkWidths to mdlInitializeSizes for this work vector. Alternatively, ensure that the output port of the State Reader block has matching data type, e.g. by using Signal Specification block.</entry>
    <entry key="InconsistentStateWriterDataTypeSFcn">Data type ''{0}'' of the work vector ''{1}'' in S-Function block ''{2}'' is inconsistent with input signal data type ''{3}'' of State Writer block ''{4}''. Consider moving the call to ssSetDWorkDataType from mdlSetWorkWidths to mdlInitializeSizes for this work vector. Alternatively, ensure that the input port of the State Writer block has matching data type, e.g. by using Signal Specification block.</entry>
    <entry key="InconsistentStateReaderDataTypeSFcnDefault">Simulink used heuristics to determine the data type ''{0}'' for the work vector ''{1}'' in S-Function block ''{2}''. However, the result is inconsistent with output signal data type ''{3}'' of State Reader block ''{4}''. Consider using ssSetDWorkDataType in mdlInitializeSizes or mdlSetWorkWidths to specify data type for this work vector.</entry>
    <entry key="InconsistentStateWriterDataTypeSFcnDefault">Simulink used heuristics to determine the data type ''{0}'' for the work vector ''{1}'' in S-Function block ''{2}''. However, the result is inconsistent with input signal data type ''{3}'' of State Writer block ''{4}''. Consider using ssSetDWorkDataType in mdlInitializeSizes or mdlSetWorkWidths to specify data type for this work vector.</entry>
    <entry key="InconsistentStateReaderComplexSignalSFcn1">Signal type ''real'' of the work vector ''{0}'' in S-Function block ''{1}'' is inconsistent with output signal type ''complex'' of State Reader block ''{2}''. Consider moving the call to ssSetDWorkComplexSignal from mdlSetWorkWidths to mdlInitializeSizes for this work vector. Alternatively, ensure that the output port of the State Reader block has matching signal type, e.g. by using Signal Specification block.</entry>
    <entry key="InconsistentStateReaderComplexSignalSFcn2">Signal type ''complex'' of the work vector ''{0}'' in S-Function block ''{1}'' is inconsistent with output signal type ''real'' of State Reader block ''{2}''. Consider moving the call to ssSetDWorkComplexSignal from mdlSetWorkWidths to mdlInitializeSizes for this work vector. Alternatively, ensure that the output port of the State Reader block has matching signal type, e.g. by using Signal Specification block.</entry>
    <entry key="InconsistentStateWriterComplexSignalSFcn1">Signal type ''real'' of the work vector ''{0}'' in S-Function block ''{1}'' is inconsistent with input signal type ''complex'' of State Writer block ''{2}''. Consider moving the call to ssSetDWorkComplexSignal from mdlSetWorkWidths to mdlInitializeSizes for this work vector. Alternatively, ensure that the input port of the State Writer block has matching signal type, e.g. by using Signal Specification block.</entry>
    <entry key="InconsistentStateWriterComplexSignalSFcn2">Signal type ''complex'' of the work vector ''{0}'' in S-Function block ''{1}'' is inconsistent with input signal type ''real'' of State Writer block ''{2}''. Consider moving the call to ssSetDWorkComplexSignal from mdlSetWorkWidths to mdlInitializeSizes for this work vector. Alternatively, ensure that the input port of the State Writer block has matching signal type, e.g. by using Signal Specification block.</entry>
    <entry key="InconsistentStateReaderComplexSignalSFcnDefault1">Simulink used heuristics to determine the signal type ''real'' for the work vector ''{0}'' in S-Function block ''{1}''. However, the result is inconsistent with output signal type ''complex'' of State Reader block ''{2}''. Consider using ssSetDWorkComplexSignal in mdlInitializeSizes or mdlSetWorkWidths to specify the signal type for this work vector.</entry>
    <entry key="InconsistentStateReaderComplexSignalSFcnDefault2">Simulink used heuristics to determine the signal type ''complex'' for the work vector ''{0}'' in S-Function block ''{1}''. However, the result is inconsistent with output signal type ''real'' of State Reader block ''{2}''. Consider using ssSetDWorkComplexSignal in mdlInitializeSizes or mdlSetWorkWidths to specify the signal type for this work vector.</entry>
    <entry key="InconsistentStateWriterComplexSignalSFcnDefault1">Simulink used heuristics to determine the signal type ''real'' for the work vector ''{0}'' in S-Function block ''{1}''. However, the result is inconsistent with input signal type ''complex'' of State Writer block ''{2}''. Consider using ssSetDWorkComplexSignal in mdlInitializeSizes or mdlSetWorkWidths to specify the signal type for this work vector.</entry>
    <entry key="InconsistentStateWriterComplexSignalSFcnDefault2">Simulink used heuristics to determine the signal type ''complex'' for the work vector ''{0}'' in S-Function block ''{1}''. However, the result is inconsistent with input signal type ''real'' of State Writer block ''{2}''. Consider using ssSetDWorkComplexSignal in mdlInitializeSizes or mdlSetWorkWidths to specify the signal type for this work vector.</entry>
    <!-- InvMcosObjectForInitState TopTester: test/toolbox/simulink/configsets/highlighting/DVHyperlinks/tSLEngineErrorsHotLinks.m -->
    <entry key="InvMcosObjectForInitState"><![CDATA[Cannot load initial states for model ''{0}'' from MATLAB object specified in <sldiag objui="configset" objparam="InitialState">Initial state</sldiag>. To specify the initial state using a MATLAB object, use a non-empty scalar object of type Simulink.SimState.ModelSimState.]]></entry>
    <entry key="SimModeNormal">normal</entry>
    <entry key="SimModeAccelerated">accelerator</entry>
    <entry key="SimModeRapidAccel">rapid-accelerator</entry>
    <entry key="SimModeSIL">software-in-the-loop (sil)</entry>
    <entry key="SimModePIL">processor-in-the-loop (pil)</entry>
    <entry key="SimModeExternal">external</entry>
    <entry key="NormalModeOptimizationAuto">auto</entry>
    <entry key="NormalModeOptimizationInitialization">initialization</entry>
    <entry key="NormalModeOptimizationExecution">execution</entry>
    <entry key="AutoOnOffAuto">auto</entry>
    <entry key="AutoOnOffOn">on</entry>
    <entry key="AutoOnOffOff">off</entry>
    <entry key="ClearAccelCacheNone">None</entry>
    <entry key="ClearAccelCacheMemory">Memory</entry>
    <entry key="ClearAccelCacheAll">All</entry>
    <entry key="SimRollbackUninitialized">uninitialized</entry>
    <entry key="SimRollbackCompliant">compliant</entry>
    <entry key="SimRollbackNonCompliantNeutral">noncompliant-neutral</entry>
    <entry key="SimRollbackNonCompliantFatal">noncompliant-fatal</entry>
    <entry key="RapidAccelSimStatusInactive">inactive</entry>
    <entry key="RapidAccelSimStatusDormant">dormant</entry>
    <entry key="RapidAccelSimStatusStarting">starting</entry>
    <entry key="RapidAccelSimStatusEditing">editing</entry>
    <entry key="RapidAccelSimStatusInitializing">initializing</entry>
    <entry key="RapidAccelSimStatusBuilding">building</entry>
    <entry key="RapidAccelSimStatusUpdating">updating</entry>
    <entry key="RapidAccelSimStatusConnecting">connecting</entry>
    <entry key="RapidAccelSimStatusRunning">running</entry>
    <entry key="RapidAccelSimStatusTerminating">terminating</entry>
    <entry key="RapidAccelMenuSimStatusUnused">unused</entry>
    <entry key="RapidAccelMenuSimStatusReady">ready</entry>
    <entry key="RapidAccelMenuSimStatusActive">active</entry>
    <entry key="RapidAccelMenuSimStatusPassed">passed</entry>
    <entry key="RapidAccelMenuSimStatusFailed">failed</entry>
    <entry key="RapidAccelCmdlSim">cmdlsim</entry>
    <entry key="RapidAccelMenuSim">menusim</entry>
    <entry key="RapidAccelCmdlBuildOnly">buildonly</entry>
    <entry key="IncompleteVarUsageInfo">Variable usage information may be incomplete. Model must be initialized in FastRestart to get complete list of non-tunable variables</entry>
    <entry key="NonTunableVarChangedInFastRestart">Variable ''{0}'' was changed but it is used in a nontunable parameter in ''{1}''. The new value will not be used since the model is initialized with Fast Restart. Switch off Fast Restart if you would like to use the new value. </entry>
    <entry key="NonTunableVarChanged">Variable ''{0}'' was changed but it is used in a nontunable parameter in ''{1}''. The new value will not be used in the current simulation. Restart the simulation if you would like to use the new value. </entry>
    <entry key="NonTunableVarChangedMaxWarnings">Additional variables used in nontunable parameters were changed but were not reported to limit the number of warning messages</entry>
    <entry key="WarnModelClose">The model {0} has been closed during compilation or simulation.</entry>
    <entry key="SlFcnFpcUnsupportedVoidPtr">Argument ''{0}'' of the Simulink Function ''{1}'' is configured with ''void*'' type. AUTOSAR code generation supports this only for Function Caller blocks. For AUTOSAR targets, Function Caller blocks that are mapped to certain non-volatile memory (NvM) operations are automatically configured with the ''void*'' argument type; In that case, the corresponding Simulink Function block can only be defined for simulation.</entry>
    <entry key="RTWDataTypeHeaderFileIdConflict">Unable to generate code using type ''{0}'' because the header file specified ''{1}'' which conflicts with a file generated by the model.</entry>
    <entry key="DiscontigRootOutportWithExplicitVirtualSpec">The root Outport block ''{0}'' has the parameter ''{1}'' set to ''on''. Ensure that the connection from the source output port to the Outport block is a straight full port connection without any element reordering or selection. Alternatively, consider inserting a Signal Conversion block at the input port of the Outport block or setting the parameter for the Outport block to ''off''.</entry>
    <entry key="DiscontigInitResetTermRootOutport">The root Outport block ''{0}'' must be virtual because its source signal originates from block ''{1}'' output port {2,number,integer} inside an Initialize, Terminate, or Reset Function block. Ensure that the connection from the source output port to the Outport block is a straight full port connection without any element reordering or selection.</entry>
    <entry key="BufferRequiredOnOutportWithExplicitVirtualSpec">The Outport block''{0}'' has the parameter ''{1}'' set to ''on''. However, Simulink determined that a signal buffer is required for the outport block. Ensure that the connection from the source output port to the Outport block is a straight full port connection without any element reordering or selection. Alternatively, consider inserting a Signal Conversion block at the input port of the Outport block or setting the parameter for the Outport block to ''off''.</entry>
    <entry key="NoBranchingOnOutportWithEnsureVirtualSpec">Invalid connection to Outport block ''{0}'' from the source block ''{1}'' output port {2,number,integer}. The Outport block has the parameter ''{3}'' set to ''on'' so that the source signal cannot be branched.</entry>
    <entry key="BufferRequiredOnInitResetTermOutport">Simulink determined that a signal buffer is required for the Outport block ''{0}''. To avoid this problem, ensure that the connection from the source output port to the Outport block is a straight full port connection without any element reordering or selection.Alternatively, consider inserting a Signal Conversion block at the input port of the Outport block.</entry>
    <entry key="NoBranchingOnInitResetTermOutport">Invalid connection to Outport block ''{0}'' from the source block ''{1}'' output port {2,number,integer}. The source signal of an Outport block in an Initialize, Reset, or Terminate Function block cannot be branched.</entry>
    <entry key="BufferRequiredOnInitResetTermParentOutport">The Outport block ''{0}'' must be virtual because its source signal originates from block ''{1}'' output port {2,number,integer} inside an Initialize, Terminate, or Reset Function block. However, Simulink determined that a signal buffer is required at some point along this connection path. Ensure that the connection from the source output port to the Outport block is a straight full port connection without any element reordering or selection.</entry>
    <entry key="NoBranchingOnInitResetTermParentOutport">Invalid connection to Outport block ''{0}'' from the source block ''{1}'' output port {2,number,integer}. The source signal cannot be branched because it originates from an Initialize, Reset, or Terminate Function block.</entry>
    <entry key="NonEmptyICOnInitResetTermParentOutport">The Outport block ''{0}'' cannot have an initial output value because its source signal originates from block ''{1}'' output port {2,number,integer} inside an Initialize, Terminate, or Reset Function block. To correct this problem, set the parameter ''{3}'' of the Outport block to ''on''. Alternatively, set the parameter ''Initial output'' of the Outport block to empty matrix ([]).</entry>
    <entry key="ReusableSSDrivingRootOutportWithEnsureVirtualSpec">Cannot ensure the Outport block ''{0}'' is virtual in the generated code because it is driven by subsystem ''{1}'' that has been configured to generate a reusable function.  To correct this problem, set the parameter ''Function packaging'' of the subsystem to ''Inline'' or ''Nonreusable function''. Alternatively, set the parameter ''{2}'' of the Outport block to ''off''.</entry> 
    <entry key="ReusableSSDrivingInitResetTermRootOutport">Cannot ensure the Outport block ''{0}'' is virtual in the generated code because it is driven by subsystem ''{1}'' that has been configured to generate a reusable function. To correct this problem, set the parameter ''Function packaging'' of the subsystem to ''Inline'' or ''Nonreusable function''.</entry>
    <entry key="NoDataConnectorRootOutportWithEnsureVirtualSpec">Cannot ensure the root Outport block ''{0}'' is virtual in the generated code. To correct this problem, set the  parameter ''{1}'' of the Outport block to ''off''.</entry>
    <entry key="NoDataConnectorInitResetTermRootOutport">The root Outport block ''{0}'' must be virtual because its source signal originates from an Initialize, Terminate, or Reset Function block. However, this condition cannot be guaranteed in the generated code. Please contact MathWorks for assistance with this error message</entry>
    <entry key="InitResetTermNeedSimplifiedInitMode"><![CDATA[The Initialize, Reset, or Terminate Function block ''{0}'' requires simplified initialization mode. On the All Parameters tab of the Configuration Parameters dialog box for model ''{1}'', set <sldiag objui="configset" objparam="UnderspecifiedInitializationDetection">Underspecified initialization detection</sldiag> to ''Simplified''. For a large or complex model, use the Model Advisor check ''Check consistency of initialization parameters for Outport and Merge blocks'' to help with this task.]]></entry>
    <entry key="InvalidVariableSizeSignalForRootOutport"> Outport block ''{0}'' has a signal object with non-auto storage class. But it is driven by a variable size signal. Currently a variable size signal is not allowed in such a case. </entry>
  </message>
</rsccat>
<!--
   LocalWords:  xml UTF CDATA sle Acc uncheck preactivation ashow DTYPE PWork
   LocalWords:  DSTATES RWORK IWORK PWORK datatypes testpoint Jc nonvirtual Tmp
   LocalWords:  Sgnl UDI uploadable dworks extmode Intrf matfile Inp subsys slx
   LocalWords:  DF directfeed HMI slfeature suboption DSTATE TRIGSS unapplied
   LocalWords:  SCD scrollbar Ds linearizing Metadata grt uncompiled th SIL IOs
   LocalWords:  TIMESPAN DWork Dlg overwritable discontiguous PLC datatype DFS
   LocalWords:  reusability bitfields UDD AUTOSAR Bitsets bitsets Prms RTWCPP
   LocalWords:  aliasedthrough tunabilities sfundemo superset WKS resave slvr
   LocalWords:  Zcs hmin Demuxes sfunction unselecting Nonreused nonreused FPC
   LocalWords:  TFL UI pri modelname nondiscrete noncustom Unbuffer TIMESOURCE
   LocalWords:  demultiplexed runable BASERATE ZCs Zc FCNCALL subsystem's sil
   LocalWords:  Nonreusable RSim RTP rtp GPC pil noncompliant cmdlsim menusim
     LocalWords:  buildonly Nv
 -->
