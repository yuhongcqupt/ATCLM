<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2009-2012 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="Simulink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../matlab/resources/schema/msgcat.xsd">
  <message>
    <entry key="InheritStatesNotAllowedInRoot">Invalid setting specified for the "States when enabling" parameter of the trigger port block ''{0}''.  The block must not specify this parameter as ''inherit'' because the block is at the root level of the block diagram</entry>
    <entry key="InheritStatesNotAllowedFromRoot">Invalid setting specified for the "States when enabling" parameter of the trigger port block ''{0}''. The block must not specify this parameter as ''inherit'' because the function-call subsystem ''{1}'' is not allowed to derive "States when enabling" parameter from root system (directly or indirectly) when the model contains a root Inport block that outputs a function-call signal.</entry>
    <entry key="SfInheritStatesNotAllowedFromRoot">Invalid setting specified for the "States when enabling" parameter of the Stateflow block ''{0}''. The block must not specify this parameter as ''inherit'' because it is not allowed to derive "States when enabling" parameter from root system (directly or indirectly) when the model contains a root Inport block that outputs a function-call signal.</entry>
    <entry key="InvICForOutportWithFC">''{0}'' cannot specify an initial output because one or more of its source elements is from a function-call output port</entry>
    <entry key="InvInitialOutputForOutport">''{0}'' cannot specify a nonzero initial output for a grounded (0.0) signal, or an unconnected input port</entry>
    <entry key="InvStaticConnToOutport">Outport ''{0}'' cannot be configured to have initial output when it is driven by a block with a static (unchangeable) output.  For this class of connections, the initial output of the outport must be specified as the empty matrix []</entry>
    <entry key="MixedStateResetSemantics">Function-call subsystem ''{0}'' inherits its state reset semantics, yet its ancestors specifying ambiguous semantics. ''{1}'' indicates ''held'' while ''{2}'' indicates ''reset''. These ancestors need to consistently indicate that states are either held or reset upon enable</entry>
    <entry key="MixedStateResetSemantics1">Function-call subsystem ''{0}'' inherits its state reset semantics, yet its ancestors specifying ambiguous semantics. The root model indicates ''held'' while ''{1}'' indicates ''reset''.  These ancestors need to consistently indicate that states are either held or reset upon enable</entry>
    <entry key="NoEnabWithReset">A reset port already exists in subsystem ''{0}''.  Addition of an enable port is not allowed.</entry>
    <entry key="NoEnabWithStEnab">An state enable port already exists in subsystem ''{0}''.  Addition of an enable port is not allowed.</entry>
    <entry key="NoEnabWithTrigFcnCall">Enable ports are not allowed with function-call triggered ''{0}'' subsystem.</entry>
    <entry key="NoResetWithEnab">An enable port already exists in subsystem ''{0}''.  Addition of a reset port is not allowed.</entry>
    <entry key="NoResetWithTrig">A trigger port already exists in subsystem ''{0}''.  Addition of a reset port is not allowed.</entry>
    <entry key="NoRootIfactPorts">The only control ports allowed at the root level of a block diagram are trigger and enable ports.</entry>
    <entry key="NoRootCompositePorts">Composite ports are not allowed at the root level of a block diagram.</entry>
    <entry key="NoStEnabWithEnab">An enable port already exists in subsystem ''{0}''.  Addition of a state enable port is not allowed.</entry>
    <entry key="NoStEnabWithTrigFcnCall">An function-call trigger port already exists in subsystem ''{0}''.  Addition of a state enable port is not allowed.</entry>
    <entry key="NoTrigFcnCallWithStEnab">State enable ports are not allowed in function-call triggered subsystem ''{0}''.</entry>
    <entry key="NoTrigWithReset">A reset port already exists in subsystem ''{0}''.  Addition of a trigger port is not allowed.</entry>
    <entry key="InitTermResetSSHasInvalidBlock">The Initialize, Terminate or Reset Function  ''{0}'' contains an invalid block.</entry>
    <entry key="InitTermResetSSCannotBeInVirtualSSEditTimeError">An Initialize, Terminate or Reset Function  cannot be placed within the virtual subsystem ''{0}''. Ensure that the initialize, terminate or reset function is placed at the top-level of the model or within an atomic subsystem.</entry>
    <entry key="InitTermResetSSCannotBeInVirtualSS">The Initialize, Terminate or Reset Function ''{0}'' cannot have the virtual subsystem ''{1}'' as its immediate parent. ''{0}'' should be placed at the top-level of the model or within an atomic subsystem.</entry>
    <entry key="InitTermResetSSCannotHaveInportBlock">The Initialize, Reset or Terminate Function ''{0}'' cannot have an input port because it is inside Simulink Function ''{1}''.</entry>
    <entry key="InitTermResetSSCannotHaveRootIOs"><![CDATA[Root Inport or Outport block ''{0}'' connects to input or output port {1,number,integer} of block ''{2}'', which is inside an Initialize, Reset or Terminate Function. To generate code, configuration parameter <sldiag objui="configset" objparam="ZeroExternalMemoryAtStartup">Remove root level I/O initialization</sldiag> must be checked.]]></entry>
    <entry key="InitTermResetSSCannotHaveRootIOsERTOnly">Root Inport or Outport block ''{0}'' connects to input or output port {1,number,integer} of block ''{2}'', which is inside an Initialize, Reset or Terminate Function. To generate code, the system target file must be set to ert.tlc.</entry>
    <entry key="InitTermResetSSCannotHaveRootIOsModelRef"><![CDATA[Root Inport or Outport block ''{0}'' connects to input or output port {1,number,integer} of Model block ''{2}'', which connects to an Initialize, Reset or Terminate Function. To generate code, configuration parameter <sldiag objui="configset" objparam="ZeroExternalMemoryAtStartup">Remove root level I/O initialization</sldiag> must be checked.]]></entry>
    <entry key="InitTermResetSSCannotHaveRootIOsERTOnlyModelRef">Root Inport or Outport block ''{0}'' connects to input or output port {1,number,integer} of Model block ''{2}'', which connects to an Initialize, Reset or Terminate Function. To generate code, the system target file must be set to ert.tlc.</entry>
    <entry key="InitTermResetSSCannotInVariantSSWithGpcOn">The Initialize, Reset or Terminate Function ''{0}'' is inside the variant subsystem ''{1}''. However, Initialize, Reset or Terminate Function with an input or output port does not support the generation of preprocessor conditionals. You can fix this problem by using the MATLAB
      command: \n
      set_param(''{2}'',''GeneratePreprocessorConditionals'',''off'');
      \n\n
    </entry>
    <entry key="InitTermResetSSCannotInlineVariantWithGpcOn">The Initialize, Reset or Terminate Function ''{0}'' connects to a Variant Sink or Variant Source block ''{1}''. However, Initialize, Reset or Terminate Function with an input or output port does not support the generation of preprocessor conditionals. You can fix this problem by using the MATLAB
      command: \n
      set_param(''{2}'',''GeneratePreprocessorConditionals'',''off'');
      \n\n
    </entry>
    <entry key="InitTermResetSSWithSideIOCannotSupportVariant">The Initialize, Reset, or Terminate Function ''{0}'' with an input or output port connects to variant blocks. This is not supported.</entry>
 <entry key="InitResetSSHasBlocksWithStates">The Initialize, Terminate or Reset Function contains block ''{0}'' with states. This is not supported.</entry>
    <entry key="InitResetSSHasBlocksWithAbsOrElapsedTime">The Initialize, Terminate or Reset Function contains block ''{0}'' which uses absolute or elapsed time. This is not supported.</entry>
    <entry key="ModelRefBlockWithInitPortCannotHaveAbsOrElapsedTime">The parameter 'Show model initialize port' for the Model block ''{0}'' must be off since the referenced model contains a block that uses absolute or elapsed time.</entry>
    <entry key="InitResetSSHasCallerWhichCallsInvalidFcn">The caller block ''{0}'' inside the Initialize, Terminate or Reset Function calls a Simulink Function which satisfies one or more of the following: \n\t1. It contains block(s) with states. \n\t2. It contains block(s) with absolute or elapsed time. \n\t3. It contains Function Caller block(s) which call Simulink Functions which may satisfy one of the above 3 conditions.\n Such Simulink Functions cannot be called from Initialize,Terminate or Reset Functions.</entry>
    <entry key="InitResetSSHasCallerWhichCallsInvalidFcnWithSideIO">The caller block ''{0}'' inside the Initialize, Terminate or Reset Function calls a Simulink Function which satisfies one or more of the following: \n\t1. It contains an input port or output port. \n\t2. It calls a Simulink Function which has an input port or output port.\n Such Simulink Functions cannot be called from Initialize,Terminate or Reset Functions.</entry>
    <entry key="InitResetSSHasCallerWhichCallsInvalidFcnWithIRT">The caller block ''{0}'' inside the Initialize, Terminate or Reset Function calls a Simulink Function which satisfies one or more of the following: \n\t1. It contains an Initialize, Reset or Terminate Function block within it. \n\t2. It calls a Simulink Function which contains an Initialize, Reset or Terminate Function block.\n Such Simulink Functions cannot be called from Initialize,Terminate or Reset Functions.</entry>
    <entry key="InitResetSSHasBlocksWithGlobalNonReusableOutputs">The Initialize, Terminate or Reset Function contains block ''{0}'' which has global and non-reusable outputs. This is not supported.</entry>
    <entry key="InitResetSSCannotContainConditionalSS">The Initialize, Terminate or Reset Function contains block ''{0}'' which is a conditionally executed subsystem with {1,number,integer} output port(s). Only conditional subsystems without any output ports are allowed within Initialize, Reset or Terminate Functions</entry>
    <entry key="InitResetSSCannotContainResettableSS">The Initialize, Terminate or Reset Function contains block ''{0}'' which is a resettable subsystem. Such a subsystem block is not supported within Initialize, Terminate or Reset Functions.</entry>
    <entry key="InitResetSSCannotContainSimulinkFunctions">The Initialize, Terminate or Reset Function contains block ''{0}'' which is a Simulink Function. Simulink Functions are not supported within Initialize, Terminate or Reset Functions.</entry>
    <entry key="InitResetSSCannotContainModelBlock">The Initialize, Terminate or Reset Function contains the model block ''{0}''. Model blocks are not supported within Initialize, Terminate or Reset Functions.</entry>
    <entry key="InitResetSSCannotContainMergeBlock">The Initialize, Terminate or Reset Function contains the merge block ''{0}''. Merge blocks are not supported within Initialize, Terminate or Reset Functions.</entry>
    <entry key="InitResetSSCannotContainBlocksWhichLogData">The Initialize, Terminate or Reset Function contains the block ''{0}''. To Workspace blocks, To File blocks and other blocks which log data are not supported within Initialize, Terminate or Reset Function blocks.</entry>
    <entry key="InitResetSSCannotContainBlocksWhichLogDataHidden">Logging of data within the Initialize, Terminate or Reset Function blocks is not supported.</entry>
    <entry key="InitResetSSCannotContainBlock">The Initialize, Terminate or Reset Function contains the block ''{0}''. This is not supported.</entry>
    <entry key="InvalidSimulinkFunctionHavingSideIOBeingCalledFromIRT">The Simulink Function ''{0}'' within the model ''{1}'' or its sub-models is being called from within an Initialize, Reset or Terminate Function block. Ensure that ''{0}'' does not have input ports or output ports. Alternatively, ensure that none of the callers of ''{0}'' reside within Initialize, Reset or Terminate Function blocks.</entry>
    <entry key="InvalidSimulinkFunctionContainingIRTBeingCalledFromIRT">The Simulink Function ''{0}'' within the model ''{1}'' or its sub-models is being called from within an Initialize, Reset or Terminate Function block. Ensure that ''{0}'' does not itself contain Initialize, Reset or Terminate Function blocks. Alternatively, ensure that none of the callers of ''{0}'' reside within Initialize, Reset or Terminate Function blocks.</entry>
    <entry key="InvalidSimulinkFunctionBeingCalledFromIRT">The Simulink Function ''{0}'' within the model ''{1}'' or its sub-models is being called from within an Initialize, Reset or Terminate Function block. Ensure that ''{0}'' satisfies all the following conditions: \n\t1. It does not contain any block(s) with states. \n\t2. It does not contain any block(s) with absolute or elapsed time. \n\t3. It does not contain any Function Caller block(s) which call such invalid Simulink Functions.\nAlternatively, ensure that none of the callers of ''{0}'' reside within Initialize, Reset or Terminate Function blocks.</entry>
    <entry key="InitResetSSDoesNotSupportVarDimSignals">The Initialize, Terminate or Reset Function contains the block ''{0}'' which has an input of variable-size. Such signals are not supported within Initialize, Terminate or Reset Functions.</entry>
    <entry key="MultipleInitSubsysAtSameLevel">An Initialize Function already exists in the system ''{0}''.  Addition of another Initialize Function is not allowed.</entry>
    <entry key="NoNonVirtualBlocksAlongWithIRT">The system ''{0}'' does not contain any non-virtual blocks apart from Initialize, Terminate or Reset Function blocks. This is not allowed for simulation and code generation. Ensure that there is at least one other non-virtual block in this system.</entry>
    <entry key="InitTermResetSSWithinAnotherInitTermResetSS">The Initialize/Terminate/Reset Function ''{0}'' is being placed within another Initialize/Terminate/Reset Function ''{1}''. This is not allowed.</entry>
    <entry key="MultipleTermSubsysAtSameLevel">A Terminate Function already exists in the system ''{0}''.  Addition of another Terminate Function is not allowed.</entry>
    <entry key="MultipleResetSSWithSameIDAtSameLevel">A Reset Function with the identifier ''{0}'' already exists in the system ''{1}'' or its non-virtual parent subsystem.  Addition of another Reset Function with the same identifier in the same non-virtual hierarchy is not allowed.</entry>
    <entry key="ConflictingResetSpecificationsInTopAndSubModel">A Reset Function with the Event name ''{0}'' exists in the system ''{1}'' and the model referenced by the block ''{2}'' with conflicting specifications. To fix this, ensure that the setting of the parameter 'Include implicit initialize' is the same for all Reset Functions with the Event name ''{0}'' in the model.</entry>
    <entry key="RequireMdlTerminateFcn">To generate code for the Terminate Function ''{0}'', set the ''IncludeMdlTerminateFcn'' parameter to ''on''.</entry>
    <entry key="OutportConnConflict">Outport ''{0}'' and ''{1}'' which are driven by the same signal must have the same setting for the "Output when disabled" parameter</entry>
    <entry key="OutportInitOutConflict">Outport ''{0}'' and ''{1}'' which are driven by the same signal specify conflicting values for the "Initial output" parameter.  Only one should specify an initial output and the others should be the empty, [], matrix</entry>
    <entry key="SfChartOutportInitOutConflict">The Stateflow Chart ''{0}'' and Outport block ''{1}'' specify conflicting initial output values.  To resolve this issue, make sure both blocks have the same initial output values  or ensure that the "Initial output" parameter of the Outport block is an empty matrix([]).</entry>
    <entry key="SfChartDefaultICOutportInitOutConflict">The Stateflow Chart ''{0}'' and Outport block ''{1}'' specify conflicting initial output values. Because the 'Initial value' field of the output of the Stateflow chart has been left empty, a default initial value of zero is used. To resolve this conflict, specify a matching initial output value for the output of the Stateflow chart or specify the initial output value of the Outport Block to be '0' or the empty matrix([]). </entry>
    <entry key="SfChartDefaultBusICOutportInitOutConflict">The Stateflow Chart ''{0}'' and Outport block ''{1}'' specify conflicting initial output values. Because the output of the Stateflow Chart is a bus, a default initial value of zero is used. To resolve this conflict, specify the initial output value of the Outport block to be '0' or the empty matrix ([]). </entry>
    <entry key="PortBasedDrivingVirtualOutport">''{0}'' may not be wired directly to the subsystem outport because it has a constant sample time on output port {1,number,integer}</entry>
    <entry key="TrigFcnCallNotAllowedInEnab">Trigger type function-call in ''{0}'' is not allowed in enabled systems.</entry>
    <entry key="WarnDupOutportInitOutValues">Outport ''{0}'' and ''{1}'' which are driven by the same signal are specifying the same value for the "Initial output" parameter. Only one should specify an initial output for the signal and the others should be the empty, [], matrix</entry>
    <entry key="ResetPortInvalidFeatureLevel">The feature ''ResettableSubsystem'' is not turned on.</entry>
    <entry key="ResettableSSLevelLevelHoldInvalidWithContST">The 'ResetTriggerType' parameter of the Reset port block ''{0}'' within the Resettable subsystem ''{1}'' is set to 'level' or 'level-hold'. Continuous sample-times are not supported within such resettable subsystems. To resolve the issue, use a different trigger type or use discrete sample-time.</entry>
  </message>
</rsccat>
