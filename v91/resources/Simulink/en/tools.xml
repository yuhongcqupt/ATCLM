<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2009-2016 The MathWorks, Inc. -->
<rsccat xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" locale="en_US" product="Simulink" xsi:noNamespaceSchemaLocation="../../schema/msgcat.xsd">
  <message>
    <entry key="ModelingStandards">Modeling Standards</entry>
    <entry key="CodeBrowserInvalidFileName">Code Browser: Invalid file name: {0}</entry>
    <entry key="modelassistantObsolete">'modelassistant' is obsolete, please use 'modeladvisor' instead.</entry>
    <entry key="MALicenseCheckoutFail">License checkout failed. Cannot find a license for {0}. </entry>
    <entry key="MAMissVnVLicenseForCustomCheck">A valid Simulink Verification and Validation license is required to run custom checks.</entry>
    <entry key="MAMissVnVLicenseForMACE">A valid Simulink Verification and Validation license is required to start the Model Advisor Configuration Editor.</entry>
    <entry key="MALoadConfigMissCorrespondCheck">Unable to locate check "{0}" specified by "{1}" when loading configuration {2}. This might be due to a missing sl_customization.m file or toolboxes that are not installed.</entry>
    <entry key="MAMissCorrespondCheck">Unable to locate check {0}. This might be due to a missing sl_customization.m file or toolboxes that are not installed.</entry>
    <entry key="MASlcustomizeInsideMlroot">Do not place a sl_customization.m ({0}) file that customizes the Model Advisor in your root MATLAB folder, or any of its sub-folders, with the exception of the matlabroot/work folder.</entry>
    <entry key="MACENoDuplicateName">"{0}" already exists. Items in the same folder must have different names.</entry>
    <entry key="MAErrorChangeWorkConfiguration"><![CDATA[The Model Advisor is currently open using the following configuration: {0}. To use a new configuration, in the Model Advisor select File > Load configuration.]]></entry>
    <entry key="MACENotRenameFolder">You cannot rename this folder.</entry>
    <entry key="MACEEmptyDisplayName">The name field is blank. Enter a name.</entry>
    <entry key="MAUnableStartMAWhenMACEOpen">The Model Advisor Configuration Editor is open.  Close the Configuration Editor before starting the Model Advisor.</entry>
    <entry key="MACEReservedName">You cannot name a folder "{0}" because it''s a reserved name. Choose a different name for the folder.</entry>
    <entry key="MAFactoryGrpUnderGrp">ModelAdvisor.FactoryGroup object {0} can be only placed under By Task group.</entry>
    <entry key="MAUnableLocateRestorePointName">Unable to locate specified restore point: {0}.</entry>
    <entry key="MASystemRenamed">The name of the system has changed from {0} to {1}. To check {2}, you must reload the model.</entry>
    <entry key="FPASystemRenamed">The name of the system has changed from {0} to {1}. To check {2}, you must reload the model.</entry>
    <entry key="MACBTitle">Model Advisor Check Browser</entry>
    <entry key="MADisplayName">Display Name</entry>
    <entry key="MACheckTitle">Check Title</entry>
    <entry key="MACheckID">Check ID</entry>
    <entry key="MAToolTip">Tool Tip</entry>
    <entry key="MAProductAssociation">Product Association</entry>
    <entry key="MATools">Tools</entry>
    <entry key="MANew">New</entry>
    <entry key="MAUndo">Undo</entry>
    <entry key="MARedo">Redo</entry>
    <entry key="MAOpen">Open</entry>
    <entry key="MACopy">Copy</entry>
    <entry key="MAPaste">Paste</entry>
    <entry key="MACut">Cut</entry>
    <entry key="MAMoveup">Move up</entry>
    <entry key="MAMovedown">Move down</entry>
    <entry key="MANewfolder">New folder</entry>
    <entry key="MAYes">Yes</entry>
    <entry key="MAInstructions">Instructions</entry>
    <entry key="MANo">No</entry>
    <entry key="MAEnable">Enable</entry>
    <entry key="MADisable">Disable</entry>
    <entry key="MAWorkflow">Workflow</entry>
    <entry key="MACreate">Create</entry>
    <entry key="MAConfigure">Configure</entry>
    <entry key="MACheck">Check</entry>
    <entry key="MAManage">Manage</entry>
    <entry key="MAFind">Find</entry>
    <entry key="MANameandDescription">name and description</entry>
    <entry key="MASearchNameDescription">Search name and description</entry>
    <entry key="MAFindNext">Find Next</entry>
    <entry key="MAFindPrevious">Find Previous</entry>
    <entry key="MACloseToolbar">Close Toolbar</entry>
    <entry key="MAPhraseNotFound">Not found</entry>
    <entry key="MANumberOccurrences">{0,number,integer} of {1,number,integer}</entry>
    <entry key="MAPhraseFoundInCheckName">Found in check name.</entry>
    <entry key="MAPhraseFoundInFolderName">Found in folder name.</entry>
    <entry key="MAPhraseFoundInDescription">Found in analysis description.</entry>
    <entry key="MASelectMatFile">Select a MAT-file</entry>
    <entry key="MASelectMATLABFile">Select a MATLAB file</entry>
    <entry key="MACETitle">Model Advisor Configuration Editor</entry>
    <entry key="MACETreeTitle">Current Configuration: {0}</entry>
    <entry key="MACERootMsg0">The Model Advisor Configuration Editor expedites customizing and deploying Model Advisor configurations.  The following is a typical workflow.</entry>
    <entry key="MACERootMsg1">Author custom checks.</entry>
    <entry key="MACERootMsg2">Organize checks and create custom configurations.</entry>
    <entry key="MACERootMsg3">Deploy custom configurations.</entry>
    <entry key="MACERootMsg4">Verify model complies with modeling guidelines.</entry>
    <entry key="MARootMsg0">Verify model complies with modeling guidelines.</entry>
    <entry key="MACELibRootNodeMsgLine1">Drag and drop checks from the Check Browser into the Configuration Editor.</entry>
    <entry key="MACENewMsg">Start new edit session</entry>
    <entry key="MACELoadMsg">Load configuration</entry>
    <entry key="MACEDeleteMsg">Delete selected check or folder</entry>
    <entry key="MACEEnableMsg">Enable selected check or folder</entry>
    <entry key="MACEDisableMsg">Disable selected check or folder</entry>
    <entry key="MACESaveMsg">Save current configuration</entry>
    <entry key="MACECopyMsg">Copy selected check or folder</entry>
    <entry key="MACEPasteMsg">Paste in current folder</entry>
    <entry key="MACECutMsg">Cut selected check or folder</entry>
    <entry key="MACEMoveUpMsg">Move selected check or folder up</entry>
    <entry key="MACEMoveDownMsg">Move selected check or folder down</entry>
    <entry key="MACEFolderNewMsg">Create new folder in current folder</entry>
    <entry key="MACECheckBrowserMsg">Launch Check Browser</entry>
    <entry key="MALoadedConfigurationFromDisk">Loaded configuration from {0}</entry>
    <entry key="MALoadConfiguration">Load Configuration...</entry>
    <entry key="MAOpenConfigurationEditor">Open Configuration Editor</entry>
    <entry key="MASetDefaultConfiguration">Set Current Configuration as Default</entry>
    <entry key="MARestoreDefaultConfiguration">Restore Default Configuration</entry>
    <entry key="MALoadingConfiguration">Loading Configuration {0} ...</entry>
    <entry key="MASavingConfiguration">Saving Configuration {0} ...</entry>
    <entry key="MAUnableLoadPrefConfiguration">Unable to load configuration {0}.</entry>
    <entry key="MACEUnableSaveEmptyConfig">Unable to save empty configuration.</entry>
    <entry key="MAWarnLoadConfigUI">The existing Model Advisor report corresponds to a different configuration. Loading a new configuration will remove the existing report.</entry>
    <entry key="MAWarnLoadConfigUIWhenDirty">The current configuration has unsaved changes. Opening a new configuration will overwrite the current configuration.</entry>
    <entry key="MASetDefaultConfig">{0} has been set as default configuration.</entry>
    <entry key="MAResetDefaultConfig">Default configuration has been reset. </entry>
    <entry key="MAWarnResetDefaultConfig">Do you want to restore the default configuration and restart the Model Advisor? This will remove the existing report.</entry>
    <entry key="MAInvalidConfigFile">{0} isn''t a valid configuration file.</entry>
    <entry key="MADouWantSaveConfigChange">Do you want to save the changes of current configuration?</entry>
    <entry key="MAGetConfigObjInvalidSource">The input value is invalid. Valid values are either ''ConfigUICellArray'' or ''CheckLibrary''.</entry>
    <entry key="MAGetConfigObjArrayNotPopulated">ConfigUICellArray is empty. You must populate ConfigUICellArray before calling {0}.</entry>
    <entry key="MARptName">Report name</entry>
    <entry key="SLVersion">Simulink version</entry>
    <entry key="MdlVersion">Model version</entry>
    <entry key="MASystem">System</entry>
    <entry key="MACurrentrun">Current run</entry>
    <entry key="MARunSummary">Run Summary</entry>
    <entry key="MASystemSelector">System Selector</entry>
    <entry key="MAMdlNewerThanRpt">The {0} model is newer than the Model Advisor report.  Rerun the Model Advisor checks on the updated model to generate an up-to-date report. </entry>
    <entry key="MAExplorerAdviceMsg"> The Model Advisor analyzes your model to ensure that you best utilize Simulink for simulation and code generation.   You can select specific checks and generate a report with detailed information. This is particularly useful early in the design cycle. </entry>
    <entry key="MAExplorerStartMsg"> Start Model Advisor...  </entry>
    <entry key="MASystemHierarchy">System Hierarchy</entry>
    <entry key="MASystemSelectorDescription">Choose the system to start from.</entry>
    <entry key="MASelectSystemDialogTitle">Choose a system from the hierarchy:</entry>
    <entry key="MACurrentSystem">Current system</entry>
    <entry key="MACurrentSystemAndBelow">Current system and below</entry>
    <entry key="MAFor">For</entry>
    <entry key="MAShow">Show</entry>
    <entry key="MASelectSubsystem">Select Subsystem...</entry>
    <entry key="MAOk">Ok</entry>
    <entry key="MAName">Name</entry>
    <entry key="MALoad">Load</entry>
    <entry key="MASave">Save</entry>
    <entry key="MASaveAs">Save As...</entry>
    <entry key="MADelete">Delete</entry>
    <entry key="MAInvalidType">The specified type {0} is invalid.</entry>
    <entry key="MAMASaveRestorepointDialogTitle">Model Advisor: Save Model and Data Restore Point</entry>
    <entry key="MAMALoadRestorepointDialogTitle">Model Advisor: Load Model and Data Restore Point</entry>
    <entry key="MASaveRestorepointInstruct">Enter a name and description (optional) for the restore point.</entry>
    <entry key="MALoadRestorepointInstruct">Select a restore point to load.</entry>
    <entry key="MANoRestorepointSaved">No restore point saved.</entry>
    <entry key="MALoadRestorePoint">Load Restore Point...</entry>
    <entry key="MASaveRestorePoint">Save Restore Point</entry>
    <entry key="MASaveAsRestorePoint">Save Restore Point As...</entry>
    <entry key="MASavingRestorePoint">Saving Restore Point {0} ...</entry>
    <entry key="MAWarnLoadRestorePoint">Loading restore point {0} will overwrite current model and workspace.</entry>
    <entry key="MAWarnOverwriteRestorePoint">Restore point {0} already exists. Do you want to replace it?</entry>
    <entry key="MAPass">Pass</entry>
    <entry key="MAFail">Fail</entry>
    <entry key="MAWarning">Warning</entry>
    <entry key="MACancel">Cancel</entry>
    <entry key="MATotal">Total</entry>
    <entry key="MAWhatsThis">What''s This?</entry>
    <entry key="PrefixForCompileCheck">^</entry>
    <entry key="MAAboutSimulink">About Simulink</entry>
    <entry key="MAUnsupportDataType">Unsupported data type.</entry>
    <entry key="MAUnknownEventReceived">Unknown event received.</entry>
    <entry key="MASpecifySystemName">Specify the name of system.</entry>
    <entry key="MAInvalidBtnClick">Unexpected button clicked. Please re-start the tool.</entry>
    <entry key="MAUnsupportedInputParamType">Unsupported input parameters type.</entry>
    <entry key="MAUnrecognizedSolver">Unrecognized solver: {0}</entry>
    <entry key="MAInvalidNumArgs">Invalid number of arguments.</entry>
    <entry key="MAUnexpectedAction">Unexpected action</entry>
    <entry key="MAUnableLocateMAObj">Can not locate model advisor object for {0}.</entry>
    <entry key="MAUnknownMethod">Unknown method: {0} specified.</entry>
    <entry key="MAUnknownAction">Unknown action</entry>
    <entry key="MAReportNotExist">The report does not exist. Please generate a new report.</entry>
    <entry key="MATriggerUpdateDiagram">Triggers Update Diagram</entry>
    <entry key="MAAbnormalExit">Abnormal exit:</entry>
    <entry key="MAInvalidParam">Invalid parameter specified. Parameter must be {0}.</entry>
    <entry key="MAIncorrectAPIUsage">Incorrect usage of {0} method.</entry>
    <entry key="MADuplicatedArgName">{0} names must be unique.</entry>
    <entry key="MANoGroupAllowedUnderProcedure">No ModelAdvisor.Group object is allowed inside ModelAdvisor.Procedure object.</entry>
    <entry key="MAUnableLocateActiveSys">Unable to locate Model Advisor active system. Please restart Model Advisor tool.</entry>
    <entry key="MANoItemToDispaly">No items to display.</entry>
    <entry key="MACanNotPublishTaskNode">It''s not allowed to publish a ModelAdvisor.Task object.</entry>
    <entry key="MADupProcessCallback">More than one Model Advisor process callback function found. Only the one with the highest precedence is used.</entry>
    <entry key="MAErrorMACallbackFunc">Error occurred with Model Advisor callback function: {0}.</entry>
    <entry key="MAPropertyNolongerSupport">The property {0} is no longer supported.</entry>
    <entry key="MAMissEntriesForEnum">Input parameter defined inside {0} misses entries for type enum. </entry>
    <entry key="MAMissProductNameWhenPublishObj">A valid product name is required to publish {0}.</entry>
    <entry key="MACheckIDDuplicate">The Check ID {0} is duplicated.</entry>
    <entry key="MACheckTitleDuplicate">The Check title {0} is duplicated.</entry>
    <entry key="MATaskIDDuplicate">The Task Advisor ID {0} is duplicated.</entry>
    <entry key="MAUnableFindCheckSpecified">Unable to find the Model Advisor check {0} specified by {1}. Incorrect spelling or a missing required license might be the cause.</entry>
    <entry key="MAMultipleParentFound">{0} has more than one parent nodes.</entry>
    <entry key="MARun">Run</entry>
    <entry key="MAValueisReserved">{0} is reserved.</entry>
    <entry key="MARunToFailure">Run All</entry>
    <entry key="MARunAll">Run All</entry>
    <entry key="MAContinue">Continue</entry>
    <entry key="MAInProgress">{0} in progress.</entry>
    <entry key="MAGroupLegendNote">Group Folder - run in any order</entry>
    <entry key="MAProcedureLegendNote">Procedure Folder - run sequentially</entry>
    <entry key="MANothingtoContinue">Nothing to continue from.</entry>
    <entry key="MAModelNotRdyForGenReport">Model isn''t ready for generating report.</entry>
    <entry key="MAMissLicense">Unable to load task {0} because a required license {1} is missing.</entry>
    <entry key="MANotAllowAddObject">It''s not allowed to add {0} into {1} object.</entry>
    <entry key="MAOneCheckNotSyncRpt">1 item with a timestamp different than {0}</entry>
    <entry key="MAMoreCheckNotSyncRpt">{0} items with a timestamp different than {1}</entry>
    <entry key="MACurrent">current</entry>
    <entry key="MAReset">Reset</entry>
    <entry key="PassedMsg">Passed</entry>
    <entry key="FailedMsg">Failed</entry>
    <entry key="WarningMsg">Warning</entry>
    <entry key="RecAction">Recommended Action</entry>
    <entry key="LinkToBlocks">Use the following links to go to a block or dialog:</entry>
    <entry key="SeeAlso">See Also</entry>
    <entry key="FormatTemplateConstructorError">FormatTemplate constructor requires one of the following inputs: ''ListTemplate'' or ''TableTemplate''</entry>
    <entry key="NoColumnTitles">Column titles must be set before adding rows.</entry>
    <entry key="RowColumnMismatch">The number of columns in the row does not match the number of columns in the table. Number of columns in table: {0}</entry>
    <entry key="RefLinksCells">Input to setRefLink must be a cell array of cell arrays.</entry>
    <entry key="RefLinksMatlabKeyword">The first input argument to setRefLink must be the keyword ''matlab'' when the length of the cell is 4.</entry>
    <entry key="RefLinksCellLength">The length of the input cell of setRefLink is incorrect.</entry>
    <entry key="setCheckTextInputLength" note="stringDatatypeUpdate">Input to setCheckText must be a character vector.</entry>
    <entry key="setCheckTextInput">Incorrect number of arguments passed to setCheckText.</entry>
    <entry key="ColTitlesListTemplate">Column title cannot be set for a ListTemplate object.</entry>
    <entry key="setColTitlesInputString" note="stringDatatypeUpdate">Input to setColTitles must be a cell array of character vectors.</entry>
    <entry key="setColTitlesInput">Incorrect number of arguments passed to setColTitles.</entry>
    <entry key="setFormatTypeInput">Incorrect number of input arguments to setFormatType.</entry>
    <entry key="setInformationInputString" note="stringDatatypeUpdate">Input to setInformation must be a character vector.</entry>
    <entry key="setInformationInput">Incorrect number of arguments passed to setInformation</entry>
    <entry key="ListObjTableTemplate">List objects cannot be set for a TableTemplate object.</entry>
    <entry key="setListObjInput">Incorrect number of arguments passed to setListObj</entry>
    <entry key="setRecActionInputString" note="stringDatatypeUpdate">Input to setRecAction must be a character vector or a cell array of character vectors.</entry>
    <entry key="setRecActionInput">Incorrect number of arguments passed to setRecAction</entry>
    <entry key="setRefLinkInput">Incorrect number of arguments passed to setRefLink</entry>
    <entry key="setSubBarInputLength">Input to setSubBar must be a Boolean.</entry>
    <entry key="setSubBarInput">Incorrect number of arguments passed to setSubBar</entry>
    <entry key="setSubResultStatusInputLength" note="stringDatatypeUpdate">Input to setSubResultStatus must be a character vector.</entry>
    <entry key="setSubResultStatusInput">Incorrect number of arguments passed to setSubResultStatus</entry>
    <entry key="setSubResultStatusTextInputLength" note="stringDatatypeUpdate">Input to setSubResultStatusText must be a character vector.</entry>
    <entry key="setSubResultStatusTextInput">Incorrect number of arguments passed to setSubResultStatusText</entry>
    <entry key="setSubTitleInputLength" note="stringDatatypeUpdate">Input to setSubTitle must be a character vector.</entry>
    <entry key="setSubTitleInput">Incorrect number of arguments passed to setSubTitle</entry>
    <entry key="TableInfoListTemplate">Cannot add table data for a ListTemplate object.</entry>
    <entry key="setTableInfoInput1">Column titles for the table must be set before adding data to the table.</entry>
    <entry key="setTableInfoInput2">Size of input to setTableInfo must match the number of columns. Number of columns: {0}</entry>
    <entry key="setTableInfoInput3">Input to setTableInfo must be a cell or an array of cells.</entry>
    <entry key="setTableInfoInput4">Incorrect number of arguments passed to setTableInfo</entry>
    <entry key="setTableTitleInputLength" note="stringDatatypeUpdate">Input to setTableTitle must be a character vector.</entry>
    <entry key="setTableTitleInput">Incorrect number of arguments passed to setTableTitle</entry>
    <entry key="TableTitleListTemplate">Cannot set table title for a ListTemplate object.</entry>
    <entry key="GetMdlRefVariantInfoWrongBlockType">The first argument of ''Simulink.{0}'' must be the handle of a Simulink Model Reference block.</entry>
    <entry key="GetMdlRefVariantInfoNonPositiveVariantIndex">The second argument of ''Simulink.{0}'' must be a positive (1-based) index of the variant.</entry>
    <entry key="GetMdlRefVariantInfoTooLargeVariantIndex">The block ''{0}'' only has {1,number,integer} variants, so the second argument of ''Simulink.{2}'' must be between 1 and {3,number,integer}.</entry>
    <entry key="FPCAHelp">Fixed-Point Conversion Task Help</entry>
    <entry key="FPCARootMsg1">Fixed-Point Advisor facilitates converting a system or subsystem from floating-point to fixed-point data types.</entry>
    <entry key="FPCAContainerMsg1">The Fixed-Point Advisor facilitates converting a floating-point model or subsystem into a fixed-point representation.</entry>
    <entry key="FPCAContainerMsg2">It performs the following tasks:</entry>
    <entry key="FPCAContainerMsg3">The Fixed-Point Advisor provides you with feedback on the results of the task. If the task fails, the Fixed-Point Advisor provides you with information on how to modify the model to complete the task. For more information, click Help.</entry>
    <entry key="FPCAContainerMsg4">Prepare Model for Conversion</entry>
    <entry key="FPCAContainerMsg5">Evaluate model wide configuration options.</entry>
    <entry key="FPCAContainerMsg6">Create floating-point base line data set.</entry>
    <entry key="FPCAContainerMsg7">Prepare for Data Typing and Scaling </entry>
    <entry key="FPCAContainerMsg8">Evaluate block specific configurations.</entry>
    <entry key="FPCAContainerMsg9">Add design minimum and maximum information to the model.</entry>
    <entry key="FPCAContainerMsg10">Return to Fixed-Point Tool to Perform Data Typing and Scaling</entry>
    <entry key="FPCAContainerMsg15">You might run them to:</entry>
    <entry key="FPCAContainerMsg16">Utility 1: See a summary of the current data types.</entry>
    <entry key="FPCAContainerMsg17">Utility 2: See a summary of the simulation numerical errors.</entry>
    <entry key="FPCAContainerMsg18">Utility 3: See a summary of the differences between the current simulation data and the reference data.</entry>
    <entry key="FPCAContainerMsg19">To get help on a task</entry>
    <entry key="FPCAContainerMsg20">Right-click on the task.</entry>
    <entry key="FPCAContainerMsg21">Select "What''s This?" from the popup menu.</entry>
    <entry key="MAUnsupportedObject">Unsupported object specified. Item must be {0} objects.</entry>
    <entry key="MAUnsupportedItem" note="stringDatatypeUpdate">Unsupported item specified with addItem method. Item must be ModelAdvisor.Element objects or character vector.</entry>
    <entry key="MAContentMustBeString" note="stringDatatypeUpdate">Content specified for object is not a character vector. Include only a character vector in content.</entry>
    <entry key="MAInvalidaTableConstructor">Incorrect usage. Use Table(rowSize, columnSize) to initialize a table.</entry>
    <entry key="MAInvalidaImageSourceMustBeString" note="stringDatatypeUpdate">Source specified for image is not a character vector. Include only a character vector in image source.</entry>
    <entry key="MATableBorderNeedInteger">Value specified for table border size is not an integer. Specify a non-negative integer value.</entry>
    <entry key="MAInvalidDataType" note="stringDatatypeUpdate">Invalid data type specified. Data type can be ModelAdvisor.Element objects or character vector.</entry>
    <entry key="MAParamExceedTableSize">Specified row or column size exceeds table size. Specify sizes within specified table size range.</entry>
    <entry key="MAParamTableSizeNotMatch">Size of input cell array does not match table size. Specify cell array that is same size as table: {0}</entry>
    <entry key="MAInvalidAlignType">Invalid alignment specified. Alignment can be left, right, or center.</entry>
    <entry key="MAInvalidSLCallbackStyle">Invalid callback style. Use callback style hilite_system or open_system.</entry>
    <entry key="MAModelAdvisor">Model Advisor</entry>
    <entry key="MAErrorChangeWorkSystem">Inadvertently tried to change Model Advisor work system before ending previous session. To change the work system, use Simulink.ModelAdvisor.getModelAdvisor(system, ''new'').</entry>
    <entry key="MAAnalysis">Analysis</entry>
    <entry key="MADescription">Description</entry>
    <entry key="MAInputParameters">Input Parameters</entry>
    <entry key="MAResult">Result</entry>
    <entry key="MAExit">Exit</entry>
    <entry key="MAFile">File</entry>
    <entry key="MAEdit">Edit</entry>
    <entry key="MANotApplicable">Not Applicable</entry>
    <entry key="MASourceTab">Source Tab</entry>
    <entry key="MAView">View</entry>
    <entry key="MAHelp">Help</entry>
    <entry key="MAModelAdvisorHelp">Model Advisor Help</entry>
    <entry key="MAReport">Report</entry>
    <entry key="MALastReport">Last Report</entry>
    <entry key="MAFromNode">From node</entry>
    <entry key="MASummary">Summary</entry>
    <entry key="MATaskHierarchy">Task Hierarchy</entry>
    <entry key="MADateTime">Date/Time</entry>
    <entry key="MADisplay">Display</entry>
    <entry key="MAAction">Action</entry>
    <entry key="MASpreadsheet">Spreadsheet</entry>
    <entry key="MAExploreSelection">Explore Selection...</entry>
    <entry key="MAFormat">Format</entry>
    <entry key="MAModelAdvisorTaskManager">Model Advisor Task Manager</entry>
    <entry key="MAExploreResult">Explore Result</entry>
    <entry key="MARootNodeMsgLine1">To view checks within a folder, open the folder.</entry>
    <entry key="MARootNodeMsgLine2">To enable or disable a check, select or clear the check box next to the check name.</entry>
    <entry key="MARootNodeMsgLine3">To enable or disable all checks within a folder, right-click the folder and then click "Select All" or "Deselect All". </entry>
    <entry key="MARootNodeMsgLine4">For more information, click "Help". </entry>
    <entry key="MARootNodeMsgLine5">For a list of all possible actions, right-click an object in the left pane.</entry>
    <entry key="MARootNodeMsgLine6">To run checks, select a folder or check in the left pane.</entry>
    <entry key="MALegend">Legend</entry>
    <entry key="MASource">Source</entry>
    <entry key="MATitle">Title</entry>
    <entry key="MATaskName">Task Name</entry>
    <entry key="MAProcessCallbackFuncName">Process Callback Function Name</entry>
    <entry key="MASelectedCheck">Selected Check</entry>
    <entry key="MAPSelectedCheck">Selected Check (Permanent)</entry>
    <entry key="MADeselectedCheck">Deselected Check</entry>
    <entry key="MAPassedCheck">Passed Check</entry>
    <entry key="MAFailedCheck">Failed Check</entry>
    <entry key="MAInitializing">Initializing...</entry>
    <entry key="MAPleaseWait">Please wait...</entry>
    <entry key="MARunToSelectedTask">Run to Selected Task</entry>
    <entry key="MAResetThisTask">Reset This Task</entry>
    <entry key="MACETitleInRpt">Model Advisor configuration</entry>
    <entry key="MAProcessing">Processing</entry>
    <entry key="MAProcessCallbacks">Processing callbacks</entry>
    <entry key="MAProcessCallback">Processing callback</entry>
    <entry key="MACompilingModel">Compiling model...</entry>
    <entry key="MAWarnReportFromDifferentNode">Warning - the last report was created from a Model Advisor node different than the current node.</entry>
    <entry key="MAPressRunThisCheck"><![CDATA[Click <b>Run This Check</b>.]]></entry>
    <entry key="MAPressRunThisTask"><![CDATA[Click <b>Run This Task</b>.]]></entry>
    <entry key="MARightClickThenPressRunThisCheck"><![CDATA[Right click on this check in the task hierarchy to select it, then press <b>Run This Check</b>.]]></entry>
    <entry key="MASelectThenPressRunThisCheck"><![CDATA[To run this check, select the check and then click <b>Run This Check</b>.]]></entry>
    <entry key="MASelectThenPressRunThisTask">To run this task, all prior tasks must have a result of Passed or Warning.</entry>
    <entry key="MAShowRptAfterRun">Show report after run</entry>
    <entry key="MAAdviceOnContainerNode1">To process all enabled items in this folder and generate a new report, click {0}.</entry>
    <entry key="MAAdviceOnContainerNode2">When you click {0}, enabled procedure folders run to failure.</entry>
    <entry key="MAAdviceOnContainerNode3">Right-click to select or deselect all items in this folder. </entry>
    <entry key="MAAdviceOnContainerNode4">To automatically display the report after processing, select {0}. </entry>
    <entry key="MAAdviceOnContainerNode5">To display the last report generated, click the "Report" path link.</entry>
    <entry key="MAAdviceOnContainerNode6">For a list of all possible actions, right-click an item in the Task Hierarchy. </entry>
    <entry key="MAAdviceOnprocedure1">To automatically run all tasks within a task folder until a task fails, select the folder and click {0}.</entry>
    <entry key="MAAdviceOnprocedure1HDLWA">To automatically run all tasks within a task folder, select the folder and click {0}.</entry>
    <entry key="MAAdviceOnprocedure2">To manually run a task, select the task and click {0}. You must run tasks in order, therefore {1} is not available if you have not run a previous task. </entry>
    <entry key="MAAdviceOnprocedure3">To automatically display the report after processing the tasks, select {0}.</entry>
    <entry key="MAAdviceOnprocedure5">For more information, right-click a task and select {0}.</entry>
    <entry key="MAStatus">Status</entry>
    <entry key="MANotRunMsg">Not Run</entry>
    <entry key="MAWaivedMsg">Failed - Waived to Pass</entry>
    <entry key="MAFailedMsg">Failed</entry>
    <entry key="MASeverity">Severity</entry>
    <entry key="MAAdvisory">Advisory</entry>
    <entry key="MARequired">Required</entry>
    <entry key="MASelected">Selected</entry>
    <entry key="MAPermSelected">Permanently Selected</entry>
    <entry key="MADeselected">Deselected</entry>
    <entry key="MAPermDeselected">Permanently Deselected</entry>
    <entry key="MARunSelectedChecks">Run Selected Checks</entry>
    <entry key="MASaveReport">Save As...</entry>
    <entry key="MARunThisCheck">Run This Check</entry>
    <entry key="MARunThisTask">Run This Task</entry>
    <entry key="MANoteNotCreateReport">Note: does not create report</entry>
    <entry key="MASelectAll2">Select All</entry>
    <entry key="MADeselectAll">Deselect All</entry>
    <entry key="MASelect">Select</entry>
    <entry key="MADeselect">Deselect</entry>
    <entry key="MANeedWrittableWorkDir">Error creating work directory at ''{0}''. Please go to a directory with write permission and rerun the Model Advisor. </entry>
    <entry key="MAInvalidParamsetActionStyle">Invalid action callback style {0} is used on setActionStyle method.</entry>
    <entry key="MACanOnlyCallWhileExecuteCheckCallback">{0} method can only be called while executing check callback.</entry>
    <entry key="MACanOnlyCallWhileExecuteActionCallback">{0} method can only be called while executing action callback.</entry>
    <entry key="MAInvalidCallsetActionResultStatus">setActionResultStatus method can only be called while executing action callback.</entry>
    <entry key="MARunAdvisor">Run Advisor</entry>
    <entry key="MAByProduct">By Product</entry>
    <entry key="MAByTask">By Task</entry>
    <entry key="MAReportEmpty"><![CDATA[No results to display. Select one or more items in the left pane, then press <b>{0}</b>.]]></entry>
    <entry key="NoActionCallBack">There is no Model Advisor action callback function for check {0}. </entry>
    <entry key="MAErrorActionCallback">Error occurred while calling Model Advisor action callback function for check {0}. </entry>
    <entry key="MAWarnEmptyActionButtonName">Model Advisor ignored check {0} because it contains ActionCallbackHandle but lacks ActionButtonName.</entry>
    <entry key="MAWarnCheckboxActionButtonTogether">Model Advisor ignores ActionShowCheckBox setting for check {0} when ActionCallbackStyle is not "PerGroup".</entry>
    <entry key="MAWarnVVLicense"><![CDATA[A Simulink V&V license is not available. Ignoring Model Advisor callbacks inside {0}.]]></entry>
    <entry key="MAInvalidCheckID">Invalid check TitleID.</entry>
    <entry key="MAErrorInActionCallback">Error occurred while calling Model Advisor action callback function for check {0}. </entry>
    <entry key="MAMaxIdLengthLargerThan31"><![CDATA[<p />You have set {0} to {1}. Industry standards for C, such as ISO&#174; and MISRA&#174;, require identifiers to be unique within the first 31 characters. To ensure conformance, you should set the maximum identifier length to 31 characters.]]></entry>
    <entry key="MACheckSolverVariableStep"><![CDATA[Your model specifies a {0} ({1}).  If you want to generate code from this model, using the Embedded Coder, you must first change its <b>Solver</b> configuration parameter setting to specify a fixed-step, discrete solver.<p>Note that you do not have to change the solver setting to generate code from one of the model''s subsystems. This is because the Embedded Coder changes the setting to a fixed-step solver for you when you select <b>C/C++ Code&gt;Build This Subsystem</b> or <b>C/C++ Code&gt;Generate S-Function</b> from the subsystem''s context menu.</p>]]></entry>
    <entry key="MATitletipIdentQuestFixptOper">These operations can lead to non-optimal results</entry>
    <entry key="MATitleIdentQuestFixptOper">Identify questionable fixed-point operations</entry>
    <entry key="MATitleTipIdentBlocksQuestFixptOper">These blocks can lead to non-optimal fixed-point code</entry>
    <entry key="MATitleIdentBlocksQuestFixptOper">Identify blocks that generate expensive fixed-point and saturation code</entry>
    <entry key="MATitletipIdentQuestSubsysSetting">Some subsystem settings can lead to non-optimal results.</entry>
    <entry key="MATitleIdentQuestSubsysSetting">Identify questionable subsystem settings</entry>
    <entry key="MATitleCodeGenSanityCheck">Check model configuration settings against code generation objectives</entry>
    <entry key="MATitleTipCodeGenSanityCheck">Check model configuration settings against the code generation objectives. Successfully passing this check may take multiple iterations since a change to one option can impact other options.</entry>
    <entry key="MAforCodeGenAdvisorCheckEnableMemcpyFixButton">Modify value</entry>
    <entry key="MAforCodeGenAdvisorCheckEnableMemcpyFixButtonDesc">Modify the value of configuration parameter ''Use memcpy for vector assignment''</entry>
    <entry key="MARawTitleCodeGenSanityCheck">Check model configuration setting against code generation objectives</entry>
    <entry key="MATCodeGenSanityCheckPassMsg">Passed</entry>
    <entry key="MATCodeGenSanityCheckPassMsg2">The following parameters have been checked and confirmed with the recommended value</entry>
    <entry key="MATCodeGenSanityCheckNoObjective">No objective specified</entry>
    <entry key="MATCodeGenSanityCheckNoObjectiveLinkMsg">Specify objectives from Configuration Set ...</entry>
    <entry key="MATCodeGenSanityCheckNoObjectiveMsg">Specify objectives from Code Generation Advisor root node.</entry>
    <entry key="MATCodeGenSanityCheckResultTableTitle"><![CDATA[The following parameter values are not optimized for the selected objectives.<br><br>To automatically fix the warning, click the ''Modify Parameters'' button and then rerun the check. To manually fix the warning, click the parameter hyperlink to open the Configuration Parameters dialog box, and manually apply the recommended value.]]></entry>
    <entry key="MATCodeGenSanityCheckResultTableColName1">Parameter</entry>
    <entry key="MATCodeGenSanityCheckResultTableColName2">Current Value</entry>
    <entry key="MATCodeGenSanityCheckResultTableColName2a">Previous Value</entry>
    <entry key="MATCodeGenSanityCheckResultTableColName3">Recommended Value</entry>
    <entry key="MATCodeGenSanityCheckResultTableColName4">Value</entry>
    <entry key="MATCodeGenSanityCheckObjectives">Objectives</entry>
    <entry key="CodeGenObjectiveCheckGroupName">Code Generation Objectives</entry>
    <entry key="CodeGenObjectiveCheckGroupDescr">Code Generation Objectives</entry>
    <entry key="MACodeGenSanityCheckFixButtonTitle">Modify Parameters</entry>
    <entry key="MATitleCodeGenSanityCheckFixButtonDescr">Change current values to recommended values. Some parameters might require manual changes.</entry>
    <entry key="MATCodeGenSanityCheckFixNoChange">No parameters have been changed.</entry>
    <entry key="MATCodeGenSanityCheckFixPartlySingular">One parameter is automatically set to its recommended value (see table below).</entry>
    <entry key="MATCodeGenSanityCheckFixPartly">{0,number,integer} parameters are automatically set to their recommended values (see table below).</entry>
    <entry key="MATCodeGenSanityCheckFixManualSingular">There is one parameter that requires a manual change. Click "Run This Check" to view the parameter that requires a manual change, along with any parameter settings impacted by this change.\n\n</entry>
    <entry key="MATCodeGenSanityCheckFixManual">There are {0,number,integer} parameters that require manual changes. Click "Run This Check" to view the list of parameters that require manual changes, along with any parameter settings impacted by these changes.\n\n</entry>
    <entry key="MATCodeGenSanityCheckFixAll">All parameters have been set according to the recommendation</entry>
    <entry key="MATitleChecktipDiscreteIntegBlockwInitialCondition">Discrete-Time Integrator blocks with state port and initial condition port that are fed neither by an IC nor a constant block might not be properly initialized.</entry>
    <entry key="MATitleCheckDiscreteIntegBlockwInitialCondition">Check for Discrete-Time Integrator blocks with initial condition uncertainty</entry>
    <entry key="MATitletipCheckForProperBusUsage">Identify any Mux block used as a bus creator and any bus signal treated as a vector.</entry>
    <entry key="MATitleCheckForProperBusUsage">Check bus usage</entry>
    <entry key="MATitleCheckMuxUsedAsBusCreatorUpgrade">Check Mux blocks that create bus signals</entry>
    <entry key="MATitleCheckVirtualBusUsageUpgrade">Check virtual bus inputs to blocks</entry>
    <entry key="MATitletipCheckMuxUsedAsBusCreatorUpgrade">Identifies any Mux blocks that are being used to create bus signals.</entry>
    <entry key="MATitletipCheckVirtualBusUsageUpgrade">Identifies any virtual bus signals fed into blocks that do not support virtual buses.</entry>
    <entry key="MATitletipCheckForProperMergeBlockUsage">Blocks that directly drive the same tree of Merge blocks should have mutually exclusive execution in each time step. Failure to guarantee this condition can lead to unintended model behavior.</entry>
    <entry key="MATitleCheckForProperMergeBlockUsage">Check Merge block usage</entry>
    <entry key="MATitletipDataStoreCheck">Checks for modeling issues related to Data Store Memory blocks, such as multitasking data integrity, strong typing and shadowing of data stores of higher scope.</entry>
    <entry key="MATitleDataStoreCheck">Check Data Store Memory blocks for multitasking, strong typing, and shadowing issues</entry>
    <entry key="MATitletipCheckForProperDataStoreBlockUsage">Checks for modeling issues related to Data Store Memory blocks, such as detecting scenarios of any read-before-write, write-after-read, or write-after-write issues.</entry>
    <entry key="MATitleCheckForProperDataStoreBlockUsage">Check for potential ordering issues involving data store access </entry>
    <entry key="MADataStoreAnalysisForDetailsSee">For more information on how to set the access ordering of the data store blocks, see {0}.</entry>
    <entry key="MADataStoreOrderingDataStoreAccess">Ordering data store access</entry>
    <entry key="MADataStoreRBWTitle">Potential read-before-write issue identified</entry>
    <entry key="MADataStoreReadBeforeWriteError">The model may attempt to read data from the data store block to which it has not written data in the current time step, for the following blocks.</entry>
    <entry key="MADataStoreRBWAction">Consider restructuring the model so that the Data Store Read block always executes before the Data Store Write block.</entry>
    <entry key="MADataStoreMETitle">Potential write-after-write issue identified</entry>
    <entry key="MADataStoreMutualExclusiveness">The model may attempt to write data to the data store twice in succession in the current time step, for the following blocks.</entry>
    <entry key="MADataStoreMEAction">Consider restructure the model so that only one Data Store Write block can execute in a time step.</entry>
    <entry key="MADataStoreWARTitle"> Potential write-after-read issue identified</entry>
    <entry key="MADataStoreWriteAfterReadError">The model may attempt to write data to the data store after previously reading data from it in the current time step, for the following blocks.</entry>
    <entry key="MADataStoreWARAction">Consider restructure the model so that the data store writer block never executes after the data store reader block.</entry>
    <entry key="MATitleMigrateToSimplifiedMode">Migrating to Simplified Initialization mode</entry>
    <entry key="MATitletipMigrateToSimplifiedMode">Identify parameter settings that can lead to unexpected initialization behaviors and enable migration to simplified initialization mode.</entry>
    <entry key="MATitletipCheckOptimalBusVirtual">Check for virtual buses that could be made nonvirtual in order to improve the efficiency of the generated code.</entry>
    <entry key="MATitleCheckOptimalBusVirtual">Check for optimal bus virtuality</entry>
    <entry key="MATitletipCheckImplicitSignalRes">Check for models that are configured for implicit signal resolution, i.e., to attempt to resolve all named signals and states to Simulink.Signal objects. This is inefficient and slows down incremental code generation and model reference.</entry>
    <entry key="MATitleCheckImplicitSignalRes">Check for implicit signal resolution</entry>
    <entry key="MATitleCheckDTAndScale">Check for calls to slDataTypeAndScale()</entry>
    <entry key="MATitletipCheckDTAndScale">Search for blocks that have data type parameters specified by using slDataTypeAndScale().</entry>
    <entry key="MACheckDTAndScaleSub0">Required Replacement Cases</entry>
    <entry key="MACheckDTAndScaleSub0Info">Identify calls to slDataTypeAndScale() that are no longer supported and thus should be replaced. Such calls always can be automatically replaced.</entry>
    <entry key="MADTAndScaleSub0Case">The following calls to slDataTypeAndScale() are no longer supported and thus should be replaced.</entry>
    <entry key="MADTAndScaleSub0NoCase">No calls to slDataTypeAndScale() require replacement.</entry>
    <entry key="MACheckDTAndScaleSub0RecAction">To automatically fix the error, click the "{0}" button and then rerun the check. To manually fix the error, click the block hyperlink to identify the block. Double-click the block to open the block parameters dialog box. In the block parameters dialog box, manually apply the recommended value.</entry>
    <entry key="MACheckDTAndScaleSub1">Recommended Replacement Cases</entry>
    <entry key="MACheckDTAndScaleSub1Info">Identify unnecessary calls to slDataTypeAndScale() that the model advisor can automatically replace.</entry>
    <entry key="MACheckDTAndScaleSub01Link">slRemoveDataTypeAndScale() automatic replacement cases</entry>
    <entry key="MADTAndScaleSub1Case">The following calls to slDataTypeAndScale() are unnecessary and can be automatically replaced.</entry>
    <entry key="MADTAndScaleSub1NoCase">No calls to slDataTypeAndScale() can be automatically replaced.</entry>
    <entry key="MACheckDTAndScaleSub1RecAction">To automatically fix the warning, click the "{0}" button and then rerun the check. To manually fix the warning, click the block hyperlink to identify the block. Double-click the block to open the block parameters dialog box. In the block parameters dialog box, manually apply the recommended value.</entry>
    <entry key="MACheckDTAndScaleSub2">Manual Inspection Cases</entry>
    <entry key="MACheckDTAndScaleSub2Info">Identify calls to slDataTypeAndScale() that might be unnecessary.</entry>
    <entry key="MACheckDTAndScaleSub2Link">slRemoveDataTypeAndScale() manual inspection cases</entry>
    <entry key="MADTAndScaleSub2Case">Review the following calls to slDataTypeAndScale() to determine if they are unnecessary.</entry>
    <entry key="MADTAndScaleSub2NoCase">No calls to slDataTypeAndScale() require manual inspection.</entry>
    <entry key="MACheckDTAndScaleSub2RecAction">To manually fix the warning, click the block hyperlink to identify the block. Double-click the block to open the block parameters dialog box, then inspect the calls and manually change the value if they are unnecessary.</entry>
    <entry key="MADTAndScaleRemove">Modify</entry>
    <entry key="MADTAndScaleRemoveDscp">Replace the unnecessary calls to slDataTypeAndScale() listed in Automatic Replacement Cases.</entry>
    <entry key="MADTAndScaleRemoveDscp_new">Replace the unsupported and/or unnecessary calls to slDataTypeAndScale() listed in Required/Recommended Replacement Cases.</entry>
    <entry key="MADTAndScaleRemoveCase">The following calls to slDataTypeAndScale() have been replaced.</entry>
    <entry key="MADTAndScaleAllBlocks">All Cases</entry>
    <entry key="MADTAndScaleBlockName">Block</entry>
    <entry key="MADTAndScaleParamName">Parameter</entry>
    <entry key="MADTAndScaleNewStr">Recommended Value</entry>
    <entry key="MADTAndScaleOldStr">Old Value</entry>
    <entry key="MADTAndScaleCurStr">Current Value</entry>
    <entry key="MATitletipCheckParamTunableIgnore">Check for models whose Model Parameter Configuration dialog boxes specify parameter tunability information. Simulink ignores tunability information specified in this way for referenced models.</entry>
    <entry key="MATitleCheckParamTunableIgnore">Check for parameter tunability information ignored for referenced models</entry>
    <entry key="MATitletipCheckBlockConstraintTunableParam">Lookup and Lookup2D blocks have strict constraints when they are tunable.</entry>
    <entry key="MATitleCheckBlockConstraintTunableParam">Check for blocks that have constraints on tunable parameters</entry>
    <entry key="MATitletipCheckSampleTime">Incorrect tasking mode can result in inefficient code execution.</entry>
    <entry key="MATitleCheckSampleTime">Check sample times and tasking mode</entry>
    <entry key="MATitletipIdentQuestCodeInstr">Instrumentation of the generated code can cause non-optimal results.</entry>
    <entry key="MATitleIdentQuestCodeInstr">Identify questionable code instrumentation (data I/O)</entry>
    <entry key="MATitletipIdentQuestSoftSpec">Support for some software environment settings can lead to non-optimal results</entry>
    <entry key="MATitleIdentQuestSoftSpec">Identify questionable software environment specifications</entry>
    <entry key="MATitletipCheckOptimSetting">Having unselected optimizations can lead to non-optimal results</entry>
    <entry key="MATitleCheckOptimSetting">Check optimization settings</entry>
    <entry key="MATitletipCheckHardImple">Inconsistencies or underspecification of hardware attributes can lead to non-optimal results</entry>
    <entry key="MATitleCheckHardImple">Check the hardware implementation</entry>
    <entry key="MATitletipCheckModelrefMismatch">Identify model blocks whose configuration settings mismatch with top model</entry>
    <entry key="MATitleCheckModelrefMismatch">Check for model reference configuration mismatch</entry>

    <!-- Model Reference Configset Compliance For SIM and RTW targets  -->
    <entry key="MATitletipCheckModelRefSIMConfigCompliance">Identify model reference diagnostic settings that Accelerator simulation does not support.</entry>
    <entry key="MATitletipCheckModelRefRTWConfigCompliance">Identify model reference identifier format settings that code generation does not support.</entry>
    <entry key="MAModelRefSIMConfigCheckInfo">These current diagnostic settings are not supported for referenced models in Accelerator mode. The top model for this model reference hierarchy is ''{0}''</entry>
    <entry key="MAModelRefRTWConfigCheckInfo">These current identifier format settings are not supported for code generation of the model reference hierarchy with the top model ''{0}''.</entry>
    <entry key="MAModelRefConfigCheckDSMHeader">Detect Read Before Write, Write After Read, and Write After Write diagnostic settings are not supported for the following local Data Store Memory blocks in referenced models in Accelerator mode.</entry>
    <entry key="MAModelRefConfigCheckPassText">The configuration parameter settings passed the check.</entry>
    <entry key="MAModelRefConfigCheckTableCol1">Parameter</entry>
    <entry key="MAModelRefConfigCheckTableCol2">Current Value</entry>
    <entry key="MAModelRefConfigCheckRecActionSIM"><![CDATA[To take advantage of these diagnostics, ensure the model is <a href="matlab:helpview([docroot,''/toolbox/simulink/ug/simulink_ug.map''], ''mamodelref_sim_modes'');">referenced in Normal mode</a>. For details, see the <a href="matlab:helpview([docroot,''/toolbox/simulink/ug/simulink_ug.map''],''model_ref_limitations_ma_checksimulation'');">documentation</a>.]]></entry> 
    <entry key="MAModelRefConfigCheckRecActionRTW"><![CDATA[Code generation appended the $R token, which represents the model name. For details, see the <a href="matlab:helpview([docroot,''/toolbox/simulink/ug/simulink_ug.map''],''model_ref_limitations_ma_checkcodegen'');">documentation</a>.]]></entry>
    <entry key="MAModelRefConfigCheckModelHeader">Referenced Model: </entry>
    <entry key="MATitleCheckModelRefSIMConfigCompliance">Check diagnostic settings ignored during accelerated model reference simulation</entry>
    <entry key="MATitleCheckModelRefRTWConfigCompliance">Check code generation identifier formats used for model reference</entry>
    <!-- End of Model Reference Configset Compliance for SIM and RTW targets -->

    <entry key="MATitletipIdentQuestBlocks">Identify blocks not supported by code generation or not recommended for deployment</entry>
    <entry key="MATitleIdentQuestBlocks">Identify questionable blocks within the specified system</entry>
    <entry key="MATitletipCheckSolver">Incorrect settings can prevent code generation. Under-specifying sample times can lead to undesired results.</entry>
    <entry key="MATitleCheckSolver">Check solver for code generation</entry>
    <entry key="MATitletipIdentExpensiveBlocks">These settings can lead to non-optimal results</entry>
    <entry key="MATitleIdentExpensiveBlocks">Identify blocks that generate expensive rounding code</entry>
    <entry key="MATitletipIdentLUTRangeCheckCode">These settings can lead to inefficient code generation when inputs always fall within the range of valid breakpoint values for lookup table blocks, including Lookup Table blocks, Prelookup blocks and Interpolation blocks.</entry>
    <entry key="MATitleIdentLUTRangeCheckCode">Identify lookup table blocks that generate expensive out-of-range checking code</entry>
    <entry key="MALookupTableRemoveRangeCheckingCodeInfo">The following lookup table blocks generate out-of-range checking code. If the inputs always fall within the range of valid breakpoint values, you can remove the range-checking code for embedded code generation on a block-by-block basis.</entry>
    <entry key="MALUTRemoveRangeCheckCodeDscp">If the inputs always fall within the range of valid breakpoint values, you can remove the range-checking code to make code generation more efficient.</entry>
    <entry key="MALUTRemoveRangeCheckCodePass">The lookup table blocks have been configured to generate range-checking free code.</entry>
    <entry key="MALookupTableBlockName">Blocks</entry>
    <entry key="MALookupTableParamName">Parameters</entry>
    <entry key="MALookupTableNewSetting">Recommended settings</entry>
    <entry key="MALookupTableRangeRemoveAction">To automatically fix the warning for all listed blocks, click the "{0}" button and then rerun the check. To manually fix the warning, click the block hyperlink to identify the block. Double-click the block to open the block parameters dialog box. In the block parameters dialog box, manually apply the recommended settings. In addition, we also recommend you to set the 'DiagnosticForOutOfRangeInput' in the block parameters dialog box to 'Warning' or 'Error' to detect any out-of- range inputs during simulation.</entry>
    <entry key="MALookupTableRangeRemoveActionResult">All listed blocks have been set to not generate range-checking code. In addition, 'DiagnosticForOutOfRangeInput' for these blocks has been set to 'Warning' if their current settings are 'None'. Therefore, any out-of-range inputs can be detected during simulation.</entry>    
    <entry key="MALookupTableRangeRemove">Modify</entry>
    <entry key="MATitletipCheckRootInport">Root model Inport blocks that do not fully define their attributes can lead to undesired results</entry>
    <entry key="MATitleCheckRootInport">Check root model Inport block specifications</entry>
    <entry key="MATitletipIdentUnconnectLine">Unconnected objects can indicate a problem in the model</entry>
    <entry key="MATitleIdentUnconnectLine">Identify unconnected lines, input ports, and output ports</entry>
    <entry key="MATitlePartialBusParameters">Check for partial structure parameter usage with bus signals</entry>
    <entry key="MATitleTipPartialBusParameters">Identify blocks that refer to structure parameters that are not consistent in shape with the associated bus signal.</entry>
    <entry key="MAPassResultStatusPartialBusParameters">No blocks are found that use partial structure parameters with bus signals.</entry>
    <entry key="MAWarnResultStatusPartialBusParameters">The following blocks use partial structure parameters with bus signals:</entry>
    <entry key="MARecActionPartialBusParameters">Consider using Simulink.Bus.createMATLABStruct to convert partial structure parameter values to full structure parameter values for the listed blocks.</entry>
    <entry key="MAUnableOpenModel">Unable to open model. Please open the model then restart Model Advisor tool.</entry>
    <entry key="MAErrorOccurredCompile">Error occurred during model compile.</entry>
    <entry key="MARequiresCompile">Running this check triggers an Update Diagram, which increases processing time</entry>
    <entry key="MARequiresCompileShort">Running this check triggers an Update Diagram.</entry>
    <entry key="MASelectItemFromList">Select product categories or items from the following list:</entry>
    <entry key="MASelectTaskFromList">Select tasks from the following list:</entry>
    <entry key="MASelectAll">Select or deselect all</entry>
    <entry key="MARegenerateReport">WARNING: The link is out-of-date. Regenerate the report for up-to-date information.</entry>
    <entry key="MANotWorkOnLibrary">Model Advisor does not support Simulink libraries.</entry>
    <entry key="MARequiresJava">This tool requires Java to run.</entry>
    <entry key="FunctionRequiresJava">Function ''{0}'' requires java support</entry>
    <entry key="MARemoveExistReport">Model Advisor is removing the existing report.</entry>
    <entry key="MAUnableCreateFilesInDirectory">Unable to create files for Model Advisor under the current working directory: ''{0}''. Please change the current directory so that it is writable.</entry>
    <entry key="MAPassedMsg">Passed</entry>
    <entry key="MAAnalysisThrewError">A problem occurred during model analysis. Correcting it could allow the analysis to complete: {0}</entry>
    <entry key="MAMustBeBlockDiagram">Update analysis is only supported at the model level. To run this analysis, please open the model advisor from the top level of the model instead of the subsystem level and start the analysis over.</entry>
    <entry key="MAUpdateDiagnosticSummary">The Model Advisor has checked blocks, settings, and references in your model for issues in using it with this version of Simulink.  As a first step in resolving any issues described below, you should run the Simulink update tool, slupdate, on models and libraries that have reported issues. Note that there could be more issues beyond the ones identified here. See {0} for more information.</entry>
    <entry key="MAUnableFindTaskSpecified">Unable to find the Model Advisor node {0} specified by {1}. Incorrect spelling or a missing required license might be the cause.</entry>
    <entry key="MAIncompleteTreeStructure">The Model Advisor tree structure is incorrect.  The structure of the following folder is not specified correctly: {0}.</entry>
    <entry key="MAMdlFilesMsgDiagnostic">Referenced model update status:</entry>
    <entry key="MAMdlFilesMsgNone">(No models referenced from this file need updating)</entry>
    <entry key="MALibFilesMsgDiagnostic">Library update status (only referenced blocks are checked):</entry>
    <entry key="MALibFilesMsgNone">(No non-MathWorks libraries are linked by this block diagram)</entry>
    <entry key="MAPassedParens">(Passed)</entry>
    <entry key="MAFileMsgNeedsUpdate">(recommend update)</entry>
    <entry key="MAFileMayNeedUpdate">(may need update)</entry>
    <entry key="MAFileMsgCheck">(recommend check)</entry>
    <entry key="MASfunMsgDiagnostic">S-function update status for the Level 2 API (see {0}):</entry>
    <entry key="MASfunMsgManualName">Writing S-Functions</entry>
    <entry key="MASfunMsgOK">(No level 1 S-functions detected)</entry>
    <entry key="MASfunStatusUpdate">(update)</entry>
    <entry key="MABlocksMsgDiagnostic">Blocks recommended for update, grouped by update reason:</entry>
    <entry key="MAReasonStr"><![CDATA[<b>Update reason</b> &#8212; {0}:]]></entry>
    <entry key="modelBadStateForCheck">slupdate is unable to run the requested check(s) on model {0} in its current compile state</entry>
    <entry key="MACompileCheckUpdatesTitle">Check model, local libraries, and referenced models for known upgrade issues requiring compile time information</entry>
    <entry key="MACompileCheckUpdatesTitleTips">Uses slupdate command''s analysis mode to check for common upgrade issues requiring compile time information</entry>
    <entry key="MAMdlRefTaskTitle">Model Referencing</entry>
    <entry key="MAMdlRefTaskTitleTips">Perform model reference related checks</entry>
    <entry key="MADataTransferTaskTitle">Data Transfer Efficiency</entry>
    <entry key="MADataTransferTaskTitleTips">Perform data transfer efficiency related checks</entry>
    <entry key="MAUpgradeTaskTitle">Upgrading to the Current Simulink Version</entry>
    <entry key="MAUpgradeTaskTitleTips">Perform recommended version upgrade checks</entry>
    <entry key="MATitleCheckSfunctions">Runtime diagnostics for S-functions</entry>
    <entry key="MATitletipCheckSfunctions">Check array bounds and solver consistency checking if S-Functions exist</entry>
    <entry key="MAMsgCheckSfunctions">This model contains the following C-MEX S-functions:</entry>
    <entry key="MASfunTableHeader"><![CDATA[<tr><td><b>ID</b></td><td><b>S-Function</b></td><td><b>Block</b></td></tr>]]></entry>
    <entry key="MASetSolverDataInconsistencyToWarning"><![CDATA[Consider setting <a href="matlab:modeladvisorprivate(''openCSAndHighlight'',''{0}'',''ConsistencyChecking'');">Solver data inconsistency</a> <a href="matlab:helpview(strcat(docroot, ''/toolbox/simulink/helptargets.map''), ''cpd_diags_solverdatainconsistency'',''CSHelpWindow'');">[?]</a> to either <code>error</code> or <code>warning</code> (currently set to <code>none</code>) to validate whether S-functions adhere to the ODE solver consistency rules that Simulink applies to its built-in blocks.]]></entry>
    <entry key="MASetArrayBoundsCheckingToWarning"><![CDATA[Consider setting <a href="matlab:modeladvisorprivate(''openCSAndHighlight'',''{0}'',''ArrayBoundsChecking'');">ArrayBounds exceeded</a> <a href="matlab:helpview(strcat(docroot, ''/toolbox/simulink/helptargets.map''), ''cpd_diags_arrayboundsexceeded'',''CSHelpWindow'');">[?]</a>to either <code>error</code> or <code>warning</code> (currently set to <code>none</code>) to check if S-functions are writing outside array boundaries.]]></entry>
    <entry key="MAMsgMultiTaskDataStore"><![CDATA[<b>Multitask data store</b> checking is not set to ''error''.  When deployed in a real-time, multitasking environment, the integrity of the value of a data store that is written to and read from in different tasks is at risk.  Consider changing the  <a href="matlab:modeladvisorprivate(''openCSAndHighlight'',''{0}'',''MultiTaskDSMMsg'')">Multitask data store</a> setting to ''error''.]]></entry>
    <entry key="MAMsgDuplicateDataStore"><![CDATA[<b>Duplicate data store names</b> checking is not set to ''error''.  Duplicate usage of data store names can lead to unintended shadowing of data stores of higher model scope.  Consider changing the <a href="matlab:modeladvisorprivate(''openCSAndHighlight'',''{0}'',''UniqueDataStoreMsg'')">Duplicate data store names</a> setting to ''error''.]]></entry>
    <entry key="MAMsgDataStoreReadWrite">There are several runtime diagnostics related to the order that data stores are read from and written to:</entry>
    <entry key="MATitleDataStoreRWOrder">Check if Read/Write diagnostics are enabled for Data Store blocks</entry>
    <entry key="MATitletipDataStoreRWOrder">Verify that read/write order diagnostic checking is on if there are Data Store blocks.</entry>
    <entry key="MAMsgGlobalDataStoreRWOrder"><![CDATA[<b>Detect {0}</b> checking is globally disabled. Consider enabling this on the <a href="matlab:modeladvisorprivate(''openCSAndHighlight'',''{1}'',''{2}'')">Data Validity</a> page of the <b>Configuration Parameters</b> dialog box.]]></entry>
    <entry key="MAMsgLocalDataStoreRWOrder"><![CDATA[<b>Detect {0}</b> is not enabled for the following Data Store Memory blocks.  Consider globally enabling this on the <a href="matlab:modeladvisorprivate(''openCSAndHighlight'',''{1}'',''{2}'')">Data Validity</a> page of the <b>Configuration Parameters</b> dialog box or enabling this on all of the following blocks:]]></entry>
    <entry key="MATitleNonDiscSigDataStore">Check data store block sample times for modeling errors</entry>
    <entry key="MATitletipNonDiscSigDataStore">Check to ensure that data store blocks do not have continuous or fixed-in-minor-step sample times.</entry>
    <entry key="MAMsgNonDiscSigDataStore"><![CDATA[<p /> The following Data Store Memory, Data Store Read, and Data Store Write blocks have continuous or fixed-in-minor-step sample times.]]></entry>
    <entry key="MAMsgNonDiscSigDataStoreSuggest"><![CDATA[<p />If you did not intend for these blocks to have continuous sample times, consider making these blocks discrete or replacing them with either Memory or Goto and From blocks.]]></entry>
    <entry key="MANonContDSMPass"><![CDATA[ All Data store blocks have discrete sample times.  <font color="#008000"> Passed </font>]]></entry>
    <entry key="MAMultiTaskCheck"><![CDATA[<p /> The compile time diagnostic to <a href="matlab:modeladvisorprivate(''openCSAndHighlight'',''{0}'',''MultiTaskDSMMsg'');">Detect Multitasking Data Store blocks</a> <a href="matlab:helpview(strcat(docroot, ''/toolbox/simulink/helptargets.map''), ''cpd_diags_multitaskdatastore'', ''CSHelpWindow'');">[?]</a> is currently disabled.  Multitasking data store blocks often indicate a modeling problem using data store blocks.  Consider using the <b>Data Validity</b> page of the <b>Configuration Parameter dialog</b> to turn on checking for multitasking data store blocks.]]></entry>
    <entry key="MATitleNonContSigDerivPort">Check for non-continuous signals driving derivative ports</entry>
    <entry key="MATitletipNonContSigDerivPort">Mark non-continuous signals that drive derivative ports as modeling problems that cause a significant number of solver resets</entry>
    <entry key="MAMsgNonContSigDerivPort"><![CDATA[<p /> The following non-continuous signals drive derivative ports.  This causes the solver to reset every time the signal changes value, which slows down simulation. ]]></entry>
    <entry key="MAMsgContSrcLocation"><![CDATA[<tr><td><a href="matlab:modeladvisorprivate(''hiliteSystem'',''{0}'');">{1}</a></td><td align="right">{2,number,integer}</td><td align="right">{3,number,integer}</td><td align="right">{4,number,integer}</td></tr>]]></entry>
    <entry key="MAMsgContSrcLocationHeader"><![CDATA[ <tr><td><b>Block</b></td><td><b>Port</b></td><td><b>Start Index</b></td><td><b>Width</b></td></tr>]]></entry>
    <entry key="MAMsgNonContSigDerivPortSuggest"><![CDATA[ <p /> Consider one of the following changes <ul><li>Making the signal(s) continuous.</li> <li>Replacing the continuous block(s) receiving these signals with discrete state versions of the block(s).</li></ul>]]></entry>
    <entry key="MASimPnATaskTitle">Simulation Accuracy</entry>
    <entry key="MASimPnATaskTitleTip">Checks for improving Simulation accuracy</entry>
    <entry key="MASimRuntimeAccuracyTaskTitle">Simulation Runtime Accuracy Diagnostics</entry>
    <entry key="MASimRuntimeAccuracyTaskTitleTip">Accuracy Diagnostics that can help find problems but slow Simulink.</entry>
    <entry key="MADataStoreBlocksTaskTitle">Managing Data Store Memory Blocks</entry>
    <entry key="MADataStoreBlocksTaskTitleTip">Checks for improving Data Store Blocks usage that can help find a problem.</entry>
    <entry key="MADiagHasPerformanceHit"><![CDATA[<p /> <b>Note</b>: These runtime diagnostics may slow down simulation considerably. You should set them back to <code>{0}</code> once you have verified that they do not cause any warnings or errors during simulation. ]]></entry>
    <entry key="CheckPassed"><![CDATA[<b>Detect {0}</b> <font color="#008000">Passed</font>]]></entry>
    <entry key="CheckEnabled"><![CDATA[<b>Detect {0}</b> is <font color="#008000">Enabled</font>]]></entry>
    <entry key="MAMsgCouldNotCompileModel"><![CDATA[<p /> Could not compile model <b>{0}.</b>]]></entry>
    <entry key="ContinuousBlocks">Continuous blocks</entry>
    <entry key="ZOHBlocks">Zero Order Hold blocks</entry>
    <entry key="MAErrorStackDump">In {0} at {1,number,integer}</entry>
    <entry key="CommonMAMuxUsedCheckMsg">After replacing the improperly used Mux blocks, you should check to ensure that your model does not contain bus signals treated as vectors. </entry>
    <entry key="CommonMAMuxUsedFixMsg">To do this, set the ''Mux blocks used to create bus signals'' diagnostic to error in the configuration parameters pane and rerun this check.</entry>
    <entry key="CommonMAMuxUsedConfigLink">Buses - Mux blocks used to create bus signals</entry>
    <entry key="CommonMAMuxUsedConfigLink1">Buses - Bus signal treated as vector</entry>
    <entry key="CommonMAUnableToRunCheckForProperBusOnSubsystem">The ''Bus Usage'' check works only from top-level models. Run the Advisor from the top-level model to perform this check.</entry>
    <entry key="CommonMAResultCheckBusSignalsFromMux">It is recommended to set the Diagnostic - ''Mux blocks used to create bus signals'' to error to be able to identify bus signals in your model that are treated as vectors by Simulink.</entry>
    <entry key="CommonMAResultCheckBusSignalsFromMuxLink">Buses: Mux blocks used to create bus signals</entry>
    <entry key="CommonMAMuxUsedasBusErrorMsg1">Your model contains Mux blocks improperly used as bus creators. See below to determine which blocks are improperly used and the reasons for their improper usage. Then, replace the listed Mux blocks with Bus Creator blocks either yourself or by using the command</entry>
    <entry key="CommonMAMuxUsedasBusErrorMsg2">The Bus creator block is available in the library:</entry>
    <entry key="CommonMAMuxUsedasBusErrorMsg3">The following list includes Mux blocks whose outputs are treated as bus signals by bus-capable blocks. Each Mux block in the list is followed by the bus-capable block that treats its output as a bus.</entry>
    <entry key="CommonMAMuxUsedasBusErrorMsg4">The following Mux blocks output bus signals containing signals of different dimensions:</entry>
    <entry key="CommonMAMuxUsedasBusErrorMsg5">The following Mux blocks output bus signals containing signals of different data types:</entry>
    <entry key="CommonMAMuxUsedasBusErrorMsg6">The following Mux blocks output bus signals containing signals of different signal types (real/complex):</entry>
    <entry key="CommonMAMuxUsedasBusErrorMsg7">The following Mux blocks output bus signals containing signals with different sampling modes (sample-based/frame-based):</entry>
    <entry key="CommonMAMuxUsedasBusErrorMsg8">The following Mux blocks output bus signals containing signals with different storage classes:</entry>
    <entry key="CommonMAMuxUsedasBusErrorMsg9">Your model uses buses properly. However, this check failed because your model is not configured to detect future changes that might result in improper bus usage. To detect such changes, set the ''Bus signal treated as vector'' diagnostic to error in the configuration parameters and rerun the check. </entry>
    <entry key="CommonMABusToVectorErrorMsg1">Model contains bus signals that Simulink implicitly converts to vectors. To take advantage of future features in Simulink, your model should explicitly convert these signals to vectors. To do this, either insert a ''Bus to Vector'' conversion block between the bus signal and the block input port that it feeds, or use the command: </entry>
    <entry key="CommonMABusToVectorErrorMsg2">The ''Bus to Vector'' conversion block is available in the library:  </entry>
    <entry key="CommonMABusToVectorErrorMsg3">After converting the identified bus signals to vectors, to detect future changes that might result in improper bus usage, open the configuration parameters and set the ''Bus signal treated as vector'' diagnostic to error and rerun the check. </entry>
    <entry key="CommonMABusToVectorErrorMsg4">The following bus signals are treated as vectors:</entry>
    <entry key="CommonMABusToVectorMsg"> Bus signal feeding input port   </entry>
    <entry key="MExplorerCodeforModelMsg0">No Standalone Code to Display.</entry>
    <entry key="MExplorerCodeforModelMsg1">Refresh:</entry>
    <entry key="MExplorerCodeforModelMsg2">click to reload from current directory </entry>
    <entry key="MExplorerCodeforModelMsg3">Code for </entry>
    <entry key="MExplorerCodeforModelMsg4">Subsystem Name: </entry>
    <entry key="MExplorerCodeforModelMsg5">Model Name: </entry>
    <entry key="MExplorerCodeforModelMsg6">Explicitly Referenced Models: </entry>
    <entry key="MExplorerCodeforModelMsg7"> None</entry>
    <entry key="MExplorerCodeforModelMsg8">Implicitly Referenced Models: </entry>
    <entry key="MExplorerCodeforModelMsg9">Code Recompile Command: </entry>
    <entry key="MExplorerCodeforModelMsg10"> rebuild generated code</entry>
    <entry key="MExplorerCodeforModelMsg11"> Code not generated yet. </entry>
    <entry key="MExplorerCodeforModelMsg12">Build Directory Root: </entry>
    <entry key="MExplorerCodeforModelMsg13">Generated Source File is older than Model File:  </entry>
    <entry key="MExplorerCodeforModelMsg14">HTML Report: </entry>
    <entry key="MExplorerCodeforModelMsg15"> click to open </entry>
    <entry key="MExplorerCodeforModelMsg16"> Does not exist</entry>
    <entry key="MExplorerCodeforModelMsg17">Configuration Settings at the Time of Code Generation:</entry>
    <entry key="MAErrorSimulationNotStopped">Simulink is simulating the model ''{0}''. Please stop the simulation and try again.</entry>
    <entry key="MAErrorModelFileNotWritable">Model {0} is not writable. Change the file permissions to make it writable.</entry>
    <entry key="MAConfirmYes">Yes</entry>
    <entry key="MAConfirmNo">No</entry>
    <entry key="rapidAccelSimStart">Starting rapid accelerator simulation for model: {0}</entry>
    <entry key="rapidAccelCheckingIfUpToDate">Computing the structural checksum</entry>
    <entry key="rapidAccelBuildStart">Building the rapid accelerator target for model: {0}</entry>
    <entry key="rapidAccelTargetIsUpToDate">The rapid accelerator target is up-to-date</entry>
    <entry key="rapidAccelTargetIsOutOfDate">The rapid accelerator target is out-of-date</entry>
    <entry key="rapidAccelBuildFinish">### Successfully built the rapid accelerator target for model: {0}</entry>
    <entry key="rapidAccelBuildFailed">Unable to build a standalone executable to simulate the model ''{0}'' in rapid accelerator mode.</entry>
    <entry key="rapidAccelBuildFailedCSFunctionSourceNotFound">Unable to build a standalone executable to simulate the model ''{0}'' in rapid accelerator mode.  Could not find the C S-function source file ''{1}''.  For rapid accelerator simulation, source files for all S-functions must be placed in the same folder as their corresponding S-function MEX file.  Note that additional S-function source files can be specified through the S-function block's ''S-function modules'' field and through the use of rtwmakecfg.m.  For more information, please consult the S-function documentation.</entry>
    <entry key="rapidAccelBuildFailedMaybeCPP">	The build failure may have been due to the use of custom C++ code in ''{0}'' because rapid accelerator currently supports only C code generation.</entry>
    <entry key="rapidAccelLCCBuildFailed">Failed to build model ''{0}'' using LCC in rapid accelerator mode, please consider using a different compiler instead. For details on supported compiler versions, see\n\nhttp://www.mathworks.com/support/compilers/current_release</entry>
    <entry key="rapidAccelExeError">Error occurred while simulating the model ''{0}'' in rapid accelerator mode. Rerun the simulation in normal mode to diagnose this error. {1}</entry>
    <entry key="rapidAccelAssertion"> Assertion detected in ''{0}'' at time {1}</entry>
    <entry key="rapidAccelUnableToLoadExtInputsWrongNumber"> An error occurred while evaluating the external inputs for the model ''{0}'': ''{0}'' has {2} root inport blocks, but {1} external inputs were specified in the Data Import/Export page of the Configuration Parameters dialog for ''{0}''. The number of external inputs specified in the Data Import/Export page must equal 1 or must equal the number of root inport blocks in the model. </entry>
    <entry key="rapidAccelUnableToLoadExtInputsBadFormat"> An error occurred while evaluating the external inputs for the model ''{0}'': in Rapid Accelerator mode, the external inputs must be double arrays or structs whose leaves are MATLAB timeseries. </entry>
    <entry key="rapidAccelDatasetExtInputInvalidNumberOfExtInputs">The first external input data for model ''{0}'' is of type Simulink.SimulationData.Dataset. Rapid Accelerator supports external input of this type only if there is exactly one external input specified.</entry>
    <entry key="rapidAccelDatasetExtInputNonScalarDataset">The external input data for model ''{0}'' is of type Simulink.SimulationData.Dataset. The dimension of the input is not scalar. Rapid Accelerator supports external input of this type only if the Simulink.SimulationData.Dataset object is scalar.</entry>
    <entry key="rapidAccelDatasetExtInputInvalidNumberOfElements">The external input data for model ''{0}'' is of type Simulink.SimulationData.Dataset. Rapid Accelerator supports external input of this type only if there is exactly the same number of elements in the Simulink.SimulationData.Dataset instance as the number of root inport blocks in the model. Root inport blocks include Trigger and Enable blocks.</entry>
    <entry key="rapidAccelDatasetExtInputInvalidNumberOfSamples">The external input data for model ''{0}'' is of type Simulink.SimulationData.Dataset. Rapid Accelerator supports external input of this type only if each timeseries in the dataset contains a non-zero number of data points.</entry>
    <entry key="rapidAccelMCOSObjExtInputsNotSupported">The external input data for model ''{0}'' has signal values of type ''{1}'' that are MATLAB objects. Rapid accelerator does not support external inputs of such data types</entry>
    <entry key="rapidAccelInportBoundsNotHonoured"> One or more root inports in the model ''{0}'' has a nonempty OutMin or OutMax parameter. However, bounds on root inport data are not enforced in rapid accelerator; the data may exceed the bounds during a simulation, without warning or error.  </entry>
    <entry key="rapidAccelCppNotSupported">Rapid accelerator only supports C code. It will not build model ''{0}'' in C++ as it is set on the Configuration set. This may cause the build to fail</entry>
    <entry key="rapidAccelSimOptNotSupported">Simulation option ''{0}'' is not supported in rapid accelerator mode</entry>
    <entry key="rapidAccelSimOptInvVal" note="stringDatatypeUpdate">The sim command option ''{0}'' should be either of character vector type or of numeric type for rapid accelerator.</entry>
    <entry key="rapidAccelInvCmdlSimParam">The sim command parameter ''{0}'' and its value is not a valid parameter, value pair. Setting the parameter produces the following error: {1} : {2} </entry>
    <entry key="rapidAccelSimOptNotSupportedWithoutUpdate">Simulation option ''{0}'' is not supported in rapid accelerator mode with up-to-date check off.</entry>
    <entry key="rapidAccelInlineParametersOff">Inline parameters are turned off for the model ''{0}''. It is strongly recommended to turn on Inline parameters and also specify tunable parameters</entry>
    <entry key="rapidAccelUnableToStartExecutable">Unable to start rapid accelerator executable for model ''{0}'', expected to find PID ''{1}''</entry>
    <entry key="rapidAccelUnableToFindPort">Unable to find an unused TCP/IP port to connect to the rapid accelerator target for model ''{0}''</entry>
    <entry key="rapidAccelCannotGetPID">Unable to determine if rapid accelerator target for ''{0}'' started successfully</entry>
    <entry key="rapidAccelUnableToConnect">Unable to connect to the rapid accelerator target for ''{0}'' via external mode: {1}</entry>
    <entry key="rapidAccelExtModeConnectFailed">Rapid accelerator target connection failed</entry>
    <entry key="rapidAccelTgtConnConnectFailed">Due to an internal connection problem, these simulation features are not available in Rapid Accelerator mode:\n  -tuning structured parameters during simulation\n  -streaming data to Simulink Data Inspector\n  -streaming data to Simulink Dashboard blocks</entry>
    <entry key="rapidAccelTgtConnParamDownloadWarning">{0}</entry>
    <entry key="rapidAccelExeModeStartFailed">Rapid accelerator target for model ''{0}'' failed to start</entry>
    <entry key="rapidAccelExeInterrupted">Simulation interrupted</entry>
    <entry key="rapidAccelSettingUp">Setting up to simulate in rapid accelerator mode</entry>
    <entry key="rapidAccelBuilding">Building the rapid accelerator target</entry>
    <entry key="rapidAccelLaunching">Launching the rapid accelerator target</entry>
    <entry key="rapidAccelConnecting">Connecting to the rapid accelerator target</entry>
    <entry key="rapidAccelRunning">Running in rapid accelerator mode</entry>
    <entry key="rapidAccelSecondSim">A rapid accelerator simulation or build of the model {0} is already running. A second build or simulation cannot be started.</entry>
    <entry key="rapidAccelIncorrectOutputs">Incorrect number of outputs specified for model {0} in the Configuration Parameters dialog box on the Data Import/Export page. When specifying that root-level outports are to be returned individually, the number of fields in the comma separated list must be equal to the number of root-level outports and the fields must be valid MATLAB variable names .</entry>
    <entry key="rapidAccelInvalidOutputsVar">Invalid outputs variable specified for model {0}.</entry>
    <entry key="rapidAccelToFileBlksNotSupportedWithoutUpdate">The model {0} contains ToFile blocks. ToFile blocks are not supported when simulating with up-to-date check off.</entry>
    <entry key="rapidAccelExeNotFound">Executable not found.</entry>
    <entry key="rapidAccelBadBlockDiagramParameterNonexistent"> Error while evaluating the block diagram parameter ''{2}'' for the model ''{0}'': the value of ''{2}'' was specified as ''{1}'' but there is no variable named ''{1}'' in the base workspace or in the model workspace of ''{0}''. Please provide a valid literal value or a valid variable name for the value of ''{2}''. </entry>
    <entry key="rapidAccelBadBlockDiagramParameterExpectingNumeric"> Error while evaluating the block diagram parameter ''{2}'' for the model ''{0}'': the value of ''{2}'', which must be numeric, was specified as ''{1}'', but ''{1}'' evaluated to a non-numeric value. Please specify a numeric value for ''{2}''. </entry>
    <entry key="rapidAccelAutoSolverError">Rapid accelerator with up to date check off is not compatible with auto solver. Please turn on the up to date check or use a non auto solver.</entry>
    <entry key="rapidAccelExtModeTestingError">Error while setting the ExtModeTesting parameter for the model, {0},: {1}, {2}.</entry>
    <entry key="rapidAccelOutportInvalidArrayDataLogging">The ''Array'' format for saving outputs to the workspace requires all signals connected to the root outports to be scalar or 1-D arrays. Specify ''Configuration Parameters > Data Import/Export > Format'' to either ''Structure'' or ''StructureWithTime''.</entry>

    <entry key="NoRapidAccelSimModeForRootFcnCall">Rapid Accelerator simulation
    mode is not supported for model ''{0}'' because the model contains a
    root-level inport (''{1}'') that is generating a function-call.</entry>

    <entry key="rapidAccelSFunctionNeedsToBeRegenerated"><![CDATA[A bus used as
    an input or output to S-Function block ''{0}'' had padding added to it by
    Simulink. Before using this S-function in a top model in a Rapid Accelerator
    simulation, regenerate the S-function with the tool originally used to
    create it. The <a href="matlab:sl(''upgradeadvisor'', ''{1}'')">Upgrade
    Advisor</a> check ''Check model for known block upgrade issues requiring
    compile time information'' can assist in identifying and automatically
    updating all such blocks.]]></entry>

    <entry key="rapidAccelSFunctionBuilderNeedsToBeRegenerated"><![CDATA[A bus
    used as an input or output to S-Function Builder block ''{0}'' had padding
    added to it by Simulink. Before using this S-function in a top model in a
    Rapid Accelerator simulation, regenerate the S-function with the S-Function
    Builder. The <a href="matlab:sl(''upgradeadvisor'', ''{1}'')">Upgrade
    Advisor</a> check ''Check model for known block upgrade issues requiring
    compile time information'' can assist in identifying and automatically
    updating all such blocks.]]></entry>

    <entry key="rapidAcceleratorExternalModeConnectStage">Connect to Rapid Accelerator Process and Simulate</entry>

 <entry key="TopModelPilERT"><![CDATA[Unable to run "{0}" in SIL or PIL simulation mode. It is either configured for a target that is not ERT-based, or (if the target is ERT-based) Embedded Coder is not installed or licensed. To resolve this, ensure that Embedded Coder is installed and licensed, and use an ERT-based system target file (select Configuration Parameters > Code Generation and enter ''ert.tlc'' in the System target file field).  Alternatively, choose a different simulation mode e.g. select Simulation > Mode > Normal.]]></entry>
    <entry key="pilRunning">Running in {0} mode (to interrupt, press CTRL+C in the Command Window)</entry>
    <entry key="MAMergeAnalysisError">Cannot complete Merge analysis:</entry>
    <entry key="MADataStoreAnalysisRBWError">Cannot complete read-before-write Data Store analysis</entry>
    <entry key="MAMergeAnalysisInvalidMaxAnalysisTime">Maximum analysis time must be a positive scalar value.</entry>
    <entry key="MAMergeAnalysisSummaryHeading">Summary</entry>
    <entry key="MAMergeAnalysisDetailHeading">Details</entry>
    <entry key="MAMergeAnalysisDescOverall">Merge blocks can be interconnected to form a tree structure. The report below shows the results where Merge blocks in the same tree are analyzed together as a group.</entry>
    <entry key="MAMergeAnalysisDescPassed">This tree of Merge blocks is being used properly.</entry>
    <entry key="MAMergeAnalysisDescUnknown">The Merge analysis procedure failed to complete the analysis in the given time.</entry>
    <entry key="MAMergeAnalysisTotalMergeTrees">Total Number of Merge Trees</entry>
    <entry key="MAMergeAnalysisStatus">Status</entry>
    <entry key="MAMergeAnalysisMergeTree">Merge Tree</entry>
    <entry key="MAMergeAnalysisDescription">Description</entry>
    <entry key="MAMergeAnalysisHeadingFailed">Failed</entry>
    <entry key="MAMergeAnalysisHeadingPassed">Passed</entry>
    <entry key="MAMergeAnalysisHeadingWarning">Warning</entry>
    <entry key="MAMergeAnalysisHeadingUnknown">Unknown</entry>
    <entry key="MAMergeAnalysisProblemForcedRun">Blocks {0} and {1} drive the same tree of Merge blocks and they can execute at the same time step.</entry>
    <entry key="MAMergeAnalysisForDetailsSee">For more information on the usage of the Merge block, see</entry>
    <entry key="MAMergeAnalysisMerge">Merge</entry>
    <entry key="MAMsgAnd">and</entry>
    <entry key="MAMsgBlock">block</entry>
    <entry key="MAMsgBlocks">blocks</entry>
    <entry key="MAUnableToRunCheckOnSubsystem">This check works only from top-level models. Therefore, run the Model Advisor from the top-level model to perform this check.</entry>
    <entry key="MAOutportCondSubsysCheckError">The check on the Outport and Merge initialization parameters cannot be completed:</entry>
    <entry key="MAOutportCondSubsysCheckLibraryBlock">Library Block</entry>
    <entry key="MAOutportCondSubsysCheckInstance">Instance</entry>
    <entry key="MAOutportCondSubsysCheckHeadingOverall">Check usage of Outport blocks</entry>
    <entry key="MAOutportCondSubsysCheckDescOverall">This check finds and reports issues related to Outport blocks and Conditional Subsystems for migrating to simplified initialization mode.</entry> 
    <entry key="MAOutportCondSubsysCheckStatusOverall">This model is not using simplified initialization mode.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOverallHasError">Modify the model to address all of the failed subchecks below, and then rerun this check.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOverallNoErrorButHasWarning">Please make sure all of the warnings reported in the subchecks below have been addressed</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOverallNoErrorNoWarning">No messages related to outport blocks or conditional subsystems were found. This model can be migrated to simplified initialization mode using configuration parameters</entry>
    <entry key="MAOutportCondSubsysCheckHeadingBlockDiagramErrorNeedStrictBusMode">Verify the bus diagnostic settings</entry>
    <entry key="MAOutportCondSubsysCheckDescBlockDiagramErrorNeedStrictBusMode">In the Connectivity Diagnostics pane of the Configuration Parameters dialog box, ensure that the ''Mux blocks used to create bus signals'' option is set to ''error''.</entry>
    <entry key="MAOutportCondSubsysCheckStatusBlockDiagramErrorNeedStrictBusMode">Incorrect bus diagnostic settings were detected for this model.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionBlockDiagramErrorNeedStrictBusMode">After setting the ''Mux blocks used to create bus signals'' option to ''error'', ensure that the model updates without any errors.</entry>
<!--

    <entry key="MAOutportCondSubsysCheckHeadingBlockDiagramErrorNeedMergeDiagnostics">Check the run-time diagnostic setting of the Merge block</entry>
    <entry key="MAOutportCondSubsysCheckDescBlockDiagramErrorNeedMergeDiagnostics">On the All Parameters tab of the Configuration Parameters dialog box, ensure that the ''Detect multiple driving blocks executing at the same time step'' option of the Merge block is set to ''error''.</entry>
    <entry key="MAOutportCondSubsysCheckStatusBlockDiagramErrorNeedMergeDiagnostics">An incorrect run-time diagnostic setting was detected for the Merge block for this model.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionBlockDiagramErrorNeedMergeDiagnostics">After setting the ''Detect multiple driving blocks executing at the same time step'' option to ''error'', ensure that the model simulates without any errors.</entry>
-->
    <entry key="MAMergeBlockCheckLibraryBlock">Library Block</entry>
    <entry key="MAMergeBlockCheckInstance">Instance</entry>
    <entry key="MAMergeBlockCheckHeadingLibraryBlockErrorMigration">Check for library blocks with instances that cannot be migrated</entry>
    <entry key="MAMergeBlockCheckDescLibraryBlockErrorMigration">Ensure that you can safely migrate all instances of library-linked blocks in the model to simplified initialization mode.</entry>
    <entry key="MAMergeBlockCheckStatusLibraryBlockErrorMigration">The following library blocks have at least one instance that you cannot migrate to simplified initialization mode or at least two instances with different migration paths.</entry>
    <entry key="MAMergeBlockCheckRecActionLibraryBlockErrorMigration">For each of these blocks, examine the sub-check results for their instances to determine a proper corrective action.</entry>
    <entry key="MAMergeBlockCheckHeadingLibraryBlockWarningMigration">Check for library blocks with instances that have warnings</entry>
    <entry key="MAMergeBlockCheckDescLibraryBlockWarningMigration">Identify library blocks that have instances with warnings.</entry>
    <entry key="MAMergeBlockCheckStatusLibraryBlockWarningMigration">Each of the following library blocks has at least one instance with a sub-check warning.</entry>
    <entry key="MAMergeBlockCheckRecActionLibraryBlockWarningMigration">Determine if all warnings are acceptable. If any warning is unacceptable, modify the model in accordance with the warning before migrating to simplified initialization mode.</entry>
    <entry key="MAMergeBlockCheckHeadingOverall">Check usage of Merge blocks</entry>
    <entry key="MAMergeBlockCheckDescOverall">This check finds and reports issues related to merge blocks for migrating to simplified initialization mode. </entry> 
    <entry key="MAMergeBlockCheckStatusOverall">This model is not using simplified initialization mode.</entry>
    <entry key="MAMergeBlockCheckRecActionOverallHasError">Modify the model to address all of the failed subchecks below, and then rerun this check.</entry>
    <entry key="MAMergeBlockCheckRecActionOverallNoErrorButHasWarning">Review the warnings reported in the subchecks below and address any that require attention.</entry>
    <entry key="MAMergeBlockCheckRecActionOverallNoErrorNoWarning">No messages related to Merge blocks were found. This model can be migrated to simplified initialization mode using configuration parameters.</entry>
    <entry key="MAMergeBlockCheckHeadingBlockDiagramErrorNeedMergeDiagnostics">Check the run-time diagnostic setting of the Merge block</entry>
    <entry key="MAMergeBlockCheckDescBlockDiagramErrorNeedMergeDiagnostics">On the All Parameters tab of the Configuration Parameters dialog box, ensure that the ''Detect multiple driving blocks executing at the same time step'' option of the Merge block is set to ''error''.</entry>
    <entry key="MAMergeBlockCheckStatusBlockDiagramErrorNeedMergeDiagnostics">An incorrect run-time diagnostic setting was detected for the Merge block for this model.</entry>
    <entry key="MAMergeBlockCheckRecActionBlockDiagramErrorNeedMergeDiagnostics">After setting the ''Detect multiple driving blocks executing at the same time step'' option to ''error'', ensure that the model simulates without any errors.</entry>

    <entry key="MAModelLevelMessagesCheckHeadingOverall">Check for model level messages</entry>
    <entry key="MAModelLevelMessagesCheckDescOverall">This check finds and reports model level messages for migrating to simplified initialization mode.</entry> 
    <entry key="MAModelLevelMessagesCheckStatusOverall">This model has reported some model level messages which should be addressed.</entry>
    <entry key="MAModelLevelMessagesCheckRecActionOverallHasError">Modify the model to address all of the failed subchecks below, and then rerun this check.</entry>
    <entry key="MAModelLevelMessagesCheckRecActionOverallNoErrorButHasWarning">Review the warnings reported in the subchecks below and address any that require attention.</entry>
    <entry key="MAModelLevelMessagesCheckRecActionOverallHasErrorOtherChecksFail">Also, modify the model to address all of the failed subchecks below, and then rerun this check.</entry>
    <entry key="MAModelLevelMessagesCheckRecActionOverallNoErrorButHasWarningOtherChecksFail">Also, review the warnings reported in the subchecks below and address any that require attention.</entry>

    <entry key="MAModelLevelMessagesCheckRecActionOtherChecks">Run the following checks and address any reported issues:</entry> 

    <entry key="MAModelLevelMessagesCheckHeadingBlockDiagramWarningClassicUnderspecifiedInitializationMode">Verify simplified initialization mode setting</entry>
    <entry key="MAModelLevelMessagesCheckDescBlockDiagramWarningClassicUnderspecifiedInitializationMode">On the All Parameters tab of the Configuration Parameters dialog box, ensure that the ''Underspecified initialization detection'' parameter is set to ''Simplified''.</entry>
    <entry key="MAModelLevelMessagesCheckStatusBlockDiagramWarningClassicUnderspecifiedInitializationMode">This model is not using simplified initialization mode.</entry>
    <entry key="MAModelLevelMessagesCheckRecActionBlockDiagramWarningClassicUnderspecifiedInitializationMode">Change the ''Underspecified initialization detection'' setting for this model to simplified</entry>
    <entry key="MAModelLevelMessagesCheckHeadingModelReferenceErrorModelRefNeedConsistentOutportInit">Verify that Model blocks are using simplified initialization mode</entry>
    <entry key="MAModelLevelMessagesCheckDescModelReferenceErrorModelRefNeedConsistentOutportInit">Ensure that all referenced models are using simplified initialization mode.</entry>
    <entry key="MAModelLevelMessagesCheckStatusModelReferenceErrorModelRefNeedConsistentOutportInit">The models referenced by the following Model blocks have not been migrated to simplified initialization mode.</entry>
    <entry key="MAModelLevelMessagesCheckRecActionModelReferenceErrorModelRefNeedConsistentOutportInit">Review the warnings reported in the subchecks below and address any that require attention. If there are no errors reported you can change the Underspecified Initialization detection mode to simplified</entry>

    <entry key="MAMergeBlockCheckHeadingMergeErrorSingleInput">Check for single-input Merge blocks</entry>
    <entry key="MAMergeBlockCheckDescMergeErrorSingleInput">Ensure that there is no Merge block that has only one input port.</entry>
    <entry key="MAMergeBlockCheckStatusMergeErrorSingleInput">The following Merge blocks have only one input port. Single-input Merge blocks are not supported by simplified initialization mode.</entry>
    <entry key="MAMergeBlockCheckRecActionMergeErrorSingleInput">Replace the combination of a Mux block and a single-input Merge block with an equivalent multi-input Merge block.</entry>
    <entry key="MAMergeBlockCheckHeadingMergeErrorEmptyIC">Check for root Merge blocks that have an unspecified ''Initial output''</entry>
    <entry key="MAMergeBlockCheckDescMergeErrorEmptyIC">Ensure that the ''Initial output'' parameter is explicitly specified for all root Merge blocks.</entry>
    <entry key="MAMergeBlockCheckStatusMergeErrorEmptyIC">The ''Initial output'' parameter is not explicitly specified for the following root Merge blocks.</entry>
    <entry key="MAMergeBlockCheckRecActionMergeErrorEmptyIC">Set the ''Initial output'' parameter of the above-listed Merge blocks to a value other than [].</entry>
    <entry key="MAMergeBlockCheckHeadingMergeWarningUseDefaultIC">Check for root Merge blocks that have an unspecified ''Initial output''</entry>
    <entry key="MAMergeBlockCheckDescMergeWarningUseDefaultIC">Warn about the new behavior of Merge blocks that do not specify an explicit ''Initial output'' value</entry>
    <entry key="MAMergeBlockCheckStatusMergeWarningUseDefaultIC">The ''Initial output'' parameter is not explicitly specified for the following Merge blocks. In this case, the merge blocks uses the default ground value as the ''Initial output'' value.</entry>
    <entry key="MAMergeBlockCheckRecActionMergeWarningUseDefaultIC">Determine if the new behavior of the Merge blocks is acceptable. If it is not acceptable, modify the model to account for the new behavior before migrating to simplified initialization mode.</entry>
    <entry key="MAMergeBlockCheckHeadingMergeErrorInputOffsets">Check for Merge blocks with nonzero input port offsets</entry>
    <entry key="MAMergeBlockCheckDescMergeErrorInputOffsets">Ensure that the ''Allow unequal port widths'' parameter is set to ''off'' for all Merge blocks.</entry>
    <entry key="MAMergeBlockCheckStatusMergeErrorInputOffsets">The ''Allow unequal port widths'' parameter is set to ''on'' for the following Merge blocks.</entry>
    <entry key="MAMergeBlockCheckRecActionMergeErrorInputOffsets">Set the ''Allow unequal port widths'' parameter to ''off'' for the above-listed Merge blocks. Use Merge blocks only for signal elements that require true merging. Other elements can be combined with merged elements contiguously using the Concatenate block.</entry>
    <entry key="MAMergeBlockCheckHeadingMergeErrorNonCondSubsysSrc">Check for Merge blocks that have unconnected inputs or that have inputs from non-conditionally executed subsystems</entry>
    <entry key="MAMergeBlockCheckDescMergeErrorNonCondSubsysSrc">Ensure that no Merge block has any inputs that are unconnected or that are driven directly by an Iterator subsystem or by a block that is not a conditionally executed subsystem.</entry>
    <entry key="MAMergeBlockCheckStatusMergeErrorNonCondSubsysSrc">Invalid input connections were detected for the following Merge blocks.</entry>
    <entry key="MAMergeBlockCheckRecActionMergeErrorNonCondSubsysSrc">Modify the input connections of the above-listed Merge blocks per the above-specified requirements.</entry>
    <entry key="MAMergeBlockCheckHeadingMergeErrorDiscontigCondSubsysSrc">Check for Merge blocks with inputs that are combined or reordered outside of conditionally executed subsystems</entry>
    <entry key="MAMergeBlockCheckDescMergeErrorDiscontigCondSubsysSrc">Ensure that no Merge block has input signals that are combined or reordered outside of conditionally executed subsystems using the Mux, the Bus Creator, or the Selector block.</entry>
    <entry key="MAMergeBlockCheckStatusMergeErrorDiscontigCondSubsysSrc">Invalid input connections were detected for the following Merge blocks.</entry>
    <entry key="MAMergeBlockCheckRecActionMergeErrorDiscontigCondSubsysSrc">Modify the input connections of the above-listed Merge blocks per the above requirements.</entry>
    <entry key="MAMergeBlockCheckHeadingMergeErrorMultSrcTs">Check for Merge Blocks with inconsistent input sample times</entry>
    <entry key="MAMergeBlockCheckDescMergeErrorMultSrcTs">Ensure that all input signals to a given Merge block have the same sample time.</entry>
    <entry key="MAMergeBlockCheckStatusMergeErrorMultSrcTs">The input signals to the following Merge blocks have different sample times.</entry>
    <entry key="MAMergeBlockCheckRecActionMergeErrorMultSrcTs">Modify the sample times of the input signals to the above-listed Merge blocks per the above requirements.</entry>
    <entry key="MAMergeBlockCheckHeadingMergeErrorMultInputsDrivenBySameSrc">Check for Merge blocks with multiple input ports that are driven by a single source</entry>
    <entry key="MAMergeBlockCheckDescMergeErrorMultInputsDrivenBySameSrc">Ensure that no Merge block has input signals that are driven by the same conditionally executed subsystem or conditionally executed Model block.</entry>
    <entry key="MAMergeBlockCheckStatusMergeErrorMultInputsDrivenBySameSrc">Invalid input connections were detected for the following Merge blocks.</entry>
    <entry key="MAMergeBlockCheckRecActionMergeErrorMultInputsDrivenBySameSrc">Modify the input connections for the above-listed Merge blocks per the above requirements.</entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportErrorBufferConflictFcnCall">Check for Outport blocks that have conflicting signal buffer requirements</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportErrorBufferConflictFcnCall">Ensure that there are no buffers interfering with function-call signals.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportErrorBufferConflictFcnCall">Each of the following Outport blocks has both a standard data signal and either a function-call trigger or a function-call data dependency signal passing through it. Some standard data signals require an explicit signal buffer to ensure correct initialization. However, such buffering cannot be applied because the buffering of signals related to a function-call results in a violation of function-call data dependency.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportErrorBufferConflictFcnCall">Modify the model to use Outport blocks for standard data signals that are separate from Outport blocks connecting signals related to function-calls.</entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportErrorBufferConflictSigObj">Check for Outport blocks that have conflicting signal buffer requirements due to signal objects with non-auto storage class</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportErrorBufferConflictSigObj">Ensure that there are no buffers interfering with signal objects with non-auto storage class.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportErrorBufferConflictSigObj"><![CDATA[Each of the following Outport blocks has a signal object with non-auto storage class on its incoming signal line. In each case, insertion of an explicit signal buffer is required in simplified initialization mode to ensure correct initialization. However, a buffer cannot be inserted because, if inserted, Simulink will not be able to associate such non-auto storage class with the corresponding subsystem output. The buffer is needed for one or more of the following reasons: 
<br>(1) Outport is driven by a block with non-overwritable output such as a Ground, Constant, or a Stateflow block;
<br>(2) Outport is connected to an input of a Merge block;
<br>(3) Outport shares the same signal source with another Outport nested within the current subsystem but having an explicit initial output value of its own; or
<br>(4) Outport shares the same signal source with another Outport in the same subsystem having an explicit initial output value of its own.]]></entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportErrorBufferConflictSigObj">For any of the above reasons, consider inserting a Signal Conversion block before the Outport block and moving the storage class specification to the output of this inserted block. Alternatively, for reason (4), consider modifying the model to pass the signal with non-auto storage class through a separate Outport.</entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportErrorNeedVirtualBusCopy">Check for Outport blocks that require an explicit bus copy</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportErrorNeedVirtualBusCopy">Ensure that the input bus signals for all Outport blocks are copied when necessary.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportErrorNeedVirtualBusCopy">The following Outport blocks need an explicit copy of the input bus signal to ensure correct initialization.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportErrorNeedVirtualBusCopy">Insert a Signal Conversion block before each Outport block and set its ''Output'' parameter to ''Signal copy''.</entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportErrorScalarICForBusSignal">Check for Outport blocks which are driven by a bus signal and whose ''Initial output'' is not a scalar value</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportErrorScalarICForBusSignal">Ensure that all the Outport blocks which are driven by a bus signal have an ''Initial output'' which is a scalar value.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportErrorScalarICForBusSignal">The following Outport blocks need a scalar initial output value. Otherwise, the model will fail to update after migration to simplified initialization mode.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportErrorScalarICForBusSignal">Enter a scalar value for the ''Initial output'' parameter for each Outport block. If the initial values for all the elements are not identical, use Initial Condition (IC) Structures to set the ''Initial output'' after migration to simplified initialization mode. For more information about Initial Condition Structures, see documentation.</entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportErrorMergedButInheritingFromResetWhenDisabledOutport">Check for merged Outport blocks that inherit the initial output value from Outport blocks which have been configured to reset when the blocks become disabled</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportErrorMergedButInheritingFromResetWhenDisabledOutport">Ensure that all Outport blocks driving a Merge block hold their output values when their parent subsystems become disabled.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportErrorMergedButInheritingFromResetWhenDisabledOutport">The following Outport blocks are driving a Merge block but are inheriting their initial output value from Outport blocks which have been configured to reset when the blocks become disabled.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportErrorMergedButInheritingFromResetWhenDisabledOutport">For each Outport block, ensure that the ''Source of initial output value'' parameter is set to ''Dialog'' and the parameter ''Output when disabled'' parameter to ''held''. Ensure that an explicit value is specified for the ''Initial output'' parameter. Alternatively, go to the source Outport block in question and change the ''Output when disabled'' parameter to ''held''.</entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportErrorMergedButResetWhenDisabled">Check for merged Outport blocks that are reset when the blocks are disabled</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportErrorMergedButResetWhenDisabled">Ensure that all Outport blocks driving a Merge block hold their output values when their parent subsystems become disabled.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportErrorMergedButResetWhenDisabled">The following Outport blocks are driving a Merge block but have been configured to reset when the blocks become disabled.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportErrorMergedButResetWhenDisabled">For each Outport block, set the ''Output when disabled'' parameter to ''held''.</entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportErrorEmptyIC">Check for Outport blocks that have an undefined ''Initial output'' value</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportErrorEmptyIC">Ensure that all Outport blocks have a well-defined ''Initial output'' value.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportErrorEmptyIC">An invalid setting was detected for the ''Initial output'' parameter for each of the following Outport blocks.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportErrorEmptyIC">For each Outport block, change the ''Initial output'' parameter to a value other than []. Alternatively, leave the parameter value as [], but make sure that all outport sources are valid sources of an ''Initial output'' value: Constant, Initial Condition, Merge (with initial output), or conditionally executed subsystem blocks.</entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportWarningUseDefaultIC">Check for Outport blocks that have an undefined ''Initial output'' value with invalid initial condition sources</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportWarningUseDefaultIC">Warn about the new behavior of Outport blocks that use the empty matrix ([]) to specify a default ''Initial output'' value</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportWarningUseDefaultIC">Since the outport has an undefined ''Initial output'' value and at least one of the sources of the outport is not a valid source to inherit the initial value, the outport uses the default ground value as the initial output.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportWarningUseDefaultIC">Determine if the new behavior of the Outport blocks is acceptable. If it is not acceptable, modify the model to account for the new behavior before migrating to simplified initialization mode.</entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportErrorEmptyICRateTrans">Check Outport blocks that have automatic rate transitions</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportErrorEmptyICRateTrans">Ensure that the ''Initial output'' parameter is specified for all Outport blocks that have automatic rate transitions.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportErrorEmptyICRateTrans">Simulink has inserted Rate Transition blocks at the input of the following Outport blocks. Their ''Initial output'' parameter needs specification.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportErrorEmptyICRateTrans"> Set the parameter ''Source of initial output value:'' of the Outport block to Dialog, and specify an initial output value. Otherwise, deselect the option ''Automatically handle rate transition for data transfer'' in the Solver pane of the Configuration Parameters dialog.</entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportErrorEmptyICInternal">Check Outport blocks that have a special signal storage requirement</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportErrorEmptyICInternal">Ensure that the ''Initial output'' parameter is specified for all Outport blocks that have a special signal storage requirement.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportErrorEmptyICInternal">In order to comply with the Simulink internal signal storage handling system, the ''Initial output'' must be specified explicitly for the following Outport blocks.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportErrorEmptyICInternal">For each Outport block, change the ''Initial output'' parameter to a value other than [].</entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportWarningUseDefaultICInternal">Check Outport blocks that have a special signal storage requirements and have an undefined ''Initial output'' value.</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportWarningUseDefaultICInternal">Warn about the new behavior of Outport blocks that use the empty matrix ([]) to specify a default ''Initial output'' value.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportWarningUseDefaultICInternal">In order to comply with the Simulink internal signal storage handling system, the outport uses the default ground value as the initial output.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportWarningUseDefaultICInternal">Determine if the new behavior of the Outport blocks is acceptable. If it is not acceptable, modify the model to account for the new behavior before migrating to simplified initialization mode.</entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportErrorResetButEmptyIC">Check the ''Initial output'' setting of Outport blocks that reset when they are disabled</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportErrorResetButEmptyIC">Ensure that the ''Initial output'' parameter is specified for all Outport blocks that reset when they are disabled.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportErrorResetButEmptyIC">The ''Initial output'' parameter must be specified explicitly for the following Outport blocks because they are configured to reset when they are disabled.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportErrorResetButEmptyIC">For each Outport block, change the ''Initial output'' parameter to a value other than [].</entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportErrorNeedEmptyICForFcnCallInArgPassThru">Check the ''Initial output'' setting for Outport blocks that pass through a function-call data dependency signal</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportErrorNeedEmptyICForFcnCallInArgPassThru">Ensure that the ''Initial output'' parameter is set to [] for all Outport blocks that pass through a function-call data dependency signal.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportErrorNeedEmptyICForFcnCallInArgPassThru">The ''Initial output'' parameter must be set to [] for the following Outport blocks because function-call data dependency signals are passing through them.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportErrorNeedEmptyICForFcnCallInArgPassThru">For each Outport block, set the ''Initial output'' parameter to [].</entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportWarningSignalObjectSpecifyingICParam">Check for Outport blocks that use signal objects to specify the ''Initial output'' value</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportWarningSignalObjectSpecifyingICParam">Warn about the new behavior of Outport blocks that use signal objects to specify the ''Initial output'' value.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportWarningSignalObjectSpecifyingICParam">The ''Initial output'' parameter of the following Outport blocks can no longer be specified by signal objects in simplified initialization mode. You can still use signal objects to initialize the input or the output signals for these Outport blocks, but the initialization results may be overwritten by those of the Outport blocks.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportWarningSignalObjectSpecifyingICParam">Determine if the new behavior of the Outport blocks is acceptable. If it is not acceptable, modify the model to account for the new behavior before migrating to simplified initialization mode.</entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportWarningMergedFromGroundSrc">Check for merged Outport blocks that are either unconnected or connected to a Ground block</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportWarningMergedFromGroundSrc">Warn about the new behavior of Outport blocks that are driving Merge blocks but have unconnected inputs or inputs connected to Ground blocks.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportWarningMergedFromGroundSrc">In classic initialization mode, unconnected or grounded Outport blocks do not update the merge signal even when their parent conditionally executed subsystems are executing. In simplified initialization mode, however, the following Outport blocks will update the merge signal with a value of zero when their parent conditionally executed subsystems are executing.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportWarningMergedFromGroundSrc">Determine if the new behavior of the Outport blocks is acceptable. If it is not acceptable, modify the model to account for the new behavior before migrating to simplified initialization mode.</entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportWarningMergedFromNestedCondSubsysSrc">Check for merged Outport blocks that are driven by nested conditionally executed subsystems</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportWarningMergedFromNestedCondSubsysSrc">Warn about the new behavior of Outport blocks that are driving Merge blocks but are in turn driven by conditionally executed subsystems nested inside their parent conditionally executed subsystems.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportWarningMergedFromNestedCondSubsysSrc">In classic initialization mode, Outport blocks that are driven by nested conditionally executed subsystems may not update the merge signal even when their parent conditionally executed subsystems are executing. In simplified initialization mode, however, the following Outport blocks will always update the merge signal with the last output value of the driving, nested, conditionally executed subsystem when their parent conditionally executed subsystems are executing.</entry> 
    <entry key="MAOutportCondSubsysCheckRecActionOutportWarningMergedFromNestedCondSubsysSrc">Determine if the new behavior of the Outport blocks is acceptable. If it is not acceptable, modify the model to account for the new behavior before migrating to simplified initialization mode.</entry> 
    <entry key="MAMergeBlockCheckHeadingMergeWarningSignalObjectSpecifyingICParam">Check for Merge blocks that use signal objects to specify the ''Initial output'' value</entry>
    <entry key="MAMergeBlockCheckDescMergeWarningSignalObjectSpecifyingICParam">Warn about the new behavior of Merge blocks that use signal objects to specify the ''Initial output'' value.</entry>
    <entry key="MAMergeBlockCheckStatusMergeWarningSignalObjectSpecifyingICParam">The ''Initial output'' parameter of the following Merge blocks can no longer be specified by signal objects in simplified initialization mode. You can still use signal objects to initialize the output signal for these Merge blocks, but the initialization results may be overwritten by those of the Merge blocks.</entry>
    <entry key="MAMergeBlockCheckRecActionMergeWarningSignalObjectSpecifyingICParam">Determine if the new behavior is acceptable. If it is not acceptable, modify the model to account for the new behavior before migrating to simplified initialization mode.</entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportWarningUseICFromInputSignal">Check for Outport blocks that obtain the ''Initial output'' value from an input signal when they are migrated</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportWarningUseICFromInputSignal">Warn about the new behavior for Outport blocks that can obtain the ''Initial output'' value from an input signal.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportWarningUseICFromInputSignal">The ''Initial output'' parameter of the following Outport blocks is not specified (set to []). In simplified initialization mode, Simulink assumes that the ''Initial output'' value for each Outport block is derived from the input signal. As a result, the initialization behavior may be different from that of the classic initialization mode.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportWarningUseICFromInputSignal">Determine if the new behavior is acceptable. If it is not acceptable, modify the model to account for the new behavior before migrating to simplified initialization mode.</entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportWarningUseScalarZeroAsIC">Check for innermost Outport blocks with variable-size input and an unspecified ''Initial output''</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportWarningUseScalarZeroAsIC">Warn about the change in the ''Initial output'' setting for innermost Outport blocks that have variable-size input.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportWarningUseScalarZeroAsIC">Each of the following Outport blocks is the innermost Outport block and has variable-size input for which the signal size varies only when the parent subsystem is re-enabled. Consequently, Simulink implicitly assumes that the ''Initial output'' parameter is 0 even though the parameter is unspecified ([]). In simplified initialization mode, the parameter will be set explicitly to 0.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportWarningUseScalarZeroAsIC">Set the ''Initial output'' explicitly to a value other than [] or verify that the zero setting is acceptable before migrating to simplified initialization mode.</entry>
<entry key="MAOutportCondSubsysCheckHeadingOutportWarningConvertToEmptyHeldIC">Check for outer Outport blocks that have an explicit ''Initial output''</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportWarningConvertToEmptyHeldIC">Warn about the new setting for outer Outport blocks that have an explicit ''Initial output''.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportWarningConvertToEmptyHeldIC">In the classic initialization mode, each of the following Outport blocks has the same ''Initial output'' and ''Output when disabled'' parameters as those of the corresponding source Outport block. Consequently, the ''Initial output'' parameter will be set to ''[]'' and the ''Output when disabled'' parameter will be set to ''held'' in simplified initialization mode.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportWarningConvertToEmptyHeldIC">Ensure that the new setting is acceptable before migrating to simplified initialization mode.</entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportWarningUseICFromDialog">Check for outer Outport blocks that have an explicit ''Initial output''</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportWarningUseICFromDialog">Warn about the new setting for outer Outport blocks that have an explicit ''Initial output''.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportWarningUseICFromDialog">In the classic initialization mode, each of the following Outport blocks has the same ''Initial output'' and ''Output when disabled'' parameters as those of the corresponding source Outport block. Consequently, the ''Source of initial output value'' parameter will be set to ''Input signal'' in simplified initialization mode.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportWarningUseICFromDialog">Ensure that the new setting is acceptable before migrating to simplified initialization mode.</entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportDispositionUseICFromDialog">Check for a migration conflict for Outport blocks that will use a ''Dialog'' as the ''Source of initial output value''</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportDispositionUseICFromDialog">Verify that a uniform migration path exists for library-linked Outport blocks that use a ''Dialog'' as the ''Source of initial output value''.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportDispositionUseICFromDialog">Each of the following Outport blocks will use the ''Initial output'' value specified in the dialog in simplified initialization mode. Other instances of Outport blocks with the same library link either have errors or are being migrated differently.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportDispositionUseICFromDialog"><![CDATA[Review the results from sub-check <a href="#Simulink:tools:MAOutportCondSubsysCheckHeadingLibraryBlockErrorMigration">Check for library blocks with instances that cannot be migrated</a> to learn about different migration paths for other instances of each Outport block.]]></entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportDispositionUseICFromInputSignal">Check for a migration conflict for Outport blocks that will use an ''Input signal'' as the ''Source of initial output'' value</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportDispositionUseICFromInputSignal">Ensure a uniform migration path for library-linked Outport blocks that obtain the ''Initial output'' value from an input signal.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportDispositionUseICFromInputSignal">Because the parameter ''Initial output'' is currently set to [], the parameter ''Source of initial output value'' will be set to ''Input signal'' for each of the following Outport blocks in simplified initialization mode. Other instances of Outport blocks with the same library link either have errors or are being migrated differently.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportDispositionUseICFromInputSignal"><![CDATA[Review the results from sub-check <a href="#Simulink:tools:MAOutportCondSubsysCheckHeadingLibraryBlockErrorMigration">Check for library blocks with instances that cannot be migrated</a> to learn about different migration paths for other instances of each Outport block.]]></entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportDispositionUseDefaultIC">Check for a migration conflict for Outport blocks that will use a default ground value as the ''Initial output'' value.</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportDispositionUseDefaultIC">Ensure a uniform migration path for library-linked Outport blocks that use a default ground value as the ''Initial output'' value.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportDispositionUseDefaultIC">Because the parameter ''Initial output'' is currently set to [] and the source of the outport is an invalid initial condition source, the outport uses the default ground value as the initial output in simplified initialization mode. Other instances of Outport blocks with the same library link either have errors or are being migrated differently.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportDispositionUseDefaultIC"><![CDATA[Review the results from sub-check <a href="#Simulink:tools:MAOutportCondSubsysCheckHeadingLibraryBlockErrorMigration">Check for library blocks with instances that cannot be migrated</a> to learn about different migration paths for other instances of each Outport block.]]></entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportDispositionUseEmptyICForMerge">Check for a migration conflict for merged Outport blocks without explicit specification of ''Initial output''</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportDispositionUseEmptyICForMerge">Ensure a uniform migration path for library-linked Outport blocks that are merged without explicit specification of ''Initial output''.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportDispositionUseEmptyICForMerge">For each of the following Outport blocks, the ''Initial output'' and the ''Output when disabled'' parameters will respectively remain ''[]'' and ''held'' in simplified initialization mode because they are driving a Merge block. Other instances of Outport blocks with the same library link either have errors or are being migrated differently.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportDispositionUseEmptyICForMerge"><![CDATA[Review the results from sub-check <a href="#Simulink:tools:MAOutportCondSubsysCheckHeadingLibraryBlockErrorMigration">Check for library blocks with instances that cannot be migrated</a> to learn about different migration paths for other instances of each Outport block.]]></entry>
<entry key="MAOutportCondSubsysCheckHeadingOutportDispositionUseEmptyIC">Check for a migration conflict for Outport blocks without explicit specification of ''Initial output''</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportDispositionUseEmptyIC">Ensure a uniform migration path for library-linked Outport blocks that do not have an explicit specification of ''Initial output''.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportDispositionUseEmptyIC">For each of the following Outport blocks, the ''Initial output'' and the ''Output when disabled'' parameters will respectively remain ''[]'' and ''held'' in simplified initialization mode. Other instances of Outport blocks with the same library link either have errors or are being migrated differently.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportDispositionUseEmptyIC"><![CDATA[Review the results from sub-check <a href="#Simulink:tools:MAOutportCondSubsysCheckHeadingLibraryBlockErrorMigration">Check for library blocks with instances that cannot be migrated</a> to learn about different migration paths for other instances of each Outport block.]]></entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportDispositionUseScalarZeroAsIC">Check for a migration conflict for innermost Outport blocks with variable-size input and unspecified ''Initial output''</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportDispositionUseScalarZeroAsIC">Ensure a uniform migration path for library-linked innermost Outport blocks with variable-size input and unspecified ''Initial output''.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportDispositionUseScalarZeroAsIC">Each of the following Outport blocks is the innermost Outport block and has variable-size input, for which the signal size varies only when the parent subsystem is re-enabled. Consequently, Simulink implicitly assumes that the ''Initial output'' parameter is 0 even though the parameter is unspecified ([]). The parameter will be explicitly set to 0 in simplified initialization mode. Other instances of Outport blocks with the same library link either have errors or are being migrated differently.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportDispositionUseScalarZeroAsIC"><![CDATA[Review the results from sub-check <a href="#Simulink:tools:MAOutportCondSubsysCheckHeadingLibraryBlockErrorMigration">Check for library blocks with instances that cannot be migrated</a> to learn about different migration paths for other instances of each Outport block.]]></entry>
    <entry key="MAOutportCondSubsysCheckHeadingOutportDispositionUseEmptyICForSimEvents">Check for a migration conflict for Outport blocks that have SimEvents semantics</entry>
    <entry key="MAOutportCondSubsysCheckDescOutportDispositionUseEmptyICForSimEvents">Ensure a uniform migration path for library-linked Outport blocks that use the initialization semantics of SimEvents.</entry>
    <entry key="MAOutportCondSubsysCheckStatusOutportDispositionUseEmptyICForSimEvents">For each of the following Outport blocks, the ''Initial output'' and the ''Output when disabled'' parameters will respectively remain ''[]'' and ''held'' in simplified initialization, because their parent conditionally executed subsystems are connected to SimEvents blocks. Other instances of Outport blocks with the same library link either have errors or are being migrated differently.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionOutportDispositionUseEmptyICForSimEvents"><![CDATA[Review the results from sub-check <a href="#Simulink:tools:MAOutportCondSubsysCheckHeadingLibraryBlockErrorMigration">Check for library blocks with instances that cannot be migrated</a> to learn about different migration paths for other instances of each Outport block.]]></entry>
    <entry key="MAOutportCondSubsysCheckHeadingSubSystemWarningCondSubsysMovingBlocksIntoContextFromOutputSide">Check for conditionally executed subsystems that propagate the execution context across the output boundary</entry>
    <entry key="MAOutportCondSubsysCheckDescSubSystemWarningCondSubsysMovingBlocksIntoContextFromOutputSide">Warn about the new behavior of subsystems with respect to the propagation of the execution context.</entry>
    <entry key="MAOutportCondSubsysCheckStatusSubSystemWarningCondSubsysMovingBlocksIntoContextFromOutputSide">The option ''Propagate execution context across subsystem boundary'' has been selected for the following subsystems. However, for simplified initialization mode, the propagation of the subsystems'' execution context will be disabled on the output side to ensure correct initialization.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionSubSystemWarningCondSubsysMovingBlocksIntoContextFromOutputSide">Ensure that the new subsystem behavior is acceptable before you migrate to simplified initialization mode.</entry>
    <entry key="MAOutportCondSubsysCheckPropCECAcrossSSBoundary">Propagate execution context across subsystem boundary</entry>
    <entry key="MADiscreteIntegratorCheckHeadingOverall">Check usage of Discrete-Time Integrator blocks</entry>
    <entry key="MADiscreteIntegratorCheckDescOverall">This check finds and reports issues related to Discrete-Time Integrator blocks for migrating to simplified initialization mode</entry>
    <entry key="MADiscreteIntegratorCheckStatusOverall">This model is not using simplified initialization mode.</entry>
    <entry key="MADiscreteIntegratorCheckRecActionOverallHasError">Modify the model to address all of the failed subchecks below, and then rerun this check.</entry>
    <entry key="MADiscreteIntegratorCheckRecActionOverallNoErrorButHasWarning">Review the warnings reported in the subchecks below and address any that require attention.</entry>
    <entry key="MADiscreteIntegratorCheckRecActionOverallNoErrorNoWarning">No issues related to Discrete-Time Integrator blocks were found.This model can be migrated to simplified initialization mode using configuration parameters.</entry>
    <entry key="MADiscreteIntegratorCheckHeadingDiscreteIntegratorWarningInitBehaviorChange">Check for Discrete-Time Integrator blocks</entry>
    <entry key="MADiscreteIntegratorCheckDescDiscreteIntegratorWarningInitBehaviorChange">Locate Discrete-Time Integrator blocks and warn about changes in simplified initialization mode.</entry>
    <entry key="MADiscreteIntegratorCheckStatusDiscreteIntegratorWarningInitBehaviorChange">The following blocks may produce different results in simplified initialization mode.</entry>
    <entry key="MADiscreteIntegratorCheckRecActionDiscreteIntegratorWarningInitBehaviorChange">See the documentation for more information about the new initialization behavior of the Discrete-Time Integrator in simplified initialization mode.</entry>
    <entry key="MADiscreteIntegratorCheckHeadingDiscreteIntegratorWarningOutputICMode">Check for Discrete-Time Integrator blocks whose parameter 'Initial condition setting' is set to 'Output'</entry>
    <entry key="MADiscreteIntegratorCheckDescDiscreteIntegratorWarningOutputICMode">Locate Discrete-Time Integrator blocks and warn about changes in simplified initialization mode.</entry>
    <entry key="MADiscreteIntegratorCheckStatusDiscreteIntegratorWarningOutputICMode">The following blocks may produce different results in simplified initialization mode.</entry>
    <entry key="MADiscreteIntegratorCheckRecActionDiscreteIntegratorWarningOutputICMode">See the documentation for more information about the new initialization behavior of the Discrete-Time Integrator in simplified initialization mode.</entry>
    <entry key="MADiscreteIntegratorCheckHeadingDiscreteIntegratorWarningTrigSubsysStateOnlyICMode">Check for Discrete-Time Integrator blocks whose ''Initial condition setting'' parameter is set to 'State (most efficient)' and are in a subsystem that uses triggered sample time</entry>
    <entry key="MADiscreteIntegratorCheckDescDiscreteIntegratorWarningTrigSubsysStateOnlyICMode">Warn about changes in initialization behavior with Discrete-Time Integrator blocks placed inside subsystems that use triggered sample time and whose ''Initial condition setting'' parameter is set to 'State (most efficient)'</entry>
    <entry key="MADiscreteIntegratorCheckStatusDiscreteIntegratorWarningTrigSubsysStateOnlyICMode">For each of the following Discrete-Time Integrator blocks, the parameter ''Initial condition setting'' will be set to 'Output' on migration to simplified initialization mode. This is because the option 'State (most efficient)' is not supported for simplified initialization mode. As a result, these blocks may produce different results in simplified initialization mode.</entry>
    <entry key="MADiscreteIntegratorCheckRecActionDiscreteIntegratorWarningTrigSubsysStateOnlyICMode">See the documentation for more information about the new initialization behavior of the Discrete-Time Integrator in simplified initialization mode.</entry>
   <entry key="MADiscreteIntegratorCheckHeadingDiscreteIntegratorDispositionUseOutputICModeTrigSubsys">Check for a migration conflict for Discrete-Time Integrator blocks whose parameter ''Initial condition setting'' will be set to 'Output'</entry>
    <entry key="MADiscreteIntegratorCheckDescDiscreteIntegratorDispositionUseOutputICModeTrigSubsys">Ensure a uniform migration path for library-linked Discrete-Time Integrator blocks that are using 'State (most efficient)' option for the ''Initial condition setting'' parameter</entry>
    <entry key="MADiscreteIntegratorCheckStatusDiscreteIntegratorDispositionUseOutputICModeTrigSubsys">For each of the following Discrete-Time Integrator blocks, the ''Initial condition setting'' parameter will be set to  ''Output'' in simplified initialization mode. Other instances of Discrete-Time Integrator blocks with the same library link either have errors or are being migrated differently.</entry>
    <entry key="MADiscreteIntegratorCheckRecActionDiscreteIntegratorDispositionUseOutputICModeTrigSubsys"><![CDATA[Review the results from sub-check <a href="#Simulink:tools:MAOutportCondSubsysCheckHeadingLibraryBlockErrorMigration">Check for library blocks with instances that cannot be migrated</a> to learn about different migration paths for other instances of each Discrete-Time Integrator block.]]></entry>
   <entry key="MADiscreteIntegratorCheckHeadingDiscreteIntegratorDispositionUseStateICMode">Check for a migration conflict for Discrete-Time Integrator blocks whose parameter ''Initial condition setting'' will be set to 'State (most efficient)'</entry>
    <entry key="MADiscreteIntegratorCheckDescDiscreteIntegratorDispositionUseStateICMode">Ensure a uniform migration path for library-linked Discrete-Time Integrator blocks that are using 'State (most efficient)' option for the ''Initial condition setting'' parameter</entry>
    <entry key="MADiscreteIntegratorCheckStatusDiscreteIntegratorDispositionUseStateICMode">For each of the following Discrete-Time Integrator blocks, the parameter ''Initial condition setting'' will remain  ''State (most efficient)'' in simplified initialization mode. Other instances of Discrete-Time Integrator blocks with the same library link either have errors or are being migrated differently.</entry>
    <entry key="MADiscreteIntegratorCheckRecActionDiscreteIntegratorDispositionUseStateICMode"><![CDATA[Review the results from sub-check <a href="#Simulink:tools:MAOutportCondSubsysCheckHeadingLibraryBlockErrorMigration">Check for library blocks with instances that cannot be migrated</a> to learn about different migration paths for other instances of each Discrete-Time Integrator block.]]></entry>
    <entry key="MADiscreteIntegratorCheckDiscreteIntegrator">Discrete-Time Integrator</entry>
    <entry key="MADiscreteIntegratorCheckLibraryBlock">Library Block</entry>
    <entry key="MAOutportCondSubsysCheckHeadingAnyBlockWarningCannotReadInputFromNonVirtualSubsysInStart">Check for blocks that read input from nonvirtual subsystems during initialization</entry>
    <entry key="MAOutportCondSubsysCheckDescAnyBlockWarningCannotReadInputFromNonVirtualSubsysInStart">Warn about the new behavior of blocks that read input from nonvirtual subsystems during initialization.</entry>
    <entry key="MAOutportCondSubsysCheckStatusAnyBlockWarningCannotReadInputFromNonVirtualSubsysInStart">The following blocks currently read their inputs from nonvirtual subsystems during initialization as a form of optimization. This optimization can lead to incorrect simulation results, and therefore will be turned off in simplified initialization mode.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionAnyBlockWarningCannotReadInputFromNonVirtualSubsysInStart">Ensure that the new behavior is acceptable before you migrate to simplified initialization mode.</entry>
    <entry key="MADiscreteIntegratorCheckHeadingAnyBlockErrorUseElapsedTimeInIterSubsys">Check for blocks inside of the Iterator Subsystem that require elapsed time</entry>
    <entry key="MADiscreteIntegratorCheckDescAnyBlockErrorUseElapsedTimeInIterSubsys">Ensure that any blocks requiring elapsed time are not used inside of an Iterator Subsystem.</entry>
    <entry key="MADiscreteIntegratorCheckStatusAnyBlockErrorUseElapsedTimeInIterSubsys">The following blocks are not allowed inside of an Iterator Subsystem hierarchy in simplified initialization mode because they require a service that maintains the time that has elapsed between two consecutive executions.</entry>
    <entry key="MADiscreteIntegratorCheckRecActionAnyBlockErrorUseElapsedTimeInIterSubsys">To avoid unexpected behavior, do not use such blocks inside of an Iterator Subsystem.</entry>
    <entry key="MAOutportCondSubsysCheckHeadingLibraryBlockErrorMigration">Check for library blocks with instances that cannot be migrated</entry>
    <entry key="MAOutportCondSubsysCheckDescLibraryBlockErrorMigration">Ensure that you can safely migrate all instances of library-linked blocks in the model to simplified initialization mode.</entry>
    <entry key="MAOutportCondSubsysCheckStatusLibraryBlockErrorMigration">The following library blocks have at least one instance that you cannot migrate to simplified initialization mode or at least two instances with different migration paths.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionLibraryBlockErrorMigration">For each of these blocks, examine the sub-check results for their instances to determine a proper corrective action.</entry>
    <entry key="MAOutportCondSubsysCheckHeadingLibraryBlockWarningMigration">Check for library blocks with instances that have warnings</entry>
    <entry key="MAOutportCondSubsysCheckDescLibraryBlockWarningMigration">Identify library blocks that have instances with warnings.</entry>
    <entry key="MAOutportCondSubsysCheckStatusLibraryBlockWarningMigration">Each of the following library blocks has at least one instance with a sub-check warning.</entry>
    <entry key="MAOutportCondSubsysCheckRecActionLibraryBlockWarningMigration">Determine if all warnings are acceptable. If any warning is unacceptable, modify the model in accordance with the warning before migrating to simplified initialization mode.</entry>
    <entry key="MAOutportCondSubsysCheckActionButtonName">Modify Settings</entry>
    <entry key="MAOutportCondSubsysCheckActionDescription">Migrate all Outport and Conditional Subsystems block settings for compatibility with simplified initialization mode.</entry>
    <entry key="MADiscreteIntegratorCheckActionButtonName">Modify Settings</entry>
    <entry key="MADiscreteIntegratorCheckActionDescription">Modify Discrete-Time Integrator block settings for compatibility with simplified initialization mode.</entry>
    <entry key="MASimplifiedModeCheckActionButtonName">Modify Settings</entry>
    <entry key="MASimplifiedModeCheckActionDescription">Migrate all model settings to simplified initialization mode. As a result, on the All Parameters tab of the Configuration Parameters dialog, the ''Underspecified initialization detection'' option is set to ''Simplified''. Before proceeding, ensure that the model and all relevant library files are writable and have no unsaved changes.</entry>
    <!-- Replace ZOHDelay By RTB - start =========================================================== -->
    <entry key="MATitleReplaceZOHDelayByRTB">Check Delay, Unit Delay and Zero-Order Hold blocks for rate transition</entry>
    <entry key="MATitletipReplaceZOHDelayByRTB">Identify Delay, Unit Delay and Zero-Order Hold blocks in the model that perform rate transition. Replace them with Rate Transition blocks.</entry>
    <entry key="MAMsgReplaceZOHDelayByRTBWarn"><![CDATA[<p /> The following Delay, Unit Delay and/or Zero-Order Hold blocks act as rate transition between input and output signals. They have been replaced with hidden Rate Transition blocks. ]]></entry>
    <entry key="MAMsgReplaceZOHDelayByRTBSuggest"><![CDATA[<p /> For robust performance, replace these blocks with actual Rate Transition blocks. Click Upgrade Model and save your model. ]]></entry>
    <entry key="MANonReplaceZOHDelayByRTBPass"><![CDATA[ The model does not contain Delay, Unit Delay or Zero-Order Hold blocks that perform rate transition. <font color="#008000"> Passed </font>]]></entry>
    <entry key="MAReplaceZOHDelayByRTBActionButtonName">Upgrade model</entry>
    <entry key="MAReplaceZOHDelayByRTBActionDescription">Click here to replace these Delay, Unit Delay and Zero-Order Hold blocks with Rate Transition blocks. This action recompiles your model. Following compilation, save the model to make the changes permanent.</entry>
    <entry key="MAReplaceZOHDelayByRTBActionResults">The following blocks were replaced with Rate Transition blocks. Save the model to keep these changes.</entry>
    <entry key="MAReplaceZOHDelayByRTBUnexpectedError">An unexpected error occurred during the replacement of block: {0}</entry>
    <!-- Replace ZOHDelay By RTB - end =========================================================== -->
    <entry key="OutportMigrateTitle">Outport Settings Migration</entry>
    <entry key="OutportMigrateConfirmQuestion">Because it is difficult to undo these changes, save a backup copy of your model and libraries before proceeding. Migrate the model ''{0}'' to simplified initialization mode?</entry>
    <entry key="OutportMigrateUnexpectedError">An unexpected error occurred during migration of the model: {0}</entry>
    <entry key="OutportMigrateRunning">The Model Advisor is migrating the settings for the blocks within the model ''{0}'' to be compatible with the simplified initialization mode.</entry>
    <entry key="SimplifiedModeMigrateRunning">The Model Advisor is migrating the settings for the blocks within the model ''{0}'' to be compatible with the simplified initialization mode.</entry>
    <entry key="OutportMigrateCompleted">Migration of the blocks is complete.</entry>
    <entry key="SimplifiedModeMigrateCompleted">Migration of the blocks is complete.</entry>
    <entry key="OutportMigrateCancelled">Migration of the model to simplified initialization  was cancelled by the user or failed.</entry>
    <entry key="OutportMigrateNotNeeded">Migration of the blocks is not necessary since the model ''{0}'' has already been migrated.</entry>
    <entry key="MADataStoreCheckActionButtonName">Proceed</entry>
    <entry key="MADataStoreCheckActionDescription">Check whether data store memories conform to recommended best practices. Make sure any warnings reported above are understood or addressed before proceeding.</entry>
    <entry key="slDebuguiRequiresJava">The Simulink debugger requires Java support</entry>
    <entry key="viewLinkDataRequiresJava">The link data dialog requires java support. Please use set_param/get_param of ''LinkData'' property instead.</entry>
    <entry key="slDebuguiInUse">The Simulink Debugger is being used for : ''{0}''.\nTo debug ''{1}'', exit current debugger.</entry>
    <entry key="slDebugCurrentBlockIsEmpty">There is no block selected in the model ''{0}''.</entry>
    <entry key="slDebugCurrentBlockNotInModel">Can not set break point on block ''{0}'' because it is not in the model ''{1}'' being debugged.</entry>
    <entry key="slDebugBreakpointSetOnVirtualBlock">The selected block ''{0}'' is a virtual block.  To set a breakpoint, you must select a nonvirtual block.  For a list of the nonvirtual blocks in the model ''{1}'', see the debugger''s Sorted List pane or the output of the SLIST command.</entry>
    <entry key="NoSLDebugWithTLCDebug">The Simulink Debugger has been disabled while the TLC debugger is running</entry>
    <entry key="NoTLCDebugWithSLDebug">The TLC Debugger has been disabled while the Simulink debugger is open</entry>
    <entry key="LUTEditorNoUndefinedExpressions">Error evaluating parameter ''{0}'' in block ''{1}''.\n If this parameter specifies a variable name, make sure that you define the variable in a workspace.\n Otherwise, make sure that this parameter specifies data that is dimensioned consistently with its corresponding breakpoint vectors.</entry>
    <entry key="PosRealCheck">The linearization of hybrid systems with poles which are either positive real or near z = 0 are not supported with dlinmod.  This is supported with the command linearize in Simulink Control Design.</entry>
    <entry key="ImplicitSignalResolutionAlreadyDisabled">Implicit signal object resolution is already disabled for model ''{0}''.</entry>
    <entry key="TurnOnResolutionForSignals">The following signal labels will be forced to resolve to signal objects:</entry>
    <entry key="TurnOnResolutionForStates">The following states will be forced to resolve to signal objects:</entry>
    <entry key="CannotDisableImplicitSignalResolution">Cannot change SignalResolutionControl to ''UseLocalSettings'' because this model is using a configuration reference.  To disable implicit signal object resolution, manually modify this parameter on the source configuration set ''{0}''.</entry>
    <entry key="RenameStateflowOutputSignal">Changing signal label from ''{0}'' to ''{1}'' for output of Stateflow chart ''{2}''.</entry>
    <entry key="ExpectedOneStateflowOutputWithSignalName">Expected to find one outport block with same name as signal.</entry>
    <entry key="dlinmodUseZeroTs">Forcing sample time to zero in LINMOD mode.</entry>
    <entry key="dlinmodReturningTransferFunction">Returning transfer function model</entry>
    <entry key="dlinmodUnrecognizedOption">Unrecognized option.  HELP DLINMOD for more details.</entry>
    <entry key="dlinmodNoV5Sparse">Sparse matrices are not supported with ''v5'' option.</entry>
    <entry key="dlinmodNoV5AnalysisPorts">Analysis ports are not supported with ''v5'' option.</entry>
    <entry key="dlinmodMultiTaskingSolver">The model must be using a single-tasking fixed step or a variable step solver when linearizing a model.</entry>
    <entry key="dlinmodWrongInputVectorSize">Expecting an input vector of length {0,number,integer}</entry>
    <entry key="dlinmodExtraStatesZero">Extra states are being set to zero.</entry>
    <entry key="dlinmodIgnoreDiscreteStates">Ignoring discrete states (use DLINMOD for proper handling)</entry>
    <entry key="dlinmodNoSampleTimeFoundUseFixedStepSize">No sample time found in the model. Defaulting to fixed step size.</entry>
    <entry key="dlinmodNoSampleTimeFound">No sample time found in the model.  Defaulting to 1.</entry>
    <entry key="dlinmodv5RequireStateStruct">Models with model reference blocks must use the state structure to initialize a linearization.</entry>
    <entry key="dlinmodv5StateStructXPert">When using the structure format for the model states the variable XPERT must be specified as a structure.</entry>
    <entry key="linmodNotSupportedMultipleModelReference">The model {0} is being used as a normal mode model reference and an accelerated model reference.  This is not currently supported by the linear analysis tools.  Please only use a single instance of a normal mode reference.</entry>
    <entry key="trimModelMustHaveOneState">System must have at least one state in order to be trimmed.</entry>
    <entry key="trimNotSupportedModelReference">Models with model blocks are not supported with the command trim.</entry>
    <entry key="trimSupportContinuousDerivatives">In the command [X,U,Y,DX]=TRIM(''SYS'',X0,U0,Y0,IX,IU,IY,DX0,IDX) the length of DX0 should be equal to the number of continuous states in the Simulink model.</entry>
    <entry key="slbusInvalidNumInputs">Invalid number of inputs.</entry>
    <entry key="slbusInvalidScope">Invalid scope argument. Valid values for
    scope are a Simulink.data.BaseWorkspace or Simulink.data.DataDictionary
    object.</entry>
    <entry key="slbusObjectToCellInvalidInput">The input must be a cell array containing bus names.</entry>
    <entry key="slbusNotPreserveAdditionalProps">Additional properties are not preserved for subclass of ''{0}''.</entry>
    <entry key="slbusSaveInvalidFirstArg" note="stringDatatypeUpdate">Invalid input arguments. The first and second input arguments must be character vectors.</entry>
    <entry key="slbusSaveInvalidExt">Invalid file name. File name must have ''.m'' extension or no extension.</entry>
    <entry key="slbusSaveFileAlreadyExists">File ''{0}'' exists. Please either specify a new file name or delete file ''{1}'' and rerun the command.</entry>
    <entry key="slbusSaveDirDoesNotExist">The specified directory does not exist.</entry>
    <entry key="slbusSaveInvalidSecondArg">The second input must be either ''cell'' or ''object''.</entry>
    <entry key="slbusSaveInvalidThirdArg">The third input must be a cell containing bus names.</entry>
    <entry key="slbusSaveFileOpenError">Could not open file ''{0}'' for saving bus objects. The actual error is: ''{1}''.</entry>
    <entry key="slbusRegisterBusError">Could not register a bus in ''{0}''. The actual error is: ''{1}''.</entry>
    <entry key="slbusRegisterBusInvalidInputParameters">Function Simulink.Bus.register registers a bus object in data type table from a MATLAB structure. It requires three inputs: (1) a model name, (2) a full path of a block that registers this bus, and (3) a numerical MATLAB structure. The name for the bus data type to be registered is the fourth optional input argument.</entry>
    <entry key="slbusCreateObjectInvalidModelName">Invalid model name.</entry>
    <entry key="slbusCreateObjectBadSimulationStatus">Simulation status of model ''{0}'' is ''{1}''. This indicates that the model is being run. \n Please stop the simulation, and rerun Simulink.Bus.createObject.</entry>
    <entry key="slbusCreateObjectGeneric">Simulink.Bus.createObject reported the following error when processing the field ''{0}'' in the input structure: \n''{1}''</entry>
    <entry key="slbusCreateObjectNonNumericStructField">Structure field ''{0}'' does not have a numeric, logical, or MATLAB timeseries value.</entry>
    <entry key="slbusCreateObjectOrderMismatch">The number of fields or their ordering is inconsistent at the following locations in the input structure: ''{0}'' and ''{1}''. Simulink.Bus.createObject requires all elements of a substructure array to be consistent with each other.</entry>
    <entry key="slbusCreateObjectStructNonStructMismatch">''{0}'' is a structure field, while ''{1}'' is not. Simulink.Bus.createObject requires all elements of a substructure array to be consistent with each other.</entry>
    <entry key="slbusCreateObjectDimsMismatch">The dimension of the fields is inconsistent at the following locations in the input structure: ''{0}'' and ''{1}''. Simulink.Bus.createObject requires all elements of a substructure array to be consistent with each other.</entry>
    <entry key="slbusCreateObjectDataTypeMismatch">The data type of the fields is inconsistent at the following locations in the input structure: ''{0}'' and ''{1}''. Simulink.Bus.createObject requires all elements of a substructure array to be consistent with each other.</entry>
    <entry key="slbusCreateObjectComplexityMismatch">The complexity of the fields is inconsistent at the following locations in the input structure: ''{0}'' and ''{1}''. Simulink.Bus.createObject requires all elements of a substructure array to be consistent with each other.</entry>
    <entry key="slcreateMATLABStructInvalidFirstArgument">The first input must be either a valid bus object or one or more (i.e. array) valid handles to block ports</entry>
    <entry key="slcreateMATLABStructInvalidDimension">If the first argument is the name of a bus object, you can provide a valid dimension D=[d_1, ..., d_n] as the third input parameter. The value of the dimension determines the dimension of the resulting structure. If you use a partial structure in the second input parameter, the dimension P=[p_1, ..., p_m] of the partial structure must be compatible to D (i.e, m &lt;= n and p_i &lt;= d_i for 1&lt;=i&lt;=m). If the first argument is a cell array of bus object names, you can also provide a cell array of valid dimensions. If the first argument is not the name of a bus object, you can not provide a dimension.</entry>
    <entry key="slcreateMATLABStructInvalidPartialStruct">If the first argument is the name of a bus object or a valid handle to a block port, the second input must be either a MATLAB structure or empty ([]). The values specified in the fields of this structure populate the corresponding fields in the resulting full MATLAB structure(s). If the first argument is an array of handles of block ports or a cell array of bus object names, the second must be a cell array of MATLAB structures.</entry>
    <entry key="slcreateMATLABStructInvalidNumSecondArguments">The number of port handles must be the same as the number of partial structures specified.</entry>
    <entry key="slcreateMATLABStructStrictBusRequired">This utility function requires that the ''Mux blocks used to create bus signals'' diagnostic in the Connectivity panel of the Configuration Parameters dialog be set to ''error''</entry>
    <entry key="slcreateMATLABStructBadFieldInPartialStructure">The partial structure has an inconsistent shape and differs from the generated structure at ''{0}''</entry>
    <entry key="slcreateMATLABStructInconsistentDimensionInPartialStructure">The partial structure has an inconsistent dimension with the dimension of bus object node at ''{0}''.</entry>
    <entry key="slcreateMATLABStructBadFieldAttributeDimensions">The value provided for the partial structure at ''{0}'' has dimensions ''{1}'', while the corresponding value in the generated structure has dimensions ''{2}''</entry>
    <entry key="slcreateMATLABStructBadFieldAttributeDataType">The value provided for the partial structure at ''{0}'' has a data type of ''{1}'', while the corresponding value in the generated structure has a data type of ''{2}''</entry>
    <entry key="slcreateMATLABStructBadFieldAttributeComplexity">The value provided for the partial structure at ''{0}'' is ''{1}'', while the corresponding value in the generated structure is ''{2}''</entry>
    <entry key="slcreateMATLABStructFromBusObject">Simulink.Bus.createMATLABStruct uses a temporary model ''TmpModelForCreatingMATLABStruct'' to create a MATLAB struct. An error occurred while creating the struct. Please see the following causes:</entry>
    <entry key="MATitletipCheckForProperFcnCallRetVals">Identify function-call block return values which may potentially be delayed due to the insertion of implicit Signal Conversion blocks by Simulink</entry>
    <entry key="MATitleCheckForProperFcnCallRetVals">Check for potentially delayed function-call block return values</entry>
    <entry key="MABlkPortPairListItem">Input ports ({0}) of block:</entry>
    <entry key="MAMsgHiddenBufCausingLoop">Simulink has inserted an implicit Signal Conversion block in front of the following function-call initiator blocks'' input ports to ensure that the corresponding signals are contiguous in memory. This may cause a one step delay for the function-call initiator blocks which may be observing these signals as return-values from the function-call subsystem(s) they are calling. To avoid the delay please ensure that the signal at the listed input ports originates from a signal block within the function-call subsystem(s) being called. If the delay is acceptable, please insert a Unit Delay block in front of the affected input ports.</entry>
    <entry key="MATitleIdentSigsWithContTsAndNonFloatDataType">Identify block output signals with continuous sample time and non-floating point data type</entry>
    <entry key="MAUnableToRunCheckForProperBusOnSubsystem">The ''Bus Usage'' check works only from top-level models. Run the Advisor from the top-level model to perform this check.</entry>
    <entry key="MATitleCheckDisabledLinks">Identify disabled library links</entry>
    <entry key="MATitletipCheckDisabledLinks">Searches the model for disabled library links. Unintentionally disabled library links can cause unexpected simulation results, and in general a model should not be saved with library links disabled.  Note that the results of this check may overlap with those of the check for known upgrade issues.</entry>
    <entry key="MAResultCheckDisabledLinks">The blocks listed below are disabled library links. To resolve the link, right-click the block in the Simulink diagram, and choose ''{0}'' from the ''{1}'' menu.</entry>
    <entry key="MATitleCheckParameterizedLinks">Identify parameterized library links</entry>
    <entry key="MATitletipCheckParameterizedLinks">Searches the model for parameterized library links. Unintentionally parameterized library links can cause unexpected simulation results.</entry>
    <entry key="MAResultCheckParameterizedLinks">The following blocks are parameterized library links. Changes can be propagated to the library or discarded by right-clicking on the block in the Simulink diagram and choosing the appropriate item from the "Library Link" menu.</entry>
    <entry key="MAResultWeaklyTypedDataStores">The following blocks are Data Store Memory blocks that inherit their data type or signal type.  You can avoid unexpected data type or signal type propagation when you strongly type your data store memories.  Data store memories may be strongly typed via their block dialog, or via resolution to strongly typed Simulink.Signal objects.</entry>
    <entry key="MATitleCheckUnresolvedLinks">Identify unresolved library links</entry>
    <entry key="MATitletipCheckUnresolvedLinks">Searches the model for unresolved library links: those for which the library block cannot be found.  A model cannot be simulated while it has unresolved links.</entry>
    <entry key="MAResultCheckUnresolvedLinks">The following blocks are unresolved library links. In each case, either the library cannot be found, or the library doesn''t contain a block of the specified name.</entry>
    <entry key="MALibLinksTaskTitle">Managing Library Links And Variants</entry>
    <entry key="MALibLinksTaskTitleTips">Checks for identifying common problems with library links, variants.</entry>
    <entry key="MATitleCheckVariantOverride">Identify variant blocks that override variant choice</entry>
    <entry key="MATitletipCheckVariantOverride">Identify variant blocks that specify variant choice using the override option instead of using the active variant control.</entry>
    <entry key="MAResultCheckVariantOverride"> The following blocks specify variant choice using the OverrideUsingVariant parameter.</entry>
    <entry key="MASubResultStatusVariantOverride">Use variant control to determine the active variant.</entry>
    <entry key="MAVariantOverrideCheckPassed">No variant blocks found which override their choice.</entry>
    <entry key="VariantBlocks">Blocks</entry>
    <entry key="CurrentOverrideSetting">override value</entry>
    <entry key="MATitleIdentConfigSubsys">Identify configurable subsystem blocks for converting to variant subsystem blocks</entry>
    <entry key="MATitletipIdentConfigSubsys">Identify configurable subsystem blocks at the model or subsystem level. You can convert these blocks to variant subsystems.</entry>
    <entry key="MAResultCheckForCSSBlocks">These blocks can be upgraded to variant subsystems as they have better programmatic control and code generation capabilities.</entry>
    <entry key="MASubResultStatusForCSSBlocks"><![CDATA[Select the block and right-click to choose 'Subsystem & Model Reference > Convert Subsystem to > Variant Subsystem' option.]]></entry>
    <entry key="MACheckForCSSPassed">No configurable subsystem blocks found.</entry>
    <entry key="ParserConfigUnknownLang">Unrecognized language ''{0}''.</entry>
    <entry key="LCTErrorInvalidAction">Invalid action ''{0}''</entry>
    <entry key="LCTErrorFirstFcnArgumentMustBeStruct">First argument must be a structure (or an array of structures) initialized with legacy_code(''initialize'')</entry>
    <entry key="LCTErrorSecondFcnArgumentMustBeStruct">Second argument must be a structure (or an array of structures) initialized with legacy_code(''initialize'')</entry>
    <entry key="LCTErrorFirstFcnArgumentMustBeScalarStruct">First argument must be a 1x1 structure initialized with legacy_code(''initialize'')</entry>
    <entry key="LCTErrorCannotOpenFile">Cannot open the file "{0}.{1}" {2}</entry>
    <entry key="LCTErrorCannotFindIncludePath">Cannot find the include path "{0}"</entry>
    <entry key="LCTErrorCannotFindSourcePath">Cannot find the source path "{0}"</entry>
    <entry key="LCTErrorCannotFindLibraryPath">Cannot find the library path "{0}"</entry>
    <entry key="LCTErrorCannotFindSourceFile">Cannot find the source file "{0}"</entry>
    <entry key="LCTErrorCannotFindLibraryFile">Cannot find the library file "{0}"</entry>
    <entry key="LCTErrorBadSimulinkVersion">The Simulink version "{0}" is not supported</entry>
    <entry key="LCTWarnFileConflict">The file "{0}" already exists and isn''t a CMEX file. This file must be moved in another directory, or renamed, or the SFunctionName must be different</entry>
    <entry key="LCTErrorBadArgumentOptionForCompilation" note="stringDatatypeUpdate">The second argument OPT must be a character vector or a cell array of character vectors</entry>
    <entry key="LCTErrorMexNotConfigured">A C compiler needs to be set up before calling legacy_code() with the ''compile'' option. Enter mex(''-setup'') in the MATLAB Command Window</entry>
    <entry key="LCTMsgStartCompiling">Start Compiling {0}</entry>
    <entry key="LCTMsgFinishCompiling">Finish Compiling {0}</entry>
    <entry key="LCTMsgEndCompiling">Exit</entry>
    <entry key="LCTBlkMaskDescription">This block allows you to call the legacy functions specified by the following Legacy Code Tool definition:\n{0}</entry>
    <entry key="LCTBlkMaskHelp">This block was generated automatically by the Legacy Code Tool. For detailed help on this tool, call</entry>
    <entry key="LCTBlkMaskSampleTimeParam">Sample time (-1 for inherited)</entry>
    <entry key="LCTBlkMaskShowFcnSpecParam">Display function specification</entry>
    <entry key="LCTErrorRethrowErrorWithSpec">{1}:\n{0}</entry>
    <entry key="LCTErrorSLObjectNotFound">The data type "{0}" is neither a built-in data type, nor defined by a Simulink.AliasType, Simulink.NumericType, Simulink.Bus object, or an enumerated data type</entry>
    <entry key="LCTErrorSLObjectHeaderFile">The Simulink data object "{0}" (of class {1}) must provide a header file</entry>
    <entry key="LCTErrorEnumTypeMustSpecifyHeaderFile">The enumerated data type "{0}" must provide a header file</entry>
    <entry key="LCTErrorAddClassNameToEnumNamesNotSupported">The enumerated data type "{0}" cannot be configured for adding the class''s name to the enumerated values</entry>
    <entry key="LCTErrorBusElementEmpty">The Bus/StructType object "{0}" must contain 1 Bus/StructType element at least</entry>
    <entry key="LCTErrorBusElementBoolComplex">The Bus/StructType Element "{0}" (of Bus/StructType Object "{1}") can be only a native complex data type. Boolean complex data type is not supported</entry>
    <entry key="LCTErrorBusElementNonScalar">The Bus Element "{0}" (of Bus Object "{1}") must be scalar</entry>
    <entry key="LCTErrorUnspecifiedScaling">Simulink.NumericType with unspecified scaling is not supported ("{0}")</entry>
    <entry key="LCTErrorBadDimToTest">Bad dimensions to test</entry>
    <entry key="LCTErrorParseBadAssignement">Bad assignment in function specification "{0}". The return from the function must be only assigned to an output port value</entry>
    <entry key="LCTErrorParseUnrecognizedToken">Token (or expression) "{0}" not recognized (in "{1}")</entry>
    <entry key="LCTErrorParseMissingDataType">The data type (in expression "{0}") must be specified or is not valid (in "{1}")</entry>
    <entry key="LCTErrorParseBadDataId"><![CDATA[An input/output/parameter/work number must be specified and > 0 (in expression "{0}" from "{1}")]]></entry>
    <entry key="LCTErrorParseBadOutputOrDWorkDim">An output or a work dimension must be fully specified (in expression "{0}" from "{1}")</entry>
    <entry key="LCTErrorParseBadOutputOrDWorkDimForDynSize">An output or work dimension cannot be used for specifying a dynamically sized input/output/parameter/work  (in expression "{0}" from "{1}")</entry>
    <entry key="LCTErrorParseBadParameterDim">A parameter dimension cannot be specified by another parameter or input dimension  (in expression "{0}" from "{1}")</entry>
    <entry key="LCTErrorParseBadInputDim">An input dimension cannot be specified by another input dimension  (in expression "{0}" from "{1}")</entry>
    <entry key="LCTErrorParseDifferentDataSpec">The dimension and data type specifications must be the same across all function specifications</entry>
    <entry key="LCTErrorParseDuplicatedArgName">Function argument names must be unique</entry>
    <entry key="LCTErrorParseBadComplexSizeArg">The return value from the function size() cannot be complex</entry>
    <entry key="LCTErrorParseBadTrailingDim"><![CDATA[For N-Dimensional input/output/parameter/work, the trailing dimension must be > 1 (in expression "{0}" from "{1}")]]></entry>
    <entry key="LCTErrorParseBadDimSpec"><![CDATA[The dimension specifications must be empty (for dynamically sized) or > 0 otherwise (in expression "{0}" from "{1}")]]></entry>
    <entry key="LCTErrorParseBadDataAccessForMethod">During "{0}" method, the legacy code cannot access input/output value or address (in expression "{1}" from "{2}")</entry>
    <entry key="LCTErrorValidateDataId">{0} number must start at 1 and monotonically increased</entry>
    <entry key="LCTErrorValidateScalarBusObject">{0} is a Simulink.Bus Object and must be scalar</entry>
    <entry key="LCTErrorValidateParameterBusObject">Parameter cannot be a Simulink.Bus Object</entry>
    <entry key="LCTErrorValidateBadBooleanComplex">Only no-boolean complex built-in data types are supported ({0} {1,number,integer})</entry>
    <entry key="LCTErrorValidateBadParameterOrInputAsDim">{0} {1}{2,number,integer} has a reference to the non-existing {3} {4}{5,number,integer}</entry>
    <entry key="LCTErrorValidateBadScalarParameterOrInputAsDim">{0} {1}{2,number,integer} has a reference to the size of the scalar {3} {4}{5,number,integer}</entry>
    <entry key="LCTErrorValidateBadDimParameterOrInputAsDim">{0} {1}{2,number,integer} has a reference to a non-existing dimension of the {3} {4}{5,number,integer}</entry>
    <entry key="LCTErrorValidateBadComplexParamAsDim">The data type of the parameter p{0,number,integer} cannot be complex when its value is used for defining a dimension</entry>
    <entry key="LCTErrorValidateBadFixedPointParamAsDim">The data type of the parameter p{0,number,integer} cannot be fixed-point when its is used for defining a dimension</entry>
    <entry key="LCTErrorValidateBadParamValueAsDim">{0} {1}{2,number,integer} has a reference to the non-scalar Parameter p{3,number,integer}</entry>
    <entry key="LCTErrorValidateAllDynSize">When specifying input/output/parameter/work dynamically sized, all dimensions must be dynamically sized ({0} {1,number,integer})</entry>
    <entry key="LCTErrorValidateSizeArgDataType">The data type of the argument "{0}" (in function specification {1}FcnSpec) cannot be fixed-point nor a Bus Object</entry>
    <entry key="LCTErrorValidateSizeArgDataId">The argument "{0}" (in function specification {1}FcnSpec) has a reference to a non-existing {2} {3,number,integer}</entry>
    <entry key="LCTErrorValidateSizeArgDataDim">The argument "{0}" (in function specification {1}FcnSpec) has a reference to a non-existing dimension of the {2} {3,number,integer}</entry>
    <entry key="LCTErrorValidateVoidArg">Only work data can have the data type "void*" or "void**":\n{0}</entry>
    <entry key="LCTErrorValidateInvalideFieldName">Invalid field "{0}" in the function specification structure</entry>
    <entry key="LCTErrorValidateInvalideFieldDataType">The field "{0}" is of class "{1}" and must be of class "{2}"</entry>
    <entry key="LCTErrorValidateBadLanguage">The field "Options.language" must be "C" or "C++"</entry>
    <entry key="LCTErrorValidateSampleTimeValue">SampleTime field must be non-negative (or -1 for inherited)</entry>
    <entry key="LCTErrorValidateSampleTimeOffsetValue">Offset must be smaller than period</entry>
    <entry key="LCTErrorValidateSampleTimeOffsetValue1">When period is -1, offset must be 0</entry>
    <entry key="LCTErrorValidateSampleTimeOffsetValue2">When period is 0, offset must be 1</entry>
    <entry key="LCTErrorValidateSampleTimeField">SampleTime field must be ''inherited'' or ''parameterized'' or [value offset] or [value]</entry>
    <entry key="LCTErrorValidateEmptyStringField" note="stringDatatypeUpdate">The field "{0}" must be a non-empty character vector</entry>
    <entry key="LCTErrorValidateSFunctionName">The field "SFunctionName" contains non-valid characters ("{0}")</entry>
    <entry key="LCTErrorValidateCellString" note="stringDatatypeUpdate">The field "{0}" must be a cell of character vectors</entry>
    <entry key="LCTErrorValidateBadHeaderFile">The field "HeaderFiles" accepts only file name. You must add the path "{0}" in the "IncPaths" field</entry>
    <entry key="LCTErrorValidateBadFile">Bad {0} file "{1}"</entry>
    <entry key="LCTErrorDataTypeWordlengthTooBig">The "Wordlength" property of the Simulink.NumericType "{0}" must be less than or equal to 32</entry>
    <entry key="LCTWarningDataTypeWordlengthModified">The data type "{0}" uses a word length ({1,number,integer}) that is not supported.\nFixed-point signals using this data type will be put inside a larger word length ({2,number,integer}).</entry>
    <entry key="LCTSFcnCppCodeAPIWarningSkipTLC">The specification for "{0}" is configured for using the S-Function Code Construction API. The TLC block file is not generated.</entry>
    <entry key="LCTSFcnCppCodeAPIWarningCppNotSupported">C++ language is not yet supported by the S-Function Code Construction API. Must use TLC based code generation.</entry>
    <entry key="LCTSFcnCppCodeAPIWarningNoSLDataObjectSupport">User supplied header files for Simulink.AliasType, Simulink.NumericType or Simulink.Bus is not yet supported by the S-Function Code Construction API. Must use TLC based code generation.</entry>
    <entry key="LCTSFcnCppCodeAPIWarningVoidWorkNotSupported">Void work is not yet supported by the S-Function Code Construction API. Must use TLC based code generation.</entry>
    <entry key="LCTSFcnCppCodeAPIWarningManyHeaderfilesNotSupported">Specifying more than 1 header file is not yet supported by the S-Function Code Construction API. Must use TLC based code generation.</entry>
    <entry key="LCTSFcnCppCodeAPIWarningEnclosedHeaderfilesNotSupported"><![CDATA[Header file enclosed with ''"'' or ''<>'' is not yet supported by the S-Function Code Construction API. Must use TLC based code generation.]]></entry>
    <entry key="LCTSFcnCodeAPIError2DMatrixNotSupported">Handling 2D Row Major Matrix is not yet supported by the S-Function Code Construction API. Must use TLC based code generation.</entry>    
    <entry key="LCTSFcnBusElementCplx2DMatrixNotSupported">The Bus/StructType Element "{0}" (of Bus/StructType Object "{1}" specified by "{2}") is a 2D array of a complex type which is not supported when the option "convert2DMatrixToRowMajor" is true.</entry>    
    <entry key="LCTSFcnCplx2DMatrixNotSupported">"{0}" is a 2D array of a complex type which is not supported when the option "convert2DMatrixToRowMajor" is true.</entry>        
    <entry key="LCTSpecParserBadDataAccessForMethod">The legacy code can access input/output value or address only during the "Output" method:\n{0}</entry>
    <entry key="LCTSpecParserBadDimSpec">The dimension specifications must be empty (for dynamically sized) or > 0 otherwise:\n{0}</entry>
    <entry key="LCTSpecParserBadTrailingDim">For N-Dimensional input/output/parameter/work, the trailing dimension must be > 1:\n{0}</entry>
    <entry key="LCTSpecParserBadComplexSizeArg">The return value from the function "size" or "numel" cannot be complex:\n{0}</entry>
    <entry key="LCTSpecParserBadFcnReturn">Only scalar output can be specified as the return of the function:\n{0}</entry>
    <entry key="LCTSpecParserBadParameterDim">A parameter dimension cannot be specified by another parameter or input dimension:\n{0}</entry>
    <entry key="LCTSpecParserBadInputDim">An input dimension cannot be specified by another input dimension:\n{0}</entry>
    <entry key="LCTSpecParserBadOutputOrDWorkDimForDynSize">An output or work dimension cannot be used for specifying a dynamically sized input/output/parameter/work:\n{0}</entry>
    <entry key="LCTSpecParserBadOutputOrDWorkDim">An output or a work dimension must be fully specified:\n{0}</entry>
    <entry key="LCTSpecParserBadDataId"><![CDATA[An input/output/parameter/work number must be specified and > 0:\n{0}]]></entry>
    <entry key="LCTSpecParserUnrecognizedToken">Unrecognized token (or expression):\n{0}</entry>
    <entry key="LCTSpecParserBadSpec">Cannot find a valid function specification in the expression:\n{0}</entry>
    <entry key="LCTSpecParserBadLhsExpr">Cannot find a valid lhs expression in the function specification:\n{0}</entry>
    <entry key="LCTSpecParserBadArgListExpr">Cannot find a valid argument list in the function specification:\n{0}</entry>
    <entry key="LCTSpecParserBadRhsExpr">Unrecognized elements in the function specification:\n{0}</entry>
    <entry key="LCTSpecParserBadArgExpr">Unrecognized argument in the function specification:\n{0}</entry>
    <entry key="LCTSpecParserBadStars">Only 1 or 2 stars are allowed in the specification:\n{0}</entry>
    <entry key="LCTSpecParserBadVoidArg">Unsupported void argument expression:\n{0}</entry>
    <entry key="LCTSpecParserBadSizeSyntax">{1}:\n{0}</entry>
    <entry key="LCTSizeSpecParserBadSizeSyntaxWithDesc">Invalid syntax in the specification:\n{0}</entry>
    <entry key="LCTSizeSpecParserBadSizeSyntax">Invalid syntax in the specification</entry>
    <entry key="LCTSizeSpecParserSizeExprNotParameterAccess">Only parameter name can be used in expression (found "{0}")</entry>
    <entry key="LCTSizeSpecParserSizeExprNotSupportedFun">Only the function "size" and "numel" are supported (found "{0}")</entry>
    <entry key="LCTSizeSpecParserSizeExprArg1NotCallNode">First argument passed to the function "{1}" is not supported (current is "{0}")</entry>
    <entry key="LCTSizeSpecParserSizeExprArg1NotDataName">First argument passed to the function "{1}" is not recognized (found "{0}")</entry>
    <entry key="LCTSizeSpecParserSizeExprArg1IsDWork">Cannot call the function "size" on a work data</entry>
    <entry key="LCTSizeSpecParserSizeExprBadSizeNumArg">The function "size" must have 2 arguments (found {0})</entry>
    <entry key="LCTSizeSpecParserSizeExprArg2NotInt">The second argument passed to the function "size" must be an integer (found "{0}")</entry>
    <entry key="LCTSizeSpecParserSizeExprArg2NotPosInt">The second argument passed to the function "size" must be an integer greater than 0 (current is {0})</entry>
    <entry key="LCTSizeSpecParserSizeExprBadNumelNumArg">The function "numel" must have 1 argument (found {0})</entry>
    <entry key="LCTSizeSpecParserSizeExprBadOp">Unsupported expression "{0}"</entry>
    <entry key="LCTSpecBadId">Unsupported identifier "{0}"</entry>
    <entry key="LCTSizeSpecParserNegExpr">The expression "{0}" evaluates to a negative value "{1}"</entry>
    <entry key="LCTSizeSpecParserFltExpr">The expression "{0}" evaluates to a non-integer value "{1}"</entry>
    <entry key="slSaveAsBadVersion">The version you have tried to save to ''{0}'' is not supported.</entry>
    <entry key="slSaveAsDepreciatedVersion">Saving to the version you have selected ''{0}'' has been depreciated and will be removed in a future release of Simulink.</entry>
    <entry key="FxpCheckFailed">Unable to perform Model Advisor fixed-point check for ''{0}'', error occurred: \n''{1}''</entry>
    <entry key="FxpCheckFailedModelIntDivSettings">Models integer division settings</entry>
    <entry key="FxpCheckFailedProductBlockRounding">Product block rounding</entry>
    <entry key="FxpCheckFailedLookupBlockRounding">Lookup block rounding</entry>
    <entry key="FxpCheckFailedLookupBreakpointSpacing">Lookup breakpoint spacing</entry>
    <entry key="FxpCheckFailedPreLookupBlocks">PreLookup blocks</entry>
    <entry key="FxpCheckFailedGainBlocks">Gain blocks</entry>
    <entry key="FxpCheckFailedProductBlocks">Product blocks</entry>
    <entry key="FxpCheckFailedDotProductBlocks">Dot product blocks</entry>
    <entry key="FxpCheckFailedSumBlocks">Sum blocks</entry>
    <entry key="FxpCheckFailedRelopBlocks">Relational operator blocks</entry>
    <entry key="FxpCheckFailedMinmaxBlocks">Minmax blocks</entry>
    <entry key="FxpCheckFailedDiscreteIntegratorBlocks">Discrete integrator blocks</entry>
    <entry key="FxpCheckFailedDTCBlocks">Data type conversion blocks</entry>
    <entry key="FxpCheckFailedCompToZeroBlocks">Compare to zero blocks</entry>
    <entry key="FxpCheckFailedCompToConstBlocks">Compare to constant blocks</entry>
    <entry key="FxpPreLookupDivision">Optimization opportunity for the following block: When the index search method is ''Evenly-spaced points'', if the ''Breakpoints''\ndata is nontunable, try using an even power of 2 spacing. Otherwise, specify a different index search method to avoid the\ndivision operation, which is computationally expensive.</entry>
    <entry key="FxpEvenSpacingSignificant">Optimization opportunity for the following Lookup Table: If ''Vector of input values'' is nontunable,\nmake the ''Vector of input values'' data evenly spaced. Use power of 2 spacing to achieve a more efficient\nimplementation. For more details, see fixpt_look1_func_approx.</entry>
    <entry key="FxpEvenSpacingSlight">Optimization opportunity for the following Lookup Table: When ''Vector of input values'' data is almost evenly spaced\nwhen quantized, make the ''Vector of input values'' data evenly spaced. Use power of 2 spacing to achieve a more efficient\n implementation. For more details, see fixpt_evenspace_cleanup.</entry>
    <entry key="FxpEvenSpacingPerfect">Optimization opportunity for the following Lookup Table: When ''Vector of input values'' data is evenly spaced, if it is\nnontunable, try using an even power of 2 spacing and change the table accordingly. This results in a simplified\nimplementation that uses shift instead of division. For more details, see fixpt_look1_func_approx.</entry>
    <entry key="FxpEvenSpacingPow2WithNonEvenSearch">Optimization opportunity for the following 1-D, 2-D, or n-D Lookup Table block: When the ''Breakpoints'' data has even power of 2 spacing and is\nnontunable, the ''Evenly-spaced points'' search method is recommended. The same result is achieved more efficiently because \ndivision operations are avoided and memory requirements for the ''Breakpoints'' data are reduced.</entry>
    <entry key="FxpEvenSpacingNotPow2WithNonEvenSearch">Optimization opportunity for the following 1-D, 2-D, or n-D Lookup Table block: When ''Breakpoints'' data is evenly spaced, set ''Index search method'' \nto ''Evenly-spaced points'' to improve efficiency and use less memory.  To further improve efficiency, if the ''Breakpoints'' data\n is nontunable, consider an even power of 2 spacing.  </entry>
    <entry key="FxpEvenSpacingNotPow2WithEvenSearch">Optimization opportunity for the following 1-D, 2-D, or n-D Lookup Table block: When ''Breakpoints'' data is evenly spaced, if\nit is nontunable, adjust the ''Breakpoints'' data to an even power of 2 spacing. This results in a simplified\n implementation that uses shift instead of division. For more details, see fixpt_look1_func_approx.</entry>
    <entry key="FxpNotEvenSpacingWithNonEvenSearch">Optimization opportunity for the following 1-D, 2-D, or n-D Lookup Table block: If the ''Breakpoints'' data is nontunable,\n adjust the ''Breakpoints'' data to have even power of 2 spacing, and use ''Evenly-spaced points'' index search method.\n This results in a more efficient implementation.</entry>
    <entry key="FxpCheckDIntegrateBlock">The following Discrete Integrators have a complicated initial condition mode. \nThe initial condition is used to initialize the state and the output. \nAs a result, the output equation requires extra generated code and an extra \nglobal variable is required.  Setting the initial condition mode so that \nonly the state is initialized is more efficient.</entry>
    <entry key="FxpCouldNotComputeRounding">The model advisor could not calculate the most efficient rounding method for \nthe following Product block.</entry>
    <entry key="FxpSuggestMoreEfficientRounding"><![CDATA[To obtain the most efficient generated code, you should change the <b>Round \ninteger calculations toward</b> parameter of the following block to {0}.]]></entry>
    <entry key="FxpCheckLookupRounding"><![CDATA[To obtain the most efficient generated code, you should change the <b>Round \ninteger calculations toward</b> parameter of the following blocks to <code>Simplest</code>.]]></entry>
    <entry key="FxpCheckDTConvRounding"><![CDATA[To obtain the most efficient generated code, you should change the <b>Round \ninteger calculations toward</b> parameter of the following blocks to <code>Simplest</code>.]]></entry>
    <entry key="FxpCheckProductBlock">An input with an invariant constant value (sample time color magenta) is used as the \ndenominator in an on-line division operation.  If the operation is changed to multiplication, \nand the invariant input is replaced by its reciprocal, then the division will \nbe done off-line and the on-line operation will be multiplication.  This often \ngives satisfactory numerics and usually leads to faster and smaller generated \ncode.</entry>
    <entry key="FxpCheckMultiWord">\nTo use this option, change the word length of the following blocks to avoid multiword operations. </entry>
    <entry key="FxpNetSlopeChangeRndMethod"><![CDATA[\nTo use this option, change the <b>Integer rounding mode</b> parameter of the following blocks to <code>Simplest</code> or to the <b>Configuration Parameters > Hardware Implementation > Production Hardware > Signed integer division rounds to </b> setting. ]]></entry>
    <entry key="FxpNetSlopeChangeHWRndMeth"><![CDATA[\nTo use this option, change the <b>Configuration Parameters > Hardware Implementation > Production Hardware > Signed integer division rounds to </b> setting to <code>Zero</code> or <code>Floor</code>.]]></entry>
    <entry key="FxpCheckMulOptSetOnRationalApprox"><![CDATA[The following blocks will invoke net slope computation for multiplication. You have the <b>Configuration Parameters > Optimization > Use division for fixed-point net slope computation</b> setting set to <code>On</code> in this model. ]]></entry>
    <entry key="FxpCheckMulOptSetOnReciprocalOfInt"><![CDATA[The following blocks will invoke net slope computation for multiplication. You have the <b>Configuration Parameters > Optimization > Use division for fixed-point net slope computation</b> setting set to <code> Use division for reciprocals of integers only </code> in this model. ]]></entry>
    <entry key="FxpCheckMulOptSetOffRationalApprox"><![CDATA[The following blocks will invoke net slope computation for multiplication. The net slope computation can be implemented by: multiplication-and-shift or integer multiplication and/or division. Changing the <b>Configuration Parameters > Optimization > Use division for fixed-point net slope computation</b> setting to <code>On</code> might generate more efficient code. For example, net slope computation from fixdt(1, 16, 7/10, 0) to fixdt(1, 16, 1, 0) can be achieved by Qy = (Qu*7)/10 instead of  Qu*11469 >> 14. ]]></entry>
    <entry key="FxpCheckMulOptSetOffReciprocalOfInt"><![CDATA[The following blocks will invoke net slope computation for multiplication. The net slope computation can be implemented by: multiplication and shift or integer division. Changing the <b>Configuration Parameters > Optimization > Use division for fixed-point net slope computation</b> setting to <code>Use division for reciprocals of integers only</code> or to <code>On</code> might generate more efficient code. For example, net slope computation from fixdt(1, 16, 1/1000, 0) to fixdt(1, 16, 1, 0) can be achieved by Qy = Qu/1000 instead of Qy = (int16_T)((int32_T)Qu * 1677L >> 24). ]]></entry>
    <entry key="FxpCheckMulOptSetOffRationalApproxSetOnReciprocalOfInt"><![CDATA[The following blocks will invoke net slope computation for multiplication. You have the <b>Configuration Parameters > Optimization > Use division for fixed-point net slope computation</b> setting set to <code>Use division for reciprocals of integers only</code>. Changing this setting to <code>On</code> might generate more efficient code. For example, net slope computation from fixdt(1, 16, 7/10, 0) to fixdt(1, 16, 1, 0) can be achieved by Qy = (Qu*7)/10 instead of  Qu*11469 >> 14. ]]></entry>
    <entry key="FxpCheckCastOptSetOnRationalApprox"><![CDATA[The following blocks will invoke net slope computation for cast. You have the <b>Configuration Parameters > Optimization > Use division for fixed-point net slope computation</b> setting set to <code>On</code> in this model. ]]></entry>
    <entry key="FxpCheckCastOptSetOnReciprocalOfInt"><![CDATA[The following blocks will invoke net slope computation for cast. You have the <b>Configuration Parameters > Optimization > Use division for fixed-point net slope computation</b> setting set to <code> Use division for reciprocals of integers only </code> in this model. ]]></entry>
    <entry key="FxpCheckCastOptSetOffRationalApprox"><![CDATA[The following blocks will invoke net slope computation for cast. The net slope computation can be implemented by: multiplication-and-shift or integer multiplication and/or division. Changing the <b>Configuration Parameters > Optimization > Use division for fixed-point net slope computation</b> setting to <code>On</code> might generate more efficient code. For example, net slope computation from fixdt(1, 16, 7/10, 0) to fixdt(1, 16, 1, 0) can be achieved by Qy = (Qu*7)/10 instead of  Qu*11469 >> 14. ]]></entry>
    <entry key="FxpCheckCastOptSetOffReciprocalOfInt"><![CDATA[The following blocks will invoke net slope computation for cast. The net slope computation can be implemented by: multiplication and shift or integer division. Changing the <b>Configuration Parameters > Optimization > Use division for fixed-point net slope computation</b> setting to <code>Use division for reciprocals of integers only</code> or to <code>On</code> might generate more efficient code. For example, net slope computation from fixdt(1, 16, 1/1000, 0) to fixdt(1, 16, 1, 0) can be achieved by Qy = Qu/1000 instead of Qy = (int16_T)((int32_T)Qu * 1677L >> 24). ]]></entry>
    <entry key="FxpCheckCastOptSetOffRationalApproxSetOnReciprocalOfInt"><![CDATA[The following blocks will invoke net slope computation for cast. You have the <b>Configuration Parameters > Optimization > Use division for fixed-point net slope computation</b> setting set to <code>Use division for reciprocals of integers only</code>. Changing this setting to <code>On</code> might generate more efficient code. For example, net slope computation from fixdt(1, 16, 7/10, 0) to fixdt(1, 16, 1, 0) can be achieved by Qy = (Qu*7)/10 instead of  Qu*11469 >> 14. ]]></entry>
	<entry key="FxpMulCheckSatOnUseMinMaxOff">The following blocks require a very cumbersome multiplication. \nThe first input has   {0,number,* #0} bits. \nThe second input has  {1,number,* #0} bits. \nThe ideal product has {2,number,* #0} bits. \nThe largest integer size for the target has only {3,number,integer} bits. \nSaturation is ON, so it is necessary to determine all {4,number,integer} \nbits of the ideal product in the C code.\nThe C code required to do this multiplication is large and slow. \nFor this target, restricting multiplications to \n{5,number,integer} bits times {6,number,integer} bits is strongly recommended.</entry>
    <entry key="FxpMulCheckSatOffUseMinMaxOff">The following blocks require a very cumbersome multiplication. \nThe first input has   {0,number,* #0} bits. \nThe second input has  {1,number,* #0} bits. \nThe ideal product has {2,number,* #0} bits. \nThe largest integer size for the target has only {3,number,integer} bits. \nThe relative scaling of the inputs and the output requires that some of the \n{4,number,integer} most significant bits of the ideal product be determined in the C code. \nThe C code required to do this multiplication is large and slow. \nFor this target, restricting multiplications to \n{5,number,integer} bits times {6,number,integer} bits is strongly recommended.</entry>
    <entry key="FxpMulCheckSatOnUseMinMaxOn">Unless input ranges are properly specified (see the documentation for more information about optimizing generated code using specified minimum and maximum values), the following blocks might require a very cumbersome multiplication. \nThe first input has   {0,number,* #0} bits. \nThe second input has  {1,number,* #0} bits. \nBased upon type information alone, the ideal product has {2,number,* #0} bits. \nThe largest integer size for the target has only {3,number,integer} bits. \nSaturation is ON, so it might be necessary to determine all {4,number,integer} \nbits of the ideal product in the C code.\nThe C code required to do this multiplication is large and slow. \nFor this target, restricting multiplications to \n{5,number,integer} bits times {6,number,integer} bits is strongly recommended.</entry>
    <entry key="FxpMulCheckSatOffUseMinMaxOn">Unless input ranges are properly specified (see the documentation for more information about optimizing generated code using specified minimum and maximum values), the following blocks might require a very cumbersome multiplication. \nThe first input has   {0,number,* #0} bits. \nThe second input has  {1,number,* #0} bits. \nBased on type information alone, the ideal product has {2,number,* #0} bits. \nThe largest integer size for the target has only {3,number,integer} bits. \nThe relative scaling of the inputs and the output might require that some of the \n{4,number,integer} most significant bits of the ideal product be determined in the C code. \nThe C code required to do this multiplication is large and slow. \nFor this target, restricting multiplications to \n{5,number,integer} bits times {6,number,integer} bits is strongly recommended.</entry>
    <entry key="FxpMulCheckNoZeroBias">The following blocks are multiplying signals with nonzero bias. \nIt is recommended that you avoid this when possible because \nextra steps are required to implement the multiplication. \nTo avoid this, insert a Data Type Conversion block before \nand/or after the block doing the multiplication.  This allows the biases \nto be removed, and allows you to control data type and \nscaling for intermediate calculations. In many cases the \nData Type Conversion blocks can be moved to the "edges" of a (sub)system. \nThe conversion is only done once, and all blocks in the \nsubsystem can benefit from simpler, bias-free math.</entry>
    <entry key="FxpMulCheckMismatchSlope">The following blocks are multiplying signals with mismatched slope adjustment factors. \nThe first  input has slope adjustment factor {0}.\nThe second input has slope adjustment factor {1}. \nThe       output has slope adjustment factor {2} \nThe net slope adjustment is           {3}.\nThis mismatch causes the overall operation to involve two multiply \ninstructions rather than just one as expected. To remove the mismatch, \nchange the scaling of the output so that its slope adjustment factor is \nthe product of the input slope adjustment factors.</entry>
    <entry key="FxpSumCheckBiasNote">Note that for better accuracy and efficiency, \nall the nonzero bias terms are collected into a single net bias correction term. The ranges given \nbelow for the input and output exclude their biases. </entry>
    <entry key="FxpSumCheckMinMax">The following Sum blocks might have a range error. {0} One of the inputs has a range\n{1} to {2}\n that exceeds the output range\n{3} to {4}.  To reduce the chance of overflow or saturation, change the data type of the output and accumulator to equal or exceed the range of all inputs.  </entry>
    <entry key="FxpSumCheckMismatchSlope">The following Sum blocks have an input with a slope adjustment factor that does not \nequal the slope adjustment factor of the output. \nThe input has slope adjustment factor {0} \nThe output has slope adjustment factor {1}. \nThe net slope adjustment factor is {2}. \nThis mismatch requires the Sum block to employ one or more multiplication operations. To remove the mismatch, change the data types so that the inputs, output, and accumulator all have the same slope adjustment factor.</entry>
    <entry key="FxpSumCheckMismatchBias">For the following Sum blocks, the net sum of the input biases \ndoes not equal the bias of the output. The implementation will include one extra \naddition or subtraction instruction to correctly account for the net \nbias adjustment. You can change the bias of the output scaling to make \nthe net bias adjustment zero, and eliminate the need for the extra \noperation.</entry>
    <entry key="FxpRelopCheckDataTypeNotSame">For the following Relational Operator blocks, the data types of the first \nand second inputs are not the same. A conversion operation is \nrequired every time the block is executed. If one of the inputs \nis invariant (sample time color magenta), then changing the data \ntype and scaling of the invariant input to match the other input \nis a good opportunity for improving the model''s efficiency.</entry>
    <entry key="FxpRelopCheckSingleInputFixptBool">The output of the following Relational Operator block is always {0}  because the operator is {1} and the input data type is {2}. This might result in dead code which will be eliminated.</entry>
    <entry key="FxpRelopCheckU1Max">For the following Relational Operator blocks, the first input has the \ngreater positive range. The second input is converted to the \ndata type and scaling of the first input prior to performing \nthe relational operation. \nThe     first  input has range {0} to {1} \nbut the second input has range {2} to {3} \nso a range error can occur when casting. \nYou can insert Data Type Conversion blocks \nin front of the Relational Operator block to \nconvert both inputs to a common data type that has sufficient \nrange and precision to perfectly represent each input. The relational \noperation would then be error-free.</entry>
    <entry key="FxpRelopCheckU1Slope">For the following Relational Operator blocks, the first input has the \ngreater positive range. The second input is converted to the \ndata type and scaling of the first input prior to performing \nthe relational operation. \nThe first  input has precision {0} \nThe second input has precision {1} \n so there can be a precision loss each time the conversion is performed. \nYou can insert Data Type Conversion blocks \nin front of the Relational Operator block to \nconvert both inputs to a common data type that has sufficient \nrange and precision to perfectly represent each input. The relational \noperation would then be error-free.</entry>
    <entry key="FxpRelopCheckU2Max">For the following Relational Operator blocks, the second input has the \ngreater positive range. The first input is converted to the \ndata type and scaling of the second input prior to performing \nthe relational operation. \nThe     first  input has range {0} to {1} \nbut the second input has range {2} to {3} \nso a range error can occur when casting. \nYou can insert Data Type Conversion blocks \nin front of the Relational Operator block to \nconvert both inputs to a common data type that has sufficient \nrange and precision to perfectly represent each input. The relational \noperation would then be error-free.</entry>
    <entry key="FxpRelopCheckU2Slope">For the following Relational Operator blocks, the second input has the \ngreater positive range. The first input is converted to the \ndata type and scaling of the second input prior to performing \nthe relational operation. \nThe first  input has precision {0} \nThe second input has precision {1} \nso there can be a precision loss each time the conversion is performed. \nYou can insert Data Type Conversion blocks \nin front of the Relational Operator block to \nconvert both inputs to a common data type that has sufficient \nrange and precision to perfectly represent each input. The relational \noperation would then be error-free.</entry>
    <entry key="FxpRelopCheckMismatchSlope">The following Relational Operator blocks have different slope adjustment factors for its first and second inputs. \nThe first  input has slope adjustment factor {0} \nThe second input has slope adjustment factor {1} \nThe net slope adjustment is           {2} \nThis mismatch causes the Relational Operator block to require a multiply operation each \ntime the input with lesser positive range is converted to the data type and scaling of \nthe input with greater positive range. \nTo remove the mismatch, change the scaling of either of the inputs.</entry>
    <entry key="FxpMinmaxCheckNotSame">For the following MinMax blocks, the data types of the output \nand an input are not the same. A conversion operation is \nrequired every time the block is executed.  If you change the \ndata types to be the same, your model will be more efficient.</entry>
    <entry key="FxpMinmaxCheckMinMax">For the following MinMax blocks, an input is converted to the \ndata type and scaling of the output prior to performing \nthe relational operation. \nThe     input  has range {0} to {1} \nbut the output has range {2} to {3} \nso a range error can occur when casting. \nIf you change the output data type so that it has sufficient \nrange and precision to perfectly represent each input, then \nthe operation will be error-free.</entry>
    <entry key="FxpMinmaxCheckSlope">For the following MinMax blocks, an input is converted to the \ndata type and scaling of the output prior to performing \nthe relational operation. \nThe input  has precision {0} \nThe output has precision {1} \nso there can be a precision loss each time the conversion is performed. \nIf you change the output data type so that it has sufficient \nrange and precision to perfectly represent each input, then \nthe operation will be error-free.</entry>
    <entry key="FxpMinmaxCheckFracSlope">The following MinMax blocks have an input with a slope adjustment factor that does not \nequal the slope adjustment factor of the output. \nThe input  has slope adjustment factor {0} \nThe output has slope adjustment factor {1} \nThe net slope adjustment is     {2} \nThis mismatch causes the MinMax block to require a multiply operation each \ntime the input is converted to the data type and scaling of the output. \nTo remove this mismatch, change the scaling of either of the input or output.</entry>
    <entry key="FxpManyMulDivSameBlock">The following Product blocks are configured to do more than one multiplication or \ndivision operation. This is supported, but if the output data type is \ninteger or fixed-point, then better results are likely if this operation \nis split across several blocks, with each block performing one multiplication or one \ndivision. Using several blocks allows you to control the data type \nand scaling used for intermediate calculations. The choice of data types \nfor intermediate calculations effects precision, range errors, and efficiency.</entry>
    <entry key="FxpManyDivSameBlock">The following Product blocks are configured to do more than one \ndivision operation. A general guideline from the field \nof numerical analysis is to multiply all the denominator \nterms together first, and then do only one division. This \nimproves accuracy and often speed in floating-point and \nespecially fixed-point calculations. This can \nbe accomplished in Simulink by cascading Product blocks.</entry>
    <entry key="FxpEmbedDivRoundUndef"><![CDATA[Integer division generated code could be more efficient. The rounding behavior of signed integer division is not fully specified by the C language standards. When faced with this lack of specification, the code generated for division can be large in order to ensure bit-true agreement between simulation and code generation. The model's Production Hardware properties allow the implementation specific signed integer rounding behavior to be specified.  The behavior is currently set to ''Undefined''. You can reduce the size of the code generated for division by determining and setting this Production Hardware information. The most common behavior is that signed integer division rounds to Zero.<p><a href="matlab:modeladvisorprivate(''openCSAndHighlight'', ''{0}'', ''ProdIntDivRoundTo'');">Production Hardware properties</a></p>]]></entry>
    <entry key="FxpCheckDivZeroProtect"><![CDATA[Integer division generated code will contain protection against arithmetic exceptions like division by zero, INT_MIN/-1, and LONG_MIN/-1.  Depending on the hardware, arithmetic exceptions can cause dramatic behavior, so protecting against these exceptions can be critical.  Some designers construct their models in an extremely careful way that makes it impossible for exception triggering input combinations to reach a division operation. For these models, the protection code generated as part of the division operation is redundant.  This redundant protection code can be removed using the fixed-point division setting in the Optimization pane of the Configuration Parameters dialog.  This should only be done when you have painstakingly verified that your model cannot cause exceptions in division operations. <p><a href="matlab:modeladvisorprivate(''openCSAndHighlight'', ''{0}'', ''NoFixptDivByZeroProtection'');">Remove code that protects against division arithmetic exceptions</a></p>]]></entry>
    <entry key="FxpEmbeddedHardwareNotMicro"><![CDATA[Some Model Advisor checks related to efficient C code generation are being skipped because of the setting for the model's Production Hardware device. For some Production Hardware devices, such as ASIC or FPGA targets, production C code is not relevant.  The model's Production Hardware properties are specified at the top of the Hardware Implementation pane of the Configuration Parameters dialog box. To enable checks specific to C code generation, change the Production Hardware device so that target C compiler properties are shown such as the number of bits per char.<p><a href="matlab:modeladvisorprivate(''openCSAndHighlight'', ''{0}'', ''ProdHWDeviceType'');">Production Hardware properties</a></p>]]></entry>
    <entry key="FxpCheckCmpToZero">Parameter overflow occurred for the following Compare to Zero block. This block uses the input data type to represent zero. The input data type, {0}, cannot represent zero exactly, so the value was saturated to the closest representable value. \nTo fix this issue, select an input data type that can represent zero.    </entry>
    <entry key="FxpCheckCmpToConst">Parameter overflow occurred for the following Compare to Constant block. This block uses the input data type to represent its Constant value parameter. The Constant value parameter, {0}, is outside the range that the input data type, {1}, can represent.  The specified value was saturated to the closest representable value. \nTo fix this issue, either choose an input data type that can represent the Constant value parameter or change the Constant value parameter to match the input data type.</entry>
	<entry key="FxpCheckCmpToConstAlwaysTrue"> This block uses the input data type {0} to represent its constant value parameter {1}. For the specified relational operator, the output of the block is always true. \n To fix this issue, either (1) Consider replacing this block with a constant block with output true or (2) Change input data type such that it can represent values beyond {2}.</entry>
	<entry key="FxpCheckCmpToConstAlwaysFalse"> This block uses the input data type {0} to represent its constant value parameter {1}. For the specified relational operator, the output of the block is always false. \n To fix this issue, either (1) Consider replacing this block with a constant block with output false or (2) Change input data type such that it can represent values beyond {2}.</entry>
    <entry key="MADisableSignalLoggingT">Disable signal logging</entry>
    <entry key="MADisableSignalLoggingTTip">Disable unnecessary signal logging</entry>
    <entry key="MAActionDisableSignalLogging">Disable signal logging on all logged signals.</entry>
    <entry key="MADisableSignalLoggingFail">The following table lists the signals with logging enabled.</entry>
    <entry key="MADisabledSignalLoggingFor">Disable logging for {0} signals. </entry>
    <entry key="MANoPortFound">No signal lines found.</entry>
    <entry key="MAErrAnalyzingLoggingFail">Analyzing signal logging failed.</entry>
    <entry key="MASignalAnalysisResult">Signal analysis result</entry>
    <entry key="MASignalCategory">Signal Category</entry>
    <entry key="MASignalCount">Unique Signal Count</entry>
    <entry key="MASignalCurrentlyLogEnabled">Logged</entry>
    <entry key="MASignalCurrentlyLogDisabled">Unlogged</entry>
    <entry key="MAAll">All</entry>
    <entry key="MAErrUpdateModelFailTit">Model Update Failed</entry>
    <entry key="MAErrUpdateModelFailMsg">Model update failed. {0}  {1}</entry>
    <entry key="MAPassed">Passed</entry>
    <entry key="MAFailed">Failed</entry>
    <entry key="MAModifyAll">Modify All</entry>    
    <entry key="MATitleDetectReusableSubsystemNotReused">Detect subsystem set as reusable but is only used once</entry>
    <entry key="MADetectReusableSubsystemNotReusedWarningMsg"><![CDATA[The following subsystem blocks specify the <b>Function packaging</b> option as <code>Reusable function</code>, but the blocks are used only once. This might result in an inefficient implementation of the block in the generated code. For the following blocks, set <b>Function packaging</b> to <code>Auto</code>:]]></entry>
    <entry key="MADescrDetectReusableSubsystemNotReused"><![CDATA[Identify subsystems that specify <b>Function packaging</b> as <tt>Reusable function</tt>, but are used only once.]]></entry>
    <entry key="MATitleCheckEnableMemcpy">Check for efficiency optimization parameters</entry>
    <entry key="MATitletipCheckEnableMemcpy"><![CDATA[Identify optimization parameters that depend on the <b>Execution efficiency</b> or <b>ROM efficiency</b> objectives.]]></entry>
    <entry key="MACheckEnableMemcpyResultNA"><![CDATA[The model is not using the <b>ROM efficiency</b> or <b>Execution efficiency</b> objectives.]]></entry>
    <entry key="MACheckEnableMemcpyResultWarning"><![CDATA[The model is using the <b>{0}</b> objectives. <b>Use memcpy for vector assignment</b> is cleared.]]></entry>
    <entry key="MACheckEnableMemcpyResultPassed"><![CDATA[<ul><li>The model is using the following objective: <b>{0}</b></li><li><b>Use memcpy for vector assignment</b> is selected</li></ul>]]></entry>
    <entry key="MATitletipDetectReusableSubsystemNotReused">Detect subsystem set as reusable but is only reused once</entry>
    <entry key="slprof_hilite_usage">Usage: slprofile_hilite_system([''encoded-path'',] ''block-name'')</entry>
    <entry key="slprof_unhilite_usage">Usage: slprofile_unhilite_system(system_name)</entry>
    <entry key="badEncPath">Unexpected encoded path</entry>
    <entry key="openReportFileWritable">Error opening report file for writing</entry>
    <entry key="slprofNotMATLABWebBrowser">Unable to open profile report in the MATLAB Web Browser.  Hyper-links to Simulink models will only work in the MATLAB Web Browser.</entry>
    <entry key="slprofBrowserNotFound">Report saved, but could not find web browser</entry>
    <entry key="slprofBrowserNotLaunched">Report saved, but could not launch web browser</entry>
    <entry key="assertExtModeCallback">Assertion: Unrecognized action in main entry point.</entry>
    <entry key="errExtModeConfigDialog">Error in external mode configuration dialog</entry>
    <entry key="extModeOpenInvCommand">M Assert: Invalid Command.</entry>
    <entry key="extModeOpenGenericError">Executing the ''{0}'' command produced the following error:\n\n{1}</entry>
    <entry key="extModeOpenUnknownUpInfoIdx">M Assert: Unknown upInfo index.</entry>
    <entry key="extModeOpenUnhandledDataType">Datatype not handled:\n{0}</entry>
    <entry key="extModeOpenSLRTWarning">{0}</entry>
    <entry key="extModeOpenSLRTAppNotLoaded">The ''{0}'' application is not loaded on the target.</entry>
    <entry key="extModeOpenSLRTTrigSigNotFound">Selected trigger signal does not exist for Scope: {0}.</entry>
    <entry key="extModeOpenSLRTInvalidUpInfoType">Invalid value for UpInfoType.</entry>
    <entry key="extModeOpenSLRTScopesOutOfScope">Scopes have been deleted. Could no longer continue simulation.</entry>
    <entry key="extModeOpenSLRTScopeWillNotUpload">Scope ''{0}'' will not upload signals.</entry>
    <entry key="extModeOpenSLRTTargetPCNotDefined">Connection process failed. Target PC ''{0}'' is not defined.</entry>
    <entry key="extModeOpenSLRTAddSignalCopyBlock">An input signal of ''{0}'' cannot be uploaded. Consider adding a SignalCopy block to the input ports of ''{1}''.</entry>
    <entry key="extModeOpenSLRTTgtConnNoStreamingMulticore">The ''{0}'' application cannot stream signal data to SDI and Simulink Dashboard: Target must be configured for Multicore.</entry>
    <entry key="extModeOpenSLRTTgtConnNoStreamingConnect">The ''{0}'' application cannot stream signal data to SDI and Simulink Dashboard: Target connection failed.</entry>
    <entry key="extModeOpenSLRTTgtConnNoStreamingSDI">The ''{0}'' application cannot stream signal data to SDI and Simulink Dashboard: Starting SDI failed.</entry>
    <entry key="extModeOpenSLRTUnobservableSignal">Signal ''{0}'' is not observable from ''{1}''.</entry>
    <entry key="SLFeatureNotEnoughArgs">Not enough input arguments.</entry>
    <entry key="SLFeatureInvalidCall">Invalid call to slfeature.</entry>
    <entry key="AddExecEventListenerInvalidInputArgs">Needs three input arguments.</entry>
    <entry key="AddExecEventListenerRequireOneOutputArg">The output of ''add_exec_event_listener'' should be assigned to a variable that persists for the duration that the listener is active.</entry>
    <entry key="AddExecEventListenerOnlyToNonVirtualBlocks">Adding a listener for a block method execution event for ''{0}'' is not supported. Listeners can be added to only nonvirtual blocks.</entry>
    <entry key="AddExecEventListenerOnlyDuringExecuting">Adding a listener for a block method execution event for ''{0}'' is not supported. Listeners can be added only when block diagram is executing.</entry>
    <entry key="SFunctionWizardInvalidArgs">{0}</entry>
    <entry key="SFunctionWizardJaveNotEnabled">Java is not currently fully enabled on this platform. Please see Writing S-functions manual for information on how to write S-functions.</entry>
    <entry key="SfunBuilderBusNotFound">Bus not found in workspace</entry>
    <entry key="hmiSLTgtEmptyTagInputArg">Tag input argument can not be empty.</entry>
    <entry key="hmiSLTgtIncorrectlyFormedTag">Tag is incorrectly formed.</entry>
    <entry key="encPathArgsMustBeStrings" note="stringDatatypeUpdate">All input arguments must be character vectors.</entry>
    <entry key="decPathFirstArgError" note="stringDatatypeUpdate">First argument is the encoded path which must be a character vector.</entry>
    <entry key="decPathSecondArgError">Second argument is to combine the model name with the rest of the path and must be true or false.</entry>
    <entry key="enc2normalpathFirstArgError" note="stringDatatypeUpdate">First argument is the encoded path which must be a character vector.</entry>
    <entry key="ConflictConfigSetRefStateflowTargets">In model ''{0}'' Stateflow sfun target settings conflict with configuration reference. A new configuration set has been created and set as the active configuration set of the model. The new configuration set consists of values from the variable ''{1}'' while the Simulation Target parameters come from Stateflow sfun target settings. The configuration reference has been temporarily marked as inactive. Please use ''updatecsref'' to resolve the conflict and restore the configuration reference to its original active state. Please type ''help updatecsref'' for more information.</entry>
    <entry key="PotentialConflictConfigSetRefStateflowTargets">Cannot store Stateflow sfun target settings into ''{0}'' when loading model ''{1}''. Please load configuration set object ''{2}'' in the base workspace before you load the model.</entry>
    <entry key="UpdatecsrefProgressMessage1">\nStep 1 of 2: Analyzing model files\n----------------------------------</entry>
    <entry key="UpdatecsrefProgressMessage2">\nStep 2 of 2: Comparing Stateflow sfun target settings, updating models and configuration sets\n---------------------------------------------------------------------------------------------</entry>
    <entry key="UpdatecsrefConfigSetRefNotFound">There is no configuration reference to update.</entry>
    <entry key="UpdatecsrefExitUpdatecsref">\nupdatecsref exits.</entry>
    <entry key="UpdatecsrefModelUpdated">\nThe following model file(s) have been updated.</entry>
    <entry key="UpdatecsrefWSVarUpdated">\nThe following base workspace object(s) have been updated.</entry>
    <entry key="UpdatecsrefUpdateMATFile">Please use the current value in the base workspace to update your MAT file.</entry>
    <entry key="UpdatecsrefAppendDescription">The following will be appended to ''description'' of ''{0}''</entry>
    <entry key="UpdatecsrefIgnoreWSVar">Object ''{0}'' does not need to be updated.</entry>
    <entry key="UpdatecsrefChangeWSVar">Do you want to proceed and change object ''{0}''? (Y/n)</entry>
    <entry key="UpdatecsrefSetActiveConfigSet">Do you want to set ''{0}'' as the active configuration set for model ''{1}''? (Y/n)</entry>
    <entry key="UpdatecsrefOnlyConfigSetRef">It will be used as the active configuration set. Do you want to continue? (Y/n)</entry>
    <entry key="UpdatecsrefOnlyConfigSetRefisActive">    It is used as the active configuration set.</entry>
    <entry key="UpdatecsrefChooseConfigSetRef">Please choose a valid configuration reference as the active configuration set (default is [1]):</entry>
    <entry key="UpdatecsrefWSVarUpdatedSuccessfully">Object ''{0}'' has been updated successfully.</entry>
    <entry key="UpdatecsrefModelUpdatedSuccessfully">Model ''{0}'' has been updated successfully.</entry>
    <entry key="UpdatecsrefUpdateParameter">Parameter ''{0}'' of ''{1}'' will be changed from ''{2}'' to ''{3}''</entry>
    <entry key="UpdatecsrefWSVarUsedBy">''{0}'' is used by</entry>
    <entry key="UpdatecsrefConfigSetRefinMdl">Configuration reference ''{0}'' in model ''{1}''</entry>
    <entry key="UpdatecsrefDifferentParameterValue">''{0}'' and ''{1}'' have different values for parameter ''{2}''.</entry>
    <entry key="UpdatecsrefUpdatedAlready">Model ''{0}'' is already updated.</entry>
    <entry key="UpdatecsrefNoConfigSetRef">Model ''{0}'' is ignored. It does not use configuration reference.</entry>
    <entry key="UpdatecsrefInvalidConfigSetRef">Found the following invalid configuration reference(s) in model ''{0}''</entry>
    <entry key="UpdatecsrefNeedValidConfigSetRef">Please provide a valid configuration reference for model ''{0}'' before you run updatecsref.</entry>
    <entry key="UpdatecsrefValidConfigSetRef">Found the following valid configuration reference(s) in model ''{0}''</entry>
    <entry key="UpdatecsrefQuit">[{0}] Quit</entry>
    <entry key="UpdatecsrefConfigSetRefValue">[{0}] Configuration reference ''{1}'' points to the configuration set object ''{2}''</entry>
    <entry key="UpdatecsrefConfigSetRefInfoBase">Configuration reference ''{0}'' points to the configuration set object ''{1}''</entry>
    <entry key="UpdatecsrefInvalidConfigSetRef1">, however ''{0}'' does not exist </entry>
    <entry key="UpdatecsrefInvalidConfigSetRef2">, however ''{0}'' is not a configuration set object</entry>
    <entry key="UpdatecsrefIntroduction">updatecsref is a script to update configuration reference. In R2008b, Stateflow\nsfun target settings have moved from Stateflow simulation target dialog box to\nconfiguration set Simulation Target parameters. If there are models sharing the\nsame configuration set object through configuration reference, updatecsref will\ncheck whether such models have the same Stateflow sfun target settings and move\nthese settings into the shared configuration set object.\n</entry>
    <entry key="UpdatecsrefNeedModelFiles">Please provide the list of model files that use configuration reference.\n</entry>
    <entry key="UpdatecsrefNeedCloseModelFiles">Please close the following model(s),</entry>
    <entry key="UpdatecsrefRequirements1">Before you run updatecsref, please\n1. Find the list of model files using configuration reference. If there are\n   models that do not use configuration reference, they will be ignored. For\n   models not included in this list, if they use configuration reference and\n   their Stateflow sfun target settings are not the same as those stored in the\n   shared configuration set object, there will be a warning when you load the\n   model.</entry>
    <entry key="UpdatecsrefRequirements2">2. If some models have already been updated without using updatecsref, please\n   make sure that the desired Stateflow sfun target settings are in the\n   Simulation Target parameters of the active configuration set.</entry>
    <entry key="UpdatecsrefRequirements3">3. Backup all model files in the list. Backup any MAT files or MATLAB files that\n   create shared configuration set objects in the base workspace.</entry>
    <entry key="UpdatecsrefRequirements4">4. Close all open model files.</entry>
    <entry key="UpdatecsrefRequirements5">5. Load shared configuration set objects into the base workspace. Objects\n  in data dictionaries can be omitted. Objects\n   automatically loaded with models can be omitted. However please put related\n   model names to the front of the model file list.</entry>
    <entry key="UpdatecsrefRequirements6">6. Provide the model file name list to updatecsref, such as\n      updatecsref(''mdlfilename1'',''mdlfilename2'',...)</entry>
    <entry key="UpdatecsrefRequirements7">7. Save the shared configuration set objects in the workspace back to the\n       configuration reference file.\n</entry>
    <entry key="UpdatecsrefUnknownFileName">File ''{0}'' does not exist.</entry>
    <entry key="UpdatecsrefLoadingModel">\nAnalyzing ''{0}''</entry>
    <entry key="UpdatecsrefUpdatingModel">\nUpdating ''{0}''</entry>
    <entry key="UpdatecsrefNoStateflow">Model ''{0}'' is ignored. It does not have Stateflow charts.</entry>
    <entry key="UpdatecsrefResolveDiffParam">\nPlease update your models and make them have the same value for each parameter above.</entry>
    <entry key="lbCannotRemoveLockFile">Internal Error: Unable to remove the lock file {0}</entry>
    <entry key="SimulationOutputWhoEmpty">Simulink.SimulationOutput object is empty</entry>
    <entry key="SimulationOutputWhoHeading">Contents of the Simulink.SimulationOutput object are:</entry>
    <entry key="SimulationOutputDispHeading">Simulink.SimulationOutput:</entry>
    <entry key="SimulationOutputDispGetNoLinks">Use ''get'' to access a variable by name.</entry>
    <entry key="SimulationOutputDispGet"><![CDATA[Use <a href="matlab: help {0}/get">get</a> to access a variable by name.]]></entry>
    <entry key="SimulationOutputArrDispHeading"> Simulink.SimulationOutput array:</entry>
    <entry key="SimulationOutputDispMetadata"><![CDATA[Use <a href="matlab: help {0}/getSimulationMetadata">getSimulationMetadata</a> to access metadata about the simulation.]]></entry>
    <entry key="SimulationOutputDispMetadataNoLinks">Use ''getSimulationMetadata'' to access metadata about the simulation.</entry>
    <entry key="SimulationOutputDispEmpty">    Empty</entry>
    <entry key="SimulationMetadataUserStringDatatypeMismatch">UserString needs to be of type char</entry>
    <entry key="RegRuleInvalidSignature" note="stringDatatypeUpdate">Invalid signature. The input argument ''{0}'' expects a cell array of character vectors.</entry>
    <entry key="RegRuleInvalidRuleSet">Invalid inheritance rules.</entry>
    <entry key="RegRuleInvalidChar">Rule ''{0}'' contains one of the following illegal characters '{' ''|'', '''{''', '''}''' '','' '}'.</entry>
    <entry key="RegRuleInvalidPrefix">Rule ''{0}'' does not start with ''Inherit: ''.</entry>
    <entry key="cpreprocessorUnsupportedPlatform">The current platform is not yet supported by cpreprocessor</entry>
    <entry key="cpreprocessorcppfailure">Failed to preprocess the input file.\n Output from cpreprocessor is:{0}</entry>
    <entry key="cpreprocessorcppoutput">Message from C preprocessor:\n{0}</entry>
    <entry key="cpreprocessorFileNotFound">Could not find file {0}.</entry>
    <entry key="lci_accesslegacywsInternalError">Internal error. Cannot find {0}</entry>
    <entry key="BaseWSVarInconsistentValueWithLegacyCode">The value of the variable ''{0}'' is different from the value in legacy code</entry>
    <entry key="DirectoryCreationFailure">Cannot create working directory under ''{0}''</entry>
    <entry key="FileCreationFailure">Cannot create file ''{0}'' in ''{1}''</entry>
    <entry key="InconsistentTargetWordSpec">Inconsistent target word length of C datatype(s)</entry>
    <entry key="InconsistentTargetWordLength">C type ''{0}'' is represented as {1,number,integer} bits in simulation and {2,number,integer} bits in target hardware.</entry>
    <entry key="LegacySymbolisReserved">Legacy symbol ''{0}'' is shadowed by the default definition of ''{1}'' in Simulink</entry>
    <entry key="CTypeNotSupported">C type of legacy symbol ''{0}'' is not supported in Simulink</entry>
    <entry key="CTypeWordLengthNotSupported">Simulink does not support the word length ({0,number,integer} bits) of legacy symbol {1}</entry>
    <entry key="LegacySymbolUnknownDimension">The dimension of ''{0}'' is unknown</entry>
    <entry key="LegacySymbolZeroDimension">A dimension of ''{0}'' has no element</entry>
    <entry key="InlineParamsOff">Inline Parameter must be on to integrate legacy symbols during code generation</entry>
    <entry key="LegacyDataTypeNameUsedByBaseWSVar">C data type {0} used by legacy symbol {1} is shadowed by a base workspace variable with the same name. It cannot show up in the block diagram as the type name of {2}.</entry>
    <entry key="CTypeNotSupportedHoweverUsedbyBaseWSVar">C type of legacy symbol ''{0}'' is not supported in Simulink. However the datatype of the corresponding object ''{1}'' is ''{2}''</entry>
    <entry key="CTypeWordLengthNotSupportedHoweverUsedbyBaseWSVar">Simulink does not support the word length ({0,number,integer} bits) of legacy symbol {1}. However the datatype of the corresponding object ''{2}'' is ''{3}''</entry>
    <entry key="WrongStorageClass">{0} is already defined in legacy code. However duplicate definition might be generated because the storage class of the object {1} is {2}. Please change the storage class to ImportedExtern, ImportedExternPointer or Custom</entry>
    <entry key="BaseWSVarWrongDatatype">Legacy symbol {0} should be of {1} in Simulink. However the datatype of the corresponding object {2} is {3}</entry>
    <entry key="FailtoGetSystemHeaderPath">Fail to identify path of system header files</entry>
    <entry key="ParserMessage">{0}</entry>
    <entry key="ObjectiveCustomizerInitializationFailure">Cannot initialize ObjectiveCustomizer. This is because Java is disabled. To successfully initialize ObjectiveCustomizer, restart MATLAB without the -nojvm startup option.</entry>
    <entry key="badCheckIDError">The ''{0}'' objective contains an invalid Model Advisor check ID (''{1}''). Specify a valid Model Advisor check ID and run sl_refresh_customizations. The file is located at: {2}.</entry>
    <entry key="badCheckIDErrorMsgBoxTitle">Error</entry>
    <entry key="PreDefinedCheckError">''{0}'' is a pre-defined check.\n</entry>
    <entry key="ExistingAdditionalCheckError">''{0}'' is an existing additional check.\n</entry>
    <entry key="multipleSLCustomizationFiles">Only one sl_customization.m is allowed for the objective customization API.\n</entry>
    <entry key="repeatedOrderError">''{0}'' and ''{1}'' has the same order: {2,number,integer}\n</entry>
    <entry key="invalidCSParameterError">''{0}'' is not a valid configuration parameter.\n</entry>
    <entry key="existedCSParameterError">''{0}'' is existed in the objective(''{1}'') already.\n</entry>
    <entry key="noNameSpecifiedCSParameterError">There is no name specified for the configuration parameter.\n</entry>
    <entry key="noValueSpecifiedCSParameterError">There is no value specified for the configuration parameter: ''{0}'' .\n</entry>
    <entry key="existedCheckError">''{0}'' is existed in the objective(''{1}'') already, with ''{2}'' association.\n</entry>
    <entry key="dependencyViolatedAbsentError">In the objective ''{0}'', the parameter ''{1}'' depends on ''{2}'', which has not been added. \n</entry>
    <entry key="dependencyViolatedWrongValueError">In the objective ''{0}'', the parameter ''{1}'' depends on ''{2}'', the value of which has not been set correctly. \n</entry>
    <entry key="noNameSpecifiedCheckError">There is no name specified for the check.\n</entry>
    <entry key="invalidBaseObjective">Objective ''{0}'' does not exist.\n</entry>
    <entry key="invalidBaseObjectiveAsCell">Cell array is not accepted as a base objective.\n</entry>
    <entry key="CSParameterNotExistedInBase">''{0}'' does not exist in the base objective: ''{1}''.\n</entry>
    <entry key="checkNotExistedInBase">''{0}'' does not exist in the base objective: ''{1}''.\n</entry>
    <entry key="noBaseError">''{0}'' doesn''t have any base objective.\n</entry>
    <entry key="duplicatedObjName">''{0}'' is a duplicated objective name, please choose a different one.\n</entry>
    <entry key="duplicatedObjID">''{0}'' is a duplicate objective ID. Specify a unique objective ID.\n</entry>
    <entry key="invalidObjectiveID">''{0}'' is an invalid objective ID. Valid characters are numbers, letters and ''_''.</entry>
    <entry key="invalidObjectiveName">Invalid objective name: ''{0}''. \nObjective names must start with a letter or ''_'', \nmust only contain letters, numbers, '' '' and ''_''.</entry>
    <entry key="disallowedCheck">''{0}'' is not allowed because it updates diagram not using the common Model Advisor utility.</entry>
    <entry key="noParamError">In the objective ''{0}'', there is no parameter defined.</entry>
    <entry key="badOutputArgumentName">Invalid argument name: ''{0}''. Specify ''-format'', ''-comments'' or ''-varname''.</entry>
    <entry key="badOutputFileName">Invalid output file name: ''{0}''. Output file names must start with a letter and can only contain letters, numbers, and ''_''.</entry>
    <entry key="badOutputFileNameDirectory">The directory(''{0}'') does not exist.</entry>
    <entry key="badOutputFileNameExtension">''{0}'' is not a valid extension, only ''.m'' is allowed.</entry>
    <entry key="badFileNameExtension">''{0}'' is not a valid extension, only ''.m'' and ''.mat'' are allowed.</entry>
    <entry key="badOutputRedundantArg">{0} is specified more than once.</entry>
    <entry key="badOutputConflict">''{0}'' is set to ''{1}'', therefore ''{2}'' cannot be set to ''{3}''.</entry>
    <entry key="badOutputVariableName">Invalid value for ''-varname'': ''{0}''. Specify a valid variable name.</entry>
    <entry key="badOutputFormat">Invalid value for ''-format'': ''{0}''. Specify ''MATLAB function'' or ''MATLAB script''.</entry>
    <entry key="badOutputComments">Invalid value for ''-comments'': ''{0}''. Specify ''on'' or ''off''.</entry>
    <entry key="badOutputUpdate">Invalid value for ''-update'': ''{0}''. Specify ''true'', or ''false''.</entry>
    <entry key="unwritableError">''{0}'' cannot be created successfully.</entry>
    <entry key="badVersion1">The first parameter is not a valid version number.</entry>
    <entry key="badVersion2">The second parameter is not a valid version number.</entry>
    <entry key="MFileParametersWithNoUI">Parameters that are not in the Configuration Parameters dialog box</entry>
    <entry key="MFileNotConfigSetError">Input param is not a valid Configuration Set.</entry>
    <entry key="MFileUnsuccessful">Error:</entry>
    <entry key="MFileVersionViolation">The version of the target configuration set is older than the original configuration set.</entry>
    <entry key="MFileTimestamp">MATLAB function for configuration set generated on</entry>
    <entry key="MFileVersion">MATLAB version:</entry>
    <entry key="MFileOrder1">Do not change the order of the following commands. There are dependencies between the parameters.</entry>
    <entry key="MFileOrder2">The following commands do not have dependencies.</entry>
    <entry key="MFileTargetSpecific">Following are the target specific parameters.</entry>
    <entry key="MFileOriginalConfigSetVersion">Original configuration set version</entry>
    <entry key="MFileOriginalEncoding">Original environment character encoding</entry>
    <entry key="MFileTargetEncoding">Target environment character encoding</entry>
    <entry key="MFileBridgeComponentNotSupported">Custom components not supported</entry>
    <entry key="MFileNotSupportforLib">Configuration set saveAs method is not supported for library.</entry>
    <entry key="MFilePane">pane</entry>
    <entry key="MFileGeneralPane">General</entry>
    <entry key="NoReferencedModel">The model ''{0}'' does not have any referenced models. </entry>
    <entry key="CSRefPropagationPBarTitle">Propagation to referenced models</entry>
    <entry key="CSRefPropagationPBarFindRMLabel">Finding referenced models</entry>
    <entry key="CSRefPropagationPBarModelLabel">Referenced model:</entry>
    <entry key="DifferentCharacterEncodingWarning">The target character encoding (%s) is different from the original (%s).</entry>
    <entry key="MFileDefaultToERT">Setting ''''System target file'''' to ''''ert.tlc''''.</entry>
    <entry key="FileAlreadyExists">The target character encoding ({0}) is different from the original ({1}).</entry>
    <entry key="CSVersionCompareWrongInput">wrong input</entry>
    <entry key="CSVersionCompareSameVersion">same version</entry>
    <entry key="CSVersionCompareEarlierVersion">earlier version</entry>
    <entry key="CSVersionCompareLaterVersion">later version</entry>
    <entry key="MATitletipFcnCallUsageCheck">Check model diagnostic settings that apply to function-call connectivity and that might impact model execution.</entry>
    <entry key="MATitleFcnCallUsageCheck">Check usage of function-call connections</entry>
    <entry key="MAFcnCallUsageCheckActionButtonName">Modify Settings</entry>
    <entry key="MAFcnCallUsageCheckActionDescription">Modify the diagnostic settings in the model configuration.</entry>
    <entry key="FcnCallUsageSubTitle1">Check ''Invalid function-call connection'' setting</entry>
    <entry key="FcnCallUsageSubTitle2">Check ''Context-dependent inputs'' setting</entry>
    <entry key="FcnCallUsageInfo1"><![CDATA[Verify that the <b>Invalid function-call connection</b> diagnostic is set to <tt>error</tt>.]]></entry>
    <entry key="FcnCallUsageInfo2"><![CDATA[Verify that the <b>Context-dependent inputs</b> diagnostic is set to <tt>error</tt>. ]]></entry>
    <entry key="FcnCallUsagePassMsg1"><![CDATA[<b>Diagnostics > Connectivity > Invalid function-call connection</b> is set to <tt>error</tt>.]]></entry>
    <entry key="FcnCallUsagePassMsg2"><![CDATA[<b>Diagnostics > Connectivity > Context-dependent inputs</b> is set to <tt>error</tt>.]]></entry>
    <entry key="FcnCallUsageFailMsg1"><![CDATA[<b>Diagnostics > Connectivity > Invalid function-call connection</b> is set to <tt>{0}</tt>. This might lead to non-deterministic model execution. Moreover, the <tt>warning</tt> option will be deprecated in a future release.]]></entry>
    <entry key="FcnCallUsageFailMsg2"><![CDATA[<b>Diagnostics > Connectivity > Context-dependent inputs</b> is set to <tt>{0}</tt>. This might lead to non-deterministic model execution.]]></entry>
    <entry key="FcnCallUsageRecAction"><![CDATA[Set {0} to <tt>error</tt>.]]></entry>
    <entry key="FcnCallUsageHyperLink1"><![CDATA[Diagnostics > Connectivity > Invalid function-call connection]]></entry>
    <entry key="FcnCallUsageHyperLink2"><![CDATA[Diagnostics > Connectivity > Context-dependent inputs]]></entry>
    <entry key="ParameterModified">Configuration parameters modified: </entry>
    <entry key="ParameterSetTo"> is set to </entry>
    <entry key="slVarStructInvalidNumInputs">Invalid number of input arguments.</entry>
    <entry key="slVarStructNonStructArgument">Variable ''{0}'' is not a structure.</entry>
    <entry key="slVarStructDuplicatedNodes">Duplicate leaf node names in structure ''{0}'':\n{1}</entry>
    <entry key="slPVInvalidNumPVInputs">Invalid number of input arguments for Parameter - Value pairs.</entry>
    <entry key="slPVNotStringPVInputs" note="stringDatatypeUpdate">Parameter - Value pairs should be the character vectors.</entry>
    <entry key="slPVUnrecognizedPInputs">Parameter ''{0}'' is not recognized.</entry>
    <entry key="slPVUnrecognizedVInputs">Parameter ''{0}'' does not accept value ''{1}''. Expected values: {2}.</entry>
    <entry key="slPVDuplicatedPInputs">Parameter ''{0}''is duplicated.</entry>
    <entry key="indexedGroupItems_InvalidN">The number of columns ''N'' passed to ''getIndexedGroupItems'' is not valid. The number of columns must be a positive integer.</entry>
    <entry key="indexedGroupItems_InvalidStretch">You cannot specify ''stretch'' as the first entry of a row. A row must start with either a valid widget or a ''blank''.</entry>
    <entry key="indexedGroupItems_InvalidOpt">In ''getIndexedGroupItems'', Simulink requires either ''blank'' or ''stretch''.</entry>

    <entry key="AdaSFunctionSupport"><![CDATA[The -ada option to mex is not recommended. Instead, use the method provided in <a href="http://www.mathworks.com/support/tech-notes/1800/1821.html">Tech Note 1821</a>, which includes a MATLAB function and interface files that provide the same capability.]]></entry>

    <entry key="Finder_NotEnoughInputs">Not enough input arguments.</entry>
    <entry key="Finder_RequiresJava">The Find dialog requires Java support.</entry>
    <entry key="Finder_SystemNotFound">System ''{0}'' does not exist.</entry>
    <entry key="Finder_FailedForSimulink">Find operation failed for Simulink objects.</entry>
    <entry key="Finder_FailedForStateflow">Find operation failed for Stateflow objects.</entry>
    <entry key="Finder_HandleNotFound">The selected object could not be found.
    This can happen if you close or edit models after running a search.  You
    will need to rerun the search to enable the object to be found.</entry>
    
  <!--Resource entries for toolbox/simulink-->
    <entry key="translationFilesNotFound">Could not find translation files for save-as.</entry>
    <entry key="cannotOpenFile">Error while saving. The file ''{0}'' could not be opened.</entry>
    <entry key="evalFileFailed">Error evaluating ''{0}''. Error Message: {1}</entry>
    <entry key="ModelVarStructNoChangesApplied">No changes applied to model ''{0}''</entry>
    <entry key="ParserConfig">A ''Selected'' compiler was not found.  You may need to run mex -setup.</entry>
    <!-- Dependency viewer -->
    <entry key="DependencyViewerParseError">findDependencies: Unable to parse the ''{0}'' parameter. Please ensure it is a {1}.</entry>
    
    <entry key="ccOpenTopOf">Top of {0}</entry>
    <entry key="ccOpenBottomOf">Bottom of {0}</entry>
    <entry key="ccOpenDeclarationCode">{0} Declaration Code</entry>
    <entry key="ccOpenExecutionCode">{0} Execution Code</entry>
    <entry key="ccOpenExitCode">{0} Exit Code</entry>
    <entry key="ccOpenCustomCode">{0} Custom Code</entry>
    <entry key="connectionAndTriggeringMsg">Connection and triggering</entry>
    <entry key="floatingScopeMsg">Floating scope</entry>
    <entry key="enableUpload">Enable data uploading</entry>
    <entry key="durationLabel">Duration</entry>
    <entry key="parameterTuningLabel">Parameter tuning</entry>
    <entry key="configurationLabel">Configuration</entry>
    <entry key="externalModeCtrlPanel">External Mode Control Panel</entry>
    <entry key="externalDataArchiving">External Data Archiving</entry>
    <entry key="editFileNote">Edit File Note</entry>    
    
    <!-- Model Advisor checks related to SLX files -->
    <entry key="UpgradeToSLXTaskName">Check that the model is saved in SLX format </entry>
    <entry key="UpgradeToSLXTaskDescription">Check that the model is saved in SLX format.</entry>
    <entry key="UpgradeToSLXActionDescription">Save this model in a file with extension ".slx"</entry>
    <entry key="UpgradeToSLXActionName">Save in SLX Format</entry>
    <entry key="UpgradeToSLXPassStatus">Model {0} is saved in an SLX file: {1}</entry>
    <entry key="UpgradeToSLXFailStatus">Model {0} is saved in an MDL file: {1}</entry>
    <entry key="UpgradeToSLXRecommendedAction"><![CDATA[Save model {0} in a file with extension ".slx".  The button below
will save it in file:<br>&nbsp;&nbsp;{1}.<br>To choose a different name or location, use the "Save As..." menu item in the
Simulink Editor.]]></entry>
    <entry key="UpgradeToSLXFixMessage"><![CDATA[The model has been saved in file:<br>&nbsp;&nbsp;{0}]]></entry>
    <entry key="UpgradeToSLXFixBackup"><![CDATA[The original file was renamed to:<br>&nbsp;&nbsp;{0}]]></entry>

    <entry key="SLXEncodingCheckName">Check model for foreign characters</entry>
    <entry key="SLXEncodingCheckDescription">Check that the characters in the model can be represented in the current encoding.</entry>
    <entry key="SLXEncodingActionDescription">Change the current character encoding to one that is compatible with the contents of the model</entry>
    <entry key="SLXEncodingActionName">Change Encoding</entry>
    <entry key="SLXEncodingPassStatus">All the characters in the model can be represented in the current encoding.</entry>
    <entry key="SLXEncodingFailStatus"><![CDATA[There are characters in the model that cannot be represented in the current encoding.<br><br><b>Details</b><br>{0}]]></entry>
    <entry key="SLXEncodingRecommendChangeEncoding"><![CDATA[The model was last saved in a Simulink session using encoding ''{0}'', which is not the same as the current encoding.
    Try setting the current encoding to ''{1}'' and re-running this check.  To do this, close all models and run the
    following MATLAB command:<pre>  slCharacterEncoding(''{2}'');</pre>Note that doing this will cause the
    Model Advisor to close, and that you will need to make the same change again each time you restart MATLAB.]]></entry>
    <entry key="SLXEncodingRecommendDeletingCharacters">Find these characters in the model and remove them.</entry>
    <entry key="SLXEncodingFixMessage">The ''CharacterEncoding'' parameter for this session is now ''{0}''.  Now rerun this check so see whether all characters in the model
    are compatible with this encoding.</entry>
    
    <entry key="ModelAdvisorFileIntegrityTaskTitle">Simulink Model File Integrity</entry>
    <entry key="ModelAdvisorFileIntegrityTaskTitleTips">Checks to help ensure file integrity.</entry>

    <!-- Check for edited model history properties  -->
    <entry key="SLXModelPropertyTaskTitle">Check Model History properties</entry>
    <entry key="SLXModelPropertyTaskModifyActionName">Reset Properties</entry>
    <entry key="SLXModelPropertyTaskModifyActionDesc">Replace model history properties with their default values</entry>
    <entry key="SLXModelPropertyTaskDisplayName">Check models for edited Model History property values</entry>
    <entry key="SLXModelPropertyTaskDescription">Check models for edited Model History property values that could be used with source control tool
    keyword substitution. This keyword substitution is incompatible with SLX file format.</entry>
    <entry key="SLXModelPropertyTaskInfo">Check that parameters in the Model Properties dialog History pane use the default tags 
    
    In the MDL file format you can configure some model properties to make use of source control tool keyword substitution.
    
    If you save your model in SLX format, source control tools cannot perform keyword substitution. Any information in the model
    file from such keyword substitution is cached when you first save the MDL file as SLX, and is never
    updated again. The Model Properties History pane and any Model Info blocks in your model show stale information from then on.</entry>
    <entry key="SLXModelPropertySuccessOne">This model uses the default value for property {0}.</entry>
    <entry key="SLXModelPropertyFailOne">The property {0} in this model has value of "{1}". The default value is "{2}"</entry>
    <entry key="SLXModelPropertyRecAction">Click the Reset Properties button to reset these properties to the default values.
    To inspect and change these properties manually, go to the Model Properties dialog. Select Model Properties from the
    Simulink editor File menu, and look in the History pane.</entry>
    <entry key="SLXModelPropertyRecWorked">Set the property {0} to the default value, {1}</entry>
    <entry key="SLXModelPropertyRecFailed">Failed to set the property {0}:</entry>

    <!-- Model Info block Configuration Manager upgrade advisor checks -->
    <entry key="ModelInfoConfigurationManagerTaskTitle">Identify Model Info blocks that use the Configuration Manager</entry>
    <entry key="ModelInfoConfigurationManagerTaskDescription">Identify Model Info blocks that use the Configuration Manager for keyword substitution using
        external source control tools. This can corrupt models.</entry>
    <entry key="ModelInfoConfigurationManagerCMTitle">Check the model does not use the Configuration Manager</entry>
    <entry key="ModelInfoConfigurationManagerCMDescription">The Configuration Manager
        for the Model Info block will be removed in a future release. This model currently has it set to ''{0}''.</entry>
    <entry key="ModelInfoConfigurationManagerCMTagsTitle">Check the Model Info block ''{0}'' does not use the Configuration Manager</entry>
    <entry key="ModelInfoConfigurationManagerCMTagsDescription"><![CDATA[The Model Info block is using the Configuration Manager. This allows external source
        control tools to overwrite the MDL file using keyword substitution. The keyword tags used are:<br/>{0}<br/>Keyword substitution is not recommended because it can corrupt models.
        Remove the Configuration Manager.]]></entry>
    <entry key="ModelInfoConfigurationManagerActionTitle">Remove the Configuration Manager</entry>
    <entry key="ModelInfoConfigurationManagerActionDescription">Remove the Configuration Manager from the model.</entry>
    <entry key="ModelInfoConfigurationManagerActionRemoved">The Configuration Manager has been removed from the model.</entry>

    <entry key="ModelInfoKeywordSubstitutionTaskTitle">Identify Model Info blocks that can interact with external source control tools</entry>
    <entry key="ModelInfoKeywordSubstitutionTaskDescription" note="stringDatatypeUpdate">Identify Model Info blocks that can be altered by external source control tools
        through keyword substitution. This can only occur with models in the MDL format. This check searches for character vectors in the Model Info block
        enclosed within dollar signs that can be overwritten by an external source control tool. Keyword substitution is not recommended because it can corrupt models.
        </entry>
    <entry key="ModelInfoKeywordSubstitutionBlockTitle">Found a Model Info block: ''{0}''</entry>
    <entry key="ModelInfoKeywordSubstitutionKWSDescription"><![CDATA[The Model Info block contains fields that could potentially allow an external source
        control tool to overwrite the MDL file using keyword substitution. Keyword substitution is not recommended because it can corrupt models. The fields are:<br/>{0}<br/>]]></entry>

    <entry key="CGFESecondArgNotAString" note="stringDatatypeUpdate">The second input argument must be a character vector.</entry>
    <entry key="CGFEThirdArgNotAString" note="stringDatatypeUpdate">The third input argument must be a character vector.</entry>
    <entry key="CGFESecondAndThirdArgNotAString" note="stringDatatypeUpdate">The second and third input arguments must be a character vector.</entry>
    <entry key="CGFESecondArgNotAClassOf">The second input argument must be a {0} object.</entry>
    <entry key="CGFEPropertyValueNotInSet">The value of the property ''{0}'' does not belong to the set of permitted values.</entry>
    <entry key="CGFEPropertyValueNotUInt32">The value of the property ''{0}'' must fit within an uint32.</entry>
    <entry key="CGFEPropertyValueNotInt32">The value of the property ''{0}'' must fit within an int32.</entry>
    <entry key="CGFEPropertyValueNotBool">The value of the property ''{0}'' must be a logical data type.</entry>
    <entry key="CGFEPropertyValueNotString" note="stringDatatypeUpdate">The value of the property ''{0}'' must be a character vector.</entry>
    <entry key="CGFEPropertyValueNotEnumString" note="stringDatatypeUpdate">The value of the property ''{0}'' must be a character vector corresponding to an enumerated value.</entry>
    <entry key="CGFEPropertyValueNotClassOf">The value of the property ''{0}'' must belong to the class ''{1}''.</entry>
    <entry key="CGFEPropertyValueNotCellStr" note="stringDatatypeUpdate">The value of the property ''{0}'' must be a cell of character vectors.</entry>
    <entry key="FENoMexCompilerForLang">No mex compiler configured for the ''{0}'' language. To specify a compiler, run the command "mex -setup".</entry>
    <entry key="CodeGenAdvisor">Code Generation &amp;Advisor</entry>
    <entry key="CodeGenAdvisorTab">Code Generation Advisor</entry>
    <entry key="CodeGenAdvisorForSubSystem">Code Generation &amp;Advisor</entry>    
    <entry key="CGACheckObj"><![CDATA[<b>Current Objectives:</b> <font color="#0000FF">{0}</font><br> The code generation objectives differ from the objectives set in the model ({1}). Click the ''Modify Parameters'' button to store the current objectives in the model.]]></entry>
    <entry key="CGACheckObjEqual"><![CDATA[<b>Current Objectives:</b> <font color="#0000FF">{0}</font><br>]]></entry>
    <entry key="CGAReport">Code Generation Advisor Report</entry>

     <!-- Blocks using MaskTabNames for tab creation on dialog -->
    <entry key="MATitleOldMaskTabnamesConversion">Identify masked blocks that specify tabs in mask dialog using MaskTabNames parameter</entry>
    <entry key="MATitletipOldMaskTabnamesConversion">Identify masked blocks that use the MaskTabNames parameter to programmatically create tabs in the mask dialog. Since R2013b, dialog controls are used to group parameters in a tab on the mask dialog.</entry>
    <entry key="MALogNoOldMaskTabnamesConversionRequired">No masked block found that uses MaskTabNames to create tabs in the mask dialog.</entry>
    <entry key="MALogUpgradeOldMaskTabnamesConversion">The following blocks use the MaskTabNames parameter. Click ''{0}'' to convert these blocks to use dialog controls for tabs.</entry>
    <entry key="MAUpgradeButtonOldMaskTabnamesConversion">Upgrade</entry>
    <entry key="MAActionOldMaskTabnamesConversion">Upgrades masked blocks that use MaskTabNames to create tabs in mask dialog.</entry>
    <entry key="MALogOldMaskTabnamesConversionDone">The following masked blocks were successfully upgraded to use tab dialog controls. Save changes and rerun the check.</entry>      
    <entry key="MAConvert">Convert</entry>

    <entry key="MAUnitInconsTaskTitle">Units Inconsistencies</entry>  
    <entry key="MAUnitInconsTaskTitleTips">Perform Units Inconsistency checks</entry>  
    <entry key="MAUnitInconsOutPortStr">Output port</entry>
    <entry key="MAUnitInconsInPortStr">Input port</entry>
    <entry key="MAUnitsInconsDst1Units">Source 1 Unit</entry>
    <entry key="MAUnitsInconsDst2Units">Source 2 Unit</entry>
    <entry key="MAUnitsInconsBusObjUnits">Bus Element Unit</entry>
    <entry key="MAUnitsInconsSrcUnits">Source Unit</entry>
    <entry key="MAUnitsInconsDstUnits">Destination Unit</entry>


    <entry key="MATitleIdentUnitMismatchPairs">Identify unit mismatches in the model</entry>
    <entry key="MATitletipIdentUnitMismatchPairs">Identify the block pairs with unit mismatches in the model.</entry>
    <entry key="MAInfoIdentUnitMismatchPairs">Check for unit mismatches in the model.</entry>
    <entry key="MARawTitleIdentUnitMismatchPairs">Check Unit Mismatches</entry>
    <entry key="MAFailIdentUnitMismatchPairsSingular">One unit mismatch found.</entry>
    <entry key="MAFailIdentUnitMismatchPairs">{0,number,integer} unit mismatches found.</entry>
    <entry key="MAPassIdentUnitMismatchPairs">No unit mismatches found.</entry>
    <entry key="MADetailUnitMismatchPairs">For details about the unit mismatches that could not be resolved with a simple unit conversion, see the table:</entry>
    <entry key="MAcol1UnitMismatchPairs">Source</entry>
    <entry key="MAcol2UnitMismatchPairs">Destination</entry>
    <entry key="MAcol5UnitMismatchPairs">Type of Mismatch</entry>
    <entry key="MADetailUnitMismatchBus">For details about unit mismatches with incoming buses, see the table:</entry>
    <entry key="MAcol1UnitBusMismatchPairs">Block</entry>
    <entry key="MAcol2UnitBusMismatchPairs">Source 1</entry>
    <entry key="MAcol3UnitBusMismatchPairs">Source 2</entry>
    <entry key="MADetailUnitMismatchBusObj">For details about unit mismatches with bus objects, see the table:</entry>
    <entry key="MAcol1UnitBusObjMismatchPairs">Block</entry>
    <entry key="MAcol2UnitBusObjMismatchPairs">Bus Element</entry>
    <entry key="MAcol3UnitBusObjMismatchPairs">Bus Object</entry>

    <entry key="MAcol1UnitLoadingMismatchPairs">Mismatch Location</entry>
    <entry key="MAcol2UnitLoadingMismatchPairs">Specified Unit</entry>
    <entry key="MAcol3UnitLoadingMismatchPairs">Data Unit</entry>
    <entry key="MADetailUnitMismatchLoading">For details about the unit mismatches detected while loading external data, see the table:</entry>

    <entry key="MATitleIdentUnitAutoConv">Identify automatic unit conversions in the model</entry>
    <entry key="MATitletipIdentUnitAutoConv">Identify automatic unit conversions inserted in the model.</entry>
    <entry key="MAInfoIdentUnitAutoConv">Check for automatic unit conversions.</entry>
    <entry key="MARawTitleIdentUnitAutoConv">Check Automatic Unit Conversions</entry>
    <entry key="MAWarnIdentUnitAutoConvSingular">Automatic unit conversions inserted between one component pair. For details, see the table:</entry>
    <entry key="MAWarnIdentUnitAutoConv">Automatic unit conversions inserted between {0,number,integer} component pairs. For details, see the table:</entry>
    <entry key="MAPassIdentUnitAutoConv">No automatic unit conversions found.</entry>
    <entry key="MACol1UnitAutoConv">Conversion Location</entry>
    <entry key="MACol4UnitAutoConv">Additional Message</entry>
    <entry key="MADetailUnitAutoConvUnsuccessful">For details about the locations of unsuccessful unit mismatches, see the following table. To resolve these mismatches, add a Unit Conversion block.</entry>
    <entry key="MACol1UnitAutoConvUnsuccessful">Conversion Attempted At</entry>
    <entry key="MACol1UnitAutoConvUnsuccessfulReason">Reason</entry>
    


    <entry key="MATitleIdentDisallowUnitSys">Identify disallowed unit systems in the model</entry>
    <entry key="MATitletipIdentDisallowUnitSys">Identify usage of Disallowed Unit Systems in the model.</entry>
    <entry key="MAInfoIdentDisallowUnitSys">Check for disallowed unit systems.</entry>
    <entry key="MARawTitleIdentDisallowUnitSys">Check Disallowed Unit Systems</entry>
    <entry key="MAWarnIdentDisallowUnitSysSingular">Disallowed unit systems found in one location.</entry>
    <entry key="MAWarnIdentDisallowUnitSys">Disallowed unit systems found in {0,number,integer} locations.</entry>
    <entry key="MAPassIdentDisallowUnitSys">No disallowed unit systems were found.</entry>
    <entry key="MADetailDisallowUnitSysInBlocks">For details about the use of disallowed unit systems in blocks within the model, see the table:</entry>
    <entry key="MACol1DisallowUnitSys">Usage Location</entry>
    <entry key="MACol2DisallowUnitSys">Units Used</entry>
    <entry key="MACol3DisallowUnitSys">Allowed Unit Systems</entry>
    <entry key="MADetailDisallowUnitSysInParamObjs">For details about the use of disallowed unit systems in objects referenced by block parameters, see the table:</entry>
    <entry key="MACol1DisallowUnitSysParamObj">Usage Location</entry>
    <entry key="MACol2DisallowUnitSysParamObj">Units Used</entry>
    <entry key="MACol3DisallowUnitSysParamObj">Allowed Unit Systems</entry>
    <entry key="MACol4DisallowUnitSysParamObj">Referenced by Block Parameter</entry>
    <entry key="MACol5DisallowUnitSysParamObj">Object Type</entry>
    <entry key="MACol6DisallowUnitSysParamObj">Object Name</entry>
    <entry key="MADetailDisallowUnitSysInSignalObjs">For details about the use of disallowed unit systems in Simulink.Signal objects within the model, see the table:</entry>
    <entry key="MACol1DisallowUnitSysSignalObj">Usage Location</entry>
    <entry key="MACol2DisallowUnitSysSignalObj">Units Used</entry>
    <entry key="MACol3DisallowUnitSysSignalObj">Allowed Unit Systems</entry>
    <entry key="MACol4DisallowUnitSysSignalObj">Signal Object</entry>


    <entry key="MATitleIdentUndefinedUnits">Identify undefined units in the model</entry>
    <entry key="MATitletipIdentUndefinedUnits">Identify usage of undefined units.</entry>
    <entry key="MAInfoIdentUndefinedUnits">Check for undefined units.</entry>
    <entry key="MARawTitleIdentUndefinedUnits">Check Undefined Units.</entry>
    <entry key="MAWarnIdentUndefinedUnitsSingular">Undefined units found in one location.</entry>
    <entry key="MAWarnIdentUndefinedUnits">Undefined units found in {0,number,integer} locations.</entry>
    <entry key="MADetailUndefinedUnitsInBlocks">For details about use of undefined units in blocks within the model, see the table below. Consider replacing the specified unit with the one provided under the 'Suggestion' column.</entry>
    <entry key="MAPassIdentUndefinedUnits">No undefined units were found.</entry>
    <entry key="MACol1UndefinedUnits">Unit Used</entry>
    <entry key="MACol2UndefinedUnits">Block</entry>
    <entry key="MASuggColUndefinedUnits">Suggestion</entry>
    <entry key="MADetailUndefinedUnitsInObjs">For details about use of undefined units in objects referenced by the model, see the table below. Consider replacing the specified unit with the one provided under the 'Suggestion' column.</entry>
    <entry key="MACol1UndefinedUnitsInObjs">Unit Used</entry>
    <entry key="MACol2UndefinedUnitsInObjs">Usage Location</entry>
    <entry key="MACol3UndefinedUnitsInObjs">Object Type</entry>
    <entry key="MACol4UndefinedUnitsInObjs">Object Name</entry>
    <entry key="MACol1IncompatibleSimscapeUnits">Simscape Unit Used</entry>
    <entry key="MACol2IncompatibleSimscapeUnits">Block</entry>
    <entry key="MADetailIncompatibleSimscapeUnits">For details about use of Simscape units incompatible with Simulink Units referenced by the model, see the table:</entry>
    <entry key="UnitsBadgeDescriptionTitle">For more details, see</entry>
    <entry key="UnitsMismatchFixSuggestionRow1">Suggested actions (perform one of):</entry>
    <entry key="UnitsMismatchFixSuggestionRow2Col1">1) Modify source unit</entry>
    <entry key="UnitsMismatchFixSuggestionRow2Col2">Go to source</entry>
    <entry key="UnitsMismatchFixSuggestionRow3Col1">2) Modify destination unit</entry>
    <entry key="UnitsMismatchFixSuggestionRow3Col2">Go to destination</entry>

    <entry key="ErrorApplyingHotParamTitle">Error</entry>
  </message>
</rsccat>

<!-- LocalWords:  tunability tunability TCP SLIST XPERT IU IY Tmp CMEX func
     LocalWords:  evenspace Qy Qu Unlogged slprofile sfun updatecsref Prelookup
     LocalWords:  nupdatecsref nsfun mdlfilename Customizer cpreprocessor nojvm
     LocalWords:  varname ada Prequalifying subchecks DMatrix overwritable
     LocalWords:  recompiles Multicore
-->
