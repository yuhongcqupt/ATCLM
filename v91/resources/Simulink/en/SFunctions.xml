<?xml version="1.0" encoding="UTF-8" ?>
<!-- Copyright 2009-2014 The MathWorks, Inc. -->
<rsccat version="1.0" locale="en_US" product="Simulink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../matlab/resources/schema/msgcat.xsd">
  <message>
    <entry key="AccessElapseTimeBfSetNeedElapseTime">S-function of ''{0}'' accesses owner subsystem elapse time. S-function must add ssSetNeedElapseTime(S,true) in its mdlInitializeSize function</entry>
    <entry key="BackCompatLevel1SFcns">S-function ''{0}'' in ''{1}'' is a Level-1 S-function. It is recommended that this S-function be upgraded to a Level-2 S-function. This compatibility diagnostic on the need for S-function upgrades can be set to none, warning, or error using the Configuration Parameters dialog</entry>
    <entry key="BackCompatSfcnNoRunTimePrms">S-function ''{0}'' in ''{1}'' does not explicitly set the number of run-time parameters using ssSetNumRunTimeParams. This compatibility diagnostic on the need for S-function upgrades can be set to none, warning, or error using the Configuration Parameters dialog</entry>
    <entry key="BackCompatSfcnParamTunableNotSet">S-function ''{0}'' in ''{1}'' does not explicitly set the tunable property of all parameters using ssSetSFcnParamTunable. This compatibility diagnostic on the need for S-function upgrades can be set to none, warning, or error using the Configuration Parameters dialog</entry>
    <entry key="BackCompatSfcnUsingSSWritePrms">S-function ''{0}'' in ''{1}'' is using ssWriteRTWParameters. It is recommended that the S-function be upgraded to utilize the run-time parameter handling mechanism in Simulink. This compatibility diagnostic on the need for S-function upgrades can be set to none, warning, or error using the Configuration Parameters dialog</entry>
    <entry key="CMexSFcnExecutionErr">Error in ''{0}'' while executing C MEX S-function ''{1}'', ({2}), at time {3}.</entry>
    <entry key="CMexSFcnTerminateErr">Error in ''{0}'' while executing C MEX S-function ''{1}'', (mdlTerminate).</entry>
    <entry key="CannotChangeNumParams">Cannot change the number of parameters in a comma separated list during simulation.  The original number of parameters for block ''{0}'' was {1,number,integer} and the number in the comma separated list is {2,number,integer}</entry>
    <entry key="CannotChangeNumRTP">Cannot change number of run-time parameters of S-function ''{0}'' in ''{1}''. It is already set to have {2,number,integer} run-time parameters</entry>
    <entry key="CannotRegRunTimeParams">Cannot register run-time parameters of S-function ''{0}'' in ''{1}'' from current location. The registration of run-time parameters can be performed only within ''mdlSetWorkWidths''</entry>
    <entry key="CannotResetRTP">Attempting to set info for run-time parameter {0,number,integer} of S-function ''{1}'' in ''{2}'' more than once. The S-function can set the param info only once in ''mdlSetWorkWidths''</entry>
    <entry key="CannotUpdateNullRTP">Attempting to update info for run-time parameter {0,number,integer} of S-function ''{1}'' in ''{2}'' even though the run-time parameter was never set up initially</entry>
    <entry key="CannotUpdateRunTimeParams">Cannot update run-time parameters of S-function ''{0}'' in ''{1}'' from current location. Run-time parameters can be updated only within ''mdlProcessParameters''</entry>
    <entry key="ContinuousStateChangeWithoutSolverReset">Simulink detected that S-function ''{0}'' changed the value of one or more elements of its continuous state vector without resetting the ODE solver at time {1}.  Continuous states should only be changed in a major time step and the S-function should request a solver reset using 'ssSetSolverNeedsReset' macro. Changing states without resetting the solver can lead to unexpected results, especially in accelerated simulation modes. Use 'ssSetSkipContStatesConsistencyCheck(S,1)' in mdlInitializeSizes method to disable this check once you have fixed your S-function.</entry>
    <entry key="DWorkWithPaddingHasConstraints">The block ''{0}'' uses dwork bitfields in an unsupported manner. Bitfields can only be specified for scalar, real dworks of unsigned data type</entry>
    <entry key="FMexSFcnExecutionErr">Error in ''{0}'' while executing FORTRAN MEX S-function ''{1}'', flag = {2,number,integer} ({3}), at time {4}.</entry>
    <entry key="IncorrectRTPRegistration">In S-function ''{0}'', dialog parameter {1,number,integer} has not been utilized to create any run-time parameter even though it was declared to be tunable. Each tunable dialog parameter must appear in the ''dlgParamIndices'' field of at least one run-time parameter</entry>
    <entry key="InvDataTypeForOutputAsBus">Error in output port specification for S-function {0}. This S-function specifies that the bus object ''{1}'' is associated with its output port {2,number,integer}, yet the data type of that port is ''{3}'' instead</entry>
    <entry key="InvDerivsVect">State derivatives returned by S-function ''{0}'' in ''{1}'' during flag={2,number,integer} call must be a real vector of length {3,number,integer}</entry>
    <entry key="InvDiscStateVect">Discrete state(s) returned by S-function ''{0}'' in ''{1}'' during flag={2,number,integer} call must be a real vector of length {3,number,integer}</entry>
    <entry key="InvFMexX0Len">X0 returned by FORTRAN MEX S-function ''{0}'' in ''{1}'' must be a vector of length {2,number,integer}</entry>
    <entry key="InvFMexX0Vect">Invalid X0 vector returned by FORTRAN MEX S-function ''{0}'' in ''{1}''</entry>
    <entry key="InvMFileSFcnPCnt">Error, MATLAB S-function ''{0}'' in ''{1}'' is expecting {2,number,integer} parameter(s) while {3,number,integer} were provided</entry>
    <entry key="InvMFileSFcnSyntax">The specified MATLAB File ''{0}'' in ''{1}'' is not a valid Level 1 S-Function. The number of input and/or output arguments is not valid. A likely cause for this error is that the name of a level-2 MATLAB S-function has been specified in this block (which supports only level-1 MATLAB S-functions). Use the ''Level-2 MATLAB S-Function'' block from the Simulink library</entry>
    <entry key="InvMFileSizesVec">Sizes vector returned by MATLAB S-function ''{0}'' in ''{1}'' must be a real vector consisting of integer value of length {2,number,integer}</entry>
    <entry key="InvMFileX0Len">X0 returned by MATLAB S-function ''{0}'' in ''{1}'' must be a vector of length {2,number,integer}</entry>
    <entry key="InvMFileX0Vect">Invalid X0 vector returned by MATLAB S-function ''{0}'' in ''{1}''</entry>
    <entry key="InvMexSizesVect">Invalid sizes vector returned by MEX S-function ''{0}'' in ''{1}''</entry>
    <entry key="InvOutputVect">Output returned by S-function ''{0}'' in ''{1}'' during flag={2,number,integer} call must be a real vector of length {3,number,integer}</entry>
    <entry key="InvalidCondInputId">Invalid setting has been used by S-function ''{0}'' for input port {1,number,integer} in ssSetInputPortSignalWhenNeeded. Simulink assumes that the input signal is always needed by the S-function</entry>
    <entry key="InvalidCondOutputId">Invalid setting has been used by S-function ''{0}'' for output port {1,number,integer} in ssSetOutputPortSignalWhenRefreshed. Simulink assumes that the output signal is always refreshed by the S-function</entry>
    <entry key="MFileArgCountErr">Error getting arg counts for S-function ''{0}'' in ''{1}''.</entry>
    <entry key="MFileInitErr">Error in ''{0}'' while executing MATLAB S-function ''{1}'', flag = {2,number,integer} ({3}), at start of simulation.</entry>
    <entry key="MFileSFcnExecutionErr">Error in ''{0}'' while executing MATLAB S-function ''{1}'', flag = {2,number,integer} ({3}), at time {4}.</entry>
    <entry key="MexAlignmentErr">Unable to execute C MEX S-function ''{0}''.  S-function ''{1}'' appears to have been built with incorrect structure alignment compiler options.  Please verify that the correct structure alignment  compiler options are specified and recompile the S-function (see the mex command for details)</entry>
    <entry key="MexSFcnSizesInitErr">Error while obtaining sizes from MEX S-function ''{0}'' in ''{1}''.</entry>
    <entry key="NegNumRunTimeParams">Invalid number of run-time parameters specified for S-function ''{0}'' in ''{1}''.  The number of run-time parameters is specified to be negative</entry>
    <entry key="NoBdSFcnSupport">Error, a block diagram was specified in S-function ''{0}''. Please make sure your S-function name is not a Simulink model or the name of the current model. You can use the Matlab command ''which -all sfunction_name'' to locate all occurrences of model files with the name sfunction_name</entry>
    <entry key="NoCinidForNonInlineSfunInAccel">S-function ''{0}'' cannot conditionally execute its input signal for input port {1,number,integer} since it is not inlined for accelerator mode.  To enable an S-function to conditionally execute its input signals in accelerator mode, set S-function option SS_OPTION_USE_TLC_WITH_ACCELERATOR</entry>
    <entry key="NoCoutidForNonInlineSfunInAccel">S-function ''{0}'' cannot conditionally execute its output signal for output port {1,number,integer} since it is not inlined for accelerator mode.  To enable an S-function to conditionally execute its output signals in accelerator mode, set S-function option SS_OPTION_USE_TLC_WITH_ACCELERATOR</entry>
    <entry key="NoSuchRTP">Cannot set info for run-time parameter {0,number,integer} of S-function ''{1}'' in ''{2}''. The S-function has {3,number,integer} run-time parameters</entry>
    <entry key="NoSupportForOPortWithMixedFcnCallAndData"><![CDATA[In the next release, Simulink will not support output ports with mixed function-call and data elements. The first output port of ''{0}'' is configured to have mixed function-call and data elements. Please use an additional output port and split the function-call and data elements. For an example see sfun_fcncall.c in <matlabroot>/simulink/src directory]]></entry>
    <entry key="NoninlinedSFcnBlkParamMustBeDoubleOrChar">S-function ''{0}'' parameters must be of type double or char if the S-function does not have TLC</entry>
    <entry key="NoninlinedSFcnBlkParamMustBeReal">S-function ''{0}'' parameters must be non-complex numeric arrays if the S-function does not have TLC</entry>
    <entry key="NormalModeModelRefSignalNotFound">The Signal Viewer Floating Scope can not display signals contained in models referenced in Normal mode. The signal with path ''{0}'' and port index {1,number,integer} is contained in a model referenced in Normal mode from ''{2}''</entry>
    <entry key="OnlyBlkTsIsTrigCanAccessElapseTime">Only block whose sample time is triggered need access owner subsystem''s elapse time. S-function of ''{0}'' accesses owner subsystem elapse time, but its sample time is not triggered.</entry>
    <entry key="OnlyBlkInSingleRateSysCanAccessElapseTime">Only block in a single rate owner subsystem can access elapsed time. S-function of ''{0}'' accesses elapse time, but it is not in a single rate subsystem. </entry>
   <entry key="OnlyBlkInRootAccessElapseTimeInSingleRateModel">Only block in a single rate model can access elapsed time when the block is in root system. S-function of ''{0}'' accesses elapse time, but the model has more than one rate.</entry>
    <entry key="OverwriteInputPortNotSupportedLvlOneSfcn">ssSetOutputPortOverwritesInputPort is not supported in Level 1 S-function ''{0}''</entry>
    <entry key="OverwriteNonOverwritableInputPort">Output port {0,number,integer} of S-function ''{1}'' cannot overwrite input port {2,number,integer} since this input port is not overwritable. Please use ssSetInputPortOverwritable to set input port {3,number,integer} to be overwritable</entry>
    <entry key="PILSignalNotFound">Cannot log signal with path ''{0}'' and port index {1,number,integer} in ''{2}'' because it is configured for SIL or PIL simulation mode</entry>
    <entry key="PositiveDataAlignment">Invalid data alignment specified for S-function ''{0}'' in ''{1}''.  The data alignment attribute must be a non-zero positive integer</entry>
    <entry key="RTPOnlyIfInlined">Invalid run-time parameter registration in S-function ''{0}''. It can register run-time parameters only if the S-function is being inlined</entry>
    <entry key="RTWSFcnGlobalDSM">The S-function ''{0}'' was generated from a subsystem or model that contains Data Store Read or Write blocks referencing global data store memory.  Code generation is not supported for such S-functions</entry>
    <entry key="RTWSFcnSubsysDSM">The S-function ''{0}'' was generated from a subsystem that contains Data Store Read or Write blocks corresponding to Data Store Memory blocks that are placed outside the subsystem. Code generation is not supported for such S-functions</entry>
    <entry key="RecompileMex">Unable to execute C MEX S-function ''{0}''.  S-function ''{1}'' appears to have been built with an old version of simstruc.h and needs to be recompiled (see the mex command for details)</entry>
    <entry key="RecompileMexForMT">Unable to execute C MEX S-function ''{0}'' with the 'Configuration Parameters' > 'Solver' > 'Treat each discrete rate as a separate task' option selected. S-function ''{1}'' was built with an oldrt version of simstruc.h and needs to be recompiled (see the mex command for details).</entry>
    <entry key="RegisterInputDimsModeErr">Cannot register MdlSetInputPortDimensionsModeFcn method for S-function ''{0}'' in {1} because this method has already been registered</entry>
    <entry key="RunTimeParamWithNoData">Run-time parameter ''{0}'' registered by ''{1}'' specified a NULL data pointer. This will cause re-build problems when using the Accelerator. This will also disable the ''Parameter Pooling'' optimization for this parameter. Please consider correcting your S-function to specify the run-time parameter data in mdlSetWorkWidths</entry>
    <entry key="SFcnAccessingDSMElementWithoutRegistration">Block ''{0}'' is accessing individual elements of data store {1,number,integer} even though it registered that it would not do so</entry>
    <entry key="SFcnAccessingUnregisteredDataStore">The S-function ''{0}'' must register data store index {1,number,integer} before it accesses it</entry>
    <entry key="SFcnBadDefCompSigFcnInCompSig">Error in default port complex signal function of S-function ''{0}''. This function does not set the complex signal of input port {1,number,integer}</entry>
    <entry key="SFcnBadDefCompSigFcnOutCompSig">Error in default port complex signal function of S-function ''{0}''. This function does not set the complex signal of output port {1,number,integer}</entry>
    <entry key="SFcnBadDefDTypeFcnInDType">Error in default port datatype function of S-function ''{0}''. This function does not set the datatype of input port {1,number,integer}</entry>
    <entry key="SFcnBadDefDTypeFcnOutDType">Error in default port datatype function of S-function ''{0}''. This function does not set the datatype of output port {1,number,integer}</entry>
    <entry key="SFcnBadDefDimsFcnInDims">Error in default port dimensions function of S-function ''{0}''. This function does not fully set the dimensions of input port {1,number,integer}</entry>
    <entry key="SFcnBadDefDimsFcnOutDims">Error in default port dimensions function of S-function ''{0}''. This function does not fully set the dimensions of output port {1,number,integer}</entry>
    <entry key="SFcnBlkInvalidParam">Invalid parameters for S-function ''{0}''. For code generation, S-function parameters must be one or two dimensional nonsparse numeric or character arrays unless the S-function uses a TLC file and has an mdlRTW function.</entry>
    <entry key="SFcnBlkNotTunableParamChange">Cannot modify parameter {0,number,integer} of S-function ''{1}'' while simulation is running</entry>
    <entry key="SFcnBlkParamMustBeBuiltIn">S-function ''{0}'' parameters must be of a built-in data type for code generation</entry>
    <entry key="SFcnCannotChangeNumParams">Cannot change number of parameters in S-function ''{0}'' while simulation is running (or a set_param is active)</entry>
    <entry key="SFcnCannotSetRangeCheckpointForScratchDWork">Cannot set value range checkpoint for dwork of index {0,number,integer} in S-Function ''{1}'' because the dwork is used as scratch</entry>
    <entry key="SFcnCantLinearizeMultipleSampleTimes">S-function block with more than one sample times is not supported in linearization</entry>
    <entry key="SFcnComplexToRealConv">Unable to map complex-valued data to real-valued run-time parameter ''{0}'' for S-function ''{1}'' in ''{2}''</entry>
    <entry key="SFcnDSMBadElementRead">In block ''{0}'' the element ({1,number,integer}) used in calling ssReadFromDataStoreElement is larger than the width of the data store ({2,number,integer})</entry>
    <entry key="SFcnDSMBadElementWrite">In block ''{0}'' the element ({1,number,integer}) used in calling ssWriteToDataStoreElement is larger than the width of the data store ({2,number,integer})</entry>
    <entry key="SFcnDSMInfoNullPtr">The S-function ''{0}'' is passing NULL as the third argument to ssGetDataStoreInfo for data store index {1,number,integer}. The third argument must be a valid SFcnDataStoreInfo pointer</entry>
    <entry key="SFcnDSMNegElementRead">Block ''{0}'' is calling ssReadFromDataStoreElement with an element index of ({1,number,integer}); element indices must be non-negative</entry>
    <entry key="SFcnDSMNegElementWrite">Block ''{0}'' is calling ssWriteToDataStoreElement with an element index of ({1,number,integer}); element indices must be non-negative</entry>
    <entry key="SFcnDSWDisallowConstantSampleTime">Error while initializing sizes for S-function block ''{0}''. Any S-function that accesses data stores must disallow constant sample time by using the option SS_OPTION_DISALLOW_CONSTANT_SAMPLE_TIME</entry>
    <entry key="SFcnDWorksUsedAsDStatesNeedName">The usedAsDState flag of data type work vector {0,number,integer} of S-function ''{1}'' is ignored because it is not named</entry>
    <entry key="SFcnDataCannotBeEmptyForRTP">Cannot register run-time parameter for dialog parameter {0,number,integer} for S-function ''{1}'' in ''{2}'' because the dialog parameter is empty</entry>
    <entry key="SFcnDataCannotBeNULLForRTP">Cannot register run-time parameter with NULL data pointer for S-function ''{0}'' in ''{1}''</entry>
    <entry key="SFcnDataComplexityCannotBeInheritedForRTP">Cannot register run-time parameter with a COMPLEX_INHERITED data pointer for S-function ''{0}'' in ''{1}''</entry>
    <entry key="SFcnDataTypeCannotBeDynamicForRTP">Cannot register run-time parameter with a DYNAMICALLY_TYPED data pointer for S-function ''{0}'' in ''{1}''</entry>
    <entry key="SFcnDesignMaxIsOutOfDTRange">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': Design maximum ({3}) is out of data type range [{4}, {5}]</entry>
    <entry key="SFcnDesignMaxPrmShouldBeDoubleScalar">Argument {0,number,integer} of the S-function in ''{1}'' specifies the design maximum for {2} of index {3,number,integer}.  However, the argument does not evaluate to a double scalar value that is not -Inf</entry>
    <entry key="SFcnDesignMaxPrmShouldBeFiniteRealDoubleScalar">Argument {0,number,integer} of the S-function in ''{1}'' specifies the design maximum for {2} of index {3,number,integer}.  However, the argument does not evaluate to a finite real double scalar value</entry>
    <entry key="SFcnDesignMinIsOutOfDTRange">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': Design minimum ({3}) is out of data type range [{4}, {5}]</entry>
    <entry key="SFcnDesignMinPrmShouldBeDoubleScalar">Argument {0,number,integer} of the S-function in ''{1}'' specifies the design minimum for {2} of index {3,number,integer}.  However, the argument does not evaluate to a double scalar value that is not Inf</entry>
    <entry key="SFcnDesignMinPrmShouldBeFiniteRealDoubleScalar">Argument {0,number,integer} of the S-function in ''{1}'' specifies the design minimum for {2} of index {3,number,integer}.  However, the argument does not evaluate to a finite real double scalar value</entry>
    <entry key="SFcnDisableExportedFcnError">S-function ''{0}'' had an error during function-call disabling on function-call input port {1,number,integer}, element {2,number,integer} at time {3}</entry>
    <entry key="SFcnDlgPrmIdxNotNull">Run-time parameter record (index={0,number,integer}) specified by S-function ''{1}'' in ''{2}'' is invalid. The number of dialog parameter indices is 0 but dlgParamIndices is not NULL</entry>
    <entry key="SFcnEnableExportedFcnError">S-function ''{0}'' had an error during function-call enabling on function-call input port {1,number,integer}, element {2,number,integer} at time {3}</entry>
    <entry key="SFcnErrResolvingVar">Error resolving variable ''{0}'' for ''{1}'' in resolve callback</entry>
    <entry key="SFcnErrorStatus">Error reported by S-function ''{0}'' in ''{1}'':\n{2}</entry>
    <entry key="SFcnExportFcnInvPort">Error while exporting function on  input port {0,number,integer} for S-function ''{1}''. The specified input port does not exist. Consider using ''ssSetNumInputPorts'' before specifying input port based methods</entry>
    <entry key="SFcnGetDSMAddrUnsupported">The S-function ''{0}'' is calling ssGetSFcnDataStoreNameAddrIdx or ssGetSFcnGlobalDataStoreNameAddrIdx which are for internal Simulink use only</entry>
    <entry key="SFcnIgnoringUsedAsDStateFlag">The usedAsDState flag of data type work vector {0} of ''{1}'' is ignored because its data type ''{2}'' is not built-in</entry>
    <entry key="SFcnIncompleteDTForExportedFcns">Error while initializing sizes for S-function block ''{0}''.  The S-function must set the dimensions for all of its input and output ports.  Dynamically sized ports are not supported for S-function blocks which export functions</entry>
    <entry key="SFcnIncompleteDimsForExportedFcns">Error while initializing sizes for S-function block ''{0}''.  The S-function must set the data type for all of its input and output ports. Dynamically typed ports are not supported for S-function blocks which export functions</entry>
    <entry key="SFcnInheritedBlockTsForPortTsAssigned">The S-function ''{0}'' in ''{1}'' has specified the option SS_OPTION_PORT_SAMPLE_TIMES_ASSIGNED and specified inherited for sample time number {2,number,integer}. Inheriting a sample time is not supported when specifying SS_OPTION_PORT_SAMPLE_TIMES_ASSIGNED</entry>
    <entry key="SFcnInheritedInputTsForPortTsAssigned">The S-function ''{0}'' in ''{1}'' has specified the option SS_OPTION_PORT_SAMPLE_TIMES_ASSIGNED and specified inherited for the sample time of input port number {2,number,integer}. Inheriting a sample time is not supported when specifying SS_OPTION_PORT_SAMPLE_TIMES_ASSIGNED</entry>
    <entry key="SFcnInheritedOutputTsForPortTsAssigned">The S-function ''{0}'' in ''{1}'' has specified the option SS_OPTION_PORT_SAMPLE_TIMES_ASSIGNED and specified inherited for the sample time of output port number {2,number,integer}. Inheriting a sample time is not supported when specifying SS_OPTION_PORT_SAMPLE_TIMES_ASSIGNED</entry>
    <entry key="SFcnInlinedForRTWWithoutTLC">S-function ''{0}'' in ''{1}'' specifies option SS_OPTION_SFUNCTION_INLINED_FOR_RTW however a ''{2}.tlc'' file could not be located in the current working directory, the S-function directory ''{3}'', or the directory ''{4}''</entry>
    <entry key="SFcnInvDWorkComplexSignal">Invalid complex signal for data type work vector {0,number,integer} returned by S-function ''{1}'' in ''{2}''</entry>
    <entry key="SFcnInvDWorkDataType">Invalid data type for data type work vector {0,number,integer} returned by S-function ''{1}'' in ''{2}''</entry>
    <entry key="SFcnInvParamDatatype">Invalid data type ''{0}'' specified for parameter {1,number,integer} of S-function ''{2}'' in ''{3}''. For the list of data types supported by the block execute the following command at the MATLAB prompt:\n\t showblockdatatypetable </entry>
    <entry key="SFcnInvDWorkWidth">Invalid number of elements ({0,number,integer}) for data type work vector {1,number,integer} returned by S-function ''{2}'' in ''{3}''</entry>
    <entry key="SFcnInvDlgPrmForRTParam">Unable to map dialog parameter {0,number,integer} of S-function ''{1}'' in ''{2}'' to a run-time parameter.  This parameter is an unsupported variable class such as a string, structure, cell, or an unsupported data type</entry>
    <entry key="SFcnInvDlgPrmIdx">Run-time parameter record (index={0,number,integer}) specified by S-function ''{1}'' in ''{2}'' is invalid. The record indicates that the run-time parameter is dependent on a non-existent dialog parameter with index {3,number,integer}. The run-time parameter can depend only on dialog parameters with indices in the range from 0 to {4,number,integer} (one less than the total number of dialog parameters)</entry>
    <entry key="SFcnInvInputPortWidth">Invalid width for input port {0,number,integer} specified by S-function ''{1}'' in ''{2}''</entry>
    <entry key="SFcnInvNumContStates">Invalid number of continuous states returned by S-function ''{0}'' in ''{1}''</entry>
    <entry key="SFcnInvNumDWork">Invalid number of data type work vectors returned by S-function ''{0}'' in ''{1}''</entry>
    <entry key="SFcnInvNumDiscStates">Invalid number of discrete states returned by S-function ''{0}'' in ''{1}''</entry>
    <entry key="SFcnInvNumDlgPrmIdx">Run-time parameter record (index={0,number,integer}) specified by S-function ''{1}'' in ''{2}'' is invalid. The number of dialog parameter indices cannot be negative</entry>
    <entry key="SFcnInvNumIWork">Invalid number of integer work elements returned by S-function ''{0}'' in ''{1}''</entry>
    <entry key="SFcnInvNumInputPorts">Invalid number of output ports returned by S-function ''{0}'' in ''{1}''</entry>
    <entry key="SFcnInvNumInputs">Invalid number of inputs returned by S-function ''{0}'' in ''{1}''</entry>
    <entry key="SFcnInvNumModes">Invalid number of modes returned by S-function ''{0}'' in ''{1}''</entry>
    <entry key="SFcnInvNumNonsampledZCs">Invalid number of zero crossings returned by S-function ''{0}'' in ''{1}''</entry>
    <entry key="SFcnInvNumNzMax">Invalid number of nonzero Jacobian entries returned by S-function ''{0}'' in ''{1}''</entry>
    <entry key="SFcnInvNumOutputPorts">Invalid number of output ports returned by S-function ''{0}'' in ''{1}''</entry>
    <entry key="SFcnInvNumOutputs">Invalid number of outputs returned by S-function  ''{0}'' in ''{1}''</entry>
    <entry key="SFcnInvNumPWork">Invalid number of pointer work elements returned by S-function ''{0}'' in ''{1}''</entry>
    <entry key="SFcnInvNumRWork">Invalid number of real work elements returned by S-function ''{0}'' in ''{1}''</entry>
    <entry key="SFcnInvNumZCEvents">Invalid number of zero crossings events returned by S-function ''{0}'' in ''{1}''</entry>
    <entry key="SFcnInvOutputPortWidth">Invalid width for output port {0,number,integer} specified by S-function ''{1}'' in ''{2}''</entry>
    <entry key="SFcnInvRTParamRec"><![CDATA[Run-time parameter record (index={0,number,integer}) specified by S-function ''{1}'' in ''{2}'' is invalid. The number of dimensions must be greater than zero and only 1 & 2-D arrays are supported when outputAsMatrix is enabled]]></entry>
    <entry key="SFcnInvTsForExportedFcns">Error while initializing sizes for S-function block ''{0}''.  The S-function must specify a single sample time.  Consider using ''ssSetNumSampleTimes''</entry>
    <entry key="SFcnInvalidDataStoreIndex">The S-function ''{0}'' may not reference a data store with index {1,number,integer}; it has declared that it only accesses {2,number,integer} data stores</entry>
    <entry key="SFcnInvalidGlobalDSMRegistration">The S-function ''{0}'' may not register global data store ''{1}'' using the macro ''ssRegMdlInfo''</entry>
    <entry key="SFcnInvalidNegDataStoreIndex">The S-function ''{0}'' may not reference a data store with index {1,number,integer}; the index must be non-negative</entry>
    <entry key="SFcnInvalidNumDataStores">The S-function ''{0}'' may not set the number of global data stores accessed to {1,number,integer}; the number accessed must be a positive value</entry>
    <entry key="SFcnInvalidRTPComplexity">Run-time parameter record (index={0,number,integer}) specified by S-function ''{1}'' in ''{2}'' is invalid. The complexSignal attribute must be COMPLEX_YES or COMPLEX_NO</entry>
    <entry key="SFcnInvalidRTPName">Run-time parameter record (index={0,number,integer}) specified by S-function ''{1}'' in ''{2}'' is invalid. The name of the run-time parameter must be a valid variable name</entry>
    <entry key="SFcnInvalidReassignNumDataStores">The S-function ''{0}'' may not reset the number of global data stores accessed to {1,number,integer}; it has already been set to {2,number,integer}</entry>
    <entry key="SFcnInvalidTransformedFlag">Run-time parameter record (index={0,number,integer}) specified by S-function ''{1}'' in ''{2}'' is invalid.  The transformed attribute must be one of the enumerations in the TransformedFlag type</entry>
    <entry key="SFcnLoggingFromReadOnlyBlock">Block ''{0}'' registered that it only reads from data store {1,number,integer} but is now updating the DSM log.</entry>
    <entry key="SFcnMissingGetInputPortWidth">S-function ''{0}'' in ''{1}'' has a mdlGetOutputPortWidth, but doesn''t have a mdlGetInputPortWidth routine</entry>
    <entry key="SFcnMissingGetOutputPortWidth">S-function ''{0}'' in ''{1}'' has a mdlGetInputPortWidth, but doesn''t have a mdlGetOutputPortWidth routine</entry>
    <entry key="SFcnMissingMdlDerivatives">S-function ''{0}'' in ''{1}'' has continuous states, but doesn''t have a mdlDerivatives routine</entry>
    <entry key="SFcnMissingMethods">S-function ''{0}'' in ''{1}'' is linearly implicit, but doesn''t have {2}</entry>
    <entry key="SFcnMissingSetInputPortDims">S-function ''{0}'' in ''{1}'' has a mdlSetOutputPortDimensionInfo, but doesn''t have a mdlSetInputPortDimensionInfo routine</entry>
    <entry key="SFcnMissingSetInputPortWidth">S-function ''{0}'' in ''{1}'' has a mdlSetOutputPortWidth, but doesn''t have a mdlSetInputPortWidth routine</entry>
    <entry key="SFcnMissingSetOutputPortDims">S-function ''{0}'' in ''{1}'' has a mdlSetInputPortDimensionInfo, but doesn''t have a mdlSetOutputPortDimensionInfo routine</entry>
    <entry key="SFcnMissingSetOutputPortWidth">S-function ''{0}'' in ''{1}'' has a mdlSetInputPortWidth, but doesn''t have a mdlSetOutputPortWidth routine</entry>
    <entry key="SFcnMultExportedDisableFcn">Error while exporting a disable function on input port {0,number,integer} for S-function ''{1}''. A disable function is already exported for the specified input port</entry>
    <entry key="SFcnMultExportedEnableFcn">Error while exporting an enable function on input port {0,number,integer} for S-function ''{1}''. An enable function is already exported for the specified input port</entry>
    <entry key="SFcnMultExportedOutputFcn">Error while exporting an output function on input port {0,number,integer} for S-function ''{1}''. An output function is already exported for the specified input port</entry>
    <entry key="SFcnMultSetNumInputPortsCalls">Error, S-function ''{0}'' in ''{1}'' called mdlSetNumInputPorts more than once</entry>
    <entry key="SFcnMultSetNumOutputPortsCalls">Error, S-function ''{0}'' in ''{1}'' called mdlSetNumOutputPorts more than once</entry>
    <entry key="SFcnNeedsToExportMethod">Error while specifying input port ''{0,number,integer}'' of S-function ''{1}''.  The input port was specified to be of type function-call but an output method was not registered.  Consider using ''ssExportOutputFcn''</entry>
    <entry key="SFcnNeedsToSpecifyFcnCall">Error while exporting function for input port ''{0,number,integer}'' of S-function ''{1}''.  The input port must specify its data type as a function-call (SS_FCN_CALL) while initializing sizes</entry>
    <entry key="SFcnNoFiObjWithoutRTP">S-Function ''{0}'' in ''{1}'' can not support parameters that are specified using Fi or enumeration objects because it does not register run-time parameters</entry>
    <entry key="SFcnNoninlinedDSM">The S-function ''{0}'' may not register data store memories when generating code because it is not inlined</entry>
    <entry key="SFcnNotSupportedForNormalMode">The S-Function ''{0}'' in ''{1}'' has a mdlStart and a mdlProcessParameters function.  This is not supported when used in a model referenced in normal mode, unless the S-Function has called ssSetModelReferenceNormalModeSupport with the value MDL_START_AND_MDL_PROCESS_PARAMS_OK</entry>
    <entry key="SFcnNullDSMAddrUnsupported">The S-function ''{0}'' is passing NULL as the address for reading or writing with data store index {1,number,integer}</entry>
    <entry key="SFcnNullDlgPrmIdx">Run-time parameter record (index={0,number,integer}) specified by S-function ''{1}'' in ''{2}'' is invalid. The number of dialog parameter indices is not 0 but dlgParamIndices is NULL</entry>
    <entry key="SFcnParamCountErr">For S-function ''{0}'', the number of defined parameters, {1,number,integer}, does not match the number of parameters on the dialog of ''{2}'', {3,number,integer}. These two values must be identical.</entry>
    <entry key="SFcnPortCountsConflict">Port counts conflicts with number of ports specified in sizes routine of S-function ''{0}'' in ''{1}''</entry>
    <entry key="SFcnPriorityNumIsWrongForBlock">For S-function ''{0}'' in ''{1}'', the width {2,number,integer} of priority array passed to ssSetAsyncTaskPriorities is not equal to the width of output port. Please modify the S-function so that the width of priority array is consistent with output port width</entry>
    <entry key="SFcnPrmDesignMinGreaterThanDesignMax">Arguments {0,number,integer} and {1,number,integer} of the S-function in ''{2}'' specifies respectively the design minimum and maximum for {3} of index {4,number,integer}.  However, the design minimum ({5}) is greater than the design maximum ({6})</entry>
    <entry key="SFcnPrmNotSupportDesignMinMax">Cannot specify design minimum and maximum for {0} of index {1,number,integer} in ''{2}'': Design minimum and maximum are not supported for data type ''{3}''</entry>
    <entry key="SFcnPrmValueLessThanDesignMin">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': Parameter value ({3}) is less than the design minimum ({4})</entry>
    <entry key="SFcnPrmImValueLessThanDesignMin">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': The imaginary part of the parameter value ({3}) is less than the design minimum ({4})</entry>
    <entry key="SFcnPrmReValueLessThanDesignMin">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': The real part of the parameter value ({3}) is less than the design minimum ({4})</entry>
    <entry key="SFcnPrmValueGreaterThanDesignMax">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': Parameter value ({3}) is greater than the design maximum ({4})</entry>    
    <entry key="SFcnPrmImValueGreaterThanDesignMax">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': The imaginary part of the parameter value ({3}) is greater than the design maximum ({4})</entry>       
    <entry key="SFcnPrmReValueGreaterThanDesignMax">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': The real part of the parameter value ({3}) is greater than the design maximum ({4})</entry>    
    <entry key="SFcnPrmArrayValueLessThanDesignMin">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': Parameter value ({3}) is less than the design minimum ({4}). This occurs for element {5}.</entry>
    <entry key="SFcnPrmArrayImValueLessThanDesignMin">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': The imaginary part of the parameter value ({3}) is less than the design minimum ({4}).  This occurs for element {5}.</entry>   
    <entry key="SFcnPrmArrayReValueLessThanDesignMin">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': The real part of the parameter value ({3}) is less than the design minimum ({4}). This occurs for element {5}.</entry>    
    <entry key="SFcnPrmArrayValueGreaterThanDesignMax">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': Parameter value ({3}) is greater than the design maximum ({4}). This occurs for element {5}.</entry>
    <entry key="SFcnPrmArrayImValueGreaterThanDesignMax">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': The imaginary part of the parameter value ({3}) is greater than the design maximum ({4}). This occurs for element {5}.</entry>     
    <entry key="SFcnPrmArrayReValueGreaterThanDesignMax">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': The real part of the parameter value ({3}) is greater than the design maximum ({4}). This occurs for element {5}.</entry>    
    <entry key="SFcnPrmQuantizedValueLessThanDesignMin">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': Run-time parameter value ({3}) is less than the design minimum ({4})</entry>
    <entry key="SFcnPrmQuantizedImValueLessThanDesignMin">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': The imaginary part of the run-time parameter value ({3}) is less than the design minimum ({4})</entry>
    <entry key="SFcnPrmQuantizedReValueLessThanDesignMin">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': The real part of the run-time parameter value ({3}) is less than the design minimum ({4})</entry>
    <entry key="SFcnPrmQuantizedValueGreaterThanDesignMax">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': Run-time parameter value ({3}) is greater than the design maximum ({4})</entry>    
    <entry key="SFcnPrmQuantizedImValueGreaterThanDesignMax">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': The imaginary part of the run-time parameter ({3}) is greater than the design maximum ({4})</entry>       
    <entry key="SFcnPrmQuantizedReValueGreaterThanDesignMax">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': The real part of the run-time parameter value ({3}) is greater than the design maximum ({4})</entry>    
    <entry key="SFcnPrmQuantizedArrayValueLessThanDesignMin">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': Run-time parameter value ({3}) is less than the design minimum ({4}). This occurs for element {5}.</entry>
    <entry key="SFcnPrmQuantizedArrayImValueLessThanDesignMin">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': The imaginary part of the run-time parameter value ({3}) is less than the design minimum ({4}).  This occurs for element {5}.</entry>   
    <entry key="SFcnPrmQuantizedArrayReValueLessThanDesignMin">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': The real part of the run-time parameter value ({3}) is less than the design minimum ({4}). This occurs for element {5}.</entry>    
    <entry key="SFcnPrmQuantizedArrayValueGreaterThanDesignMax">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': Run-time parameter value ({3}) is greater than the design maximum ({4}). This occurs for element {5}.</entry>
    <entry key="SFcnPrmQuantizedArrayImValueGreaterThanDesignMax">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': The imaginary part of the run-time parameter value ({3}) is greater than the design maximum ({4}). This occurs for element {5}.</entry>     
    <entry key="SFcnPrmQuantizedArrayReValueGreaterThanDesignMax">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'': The real part of the run-time parameter value ({3}) is greater than the design maximum ({4}). This occurs for element {5}.</entry>
    <entry key="SFcnPrmInConsistentWithBusEleDesignMinMaxMsg">Inconsistent numeric values for {0} of index {1,number,integer} in ''{2}'':\n{3}</entry>
    <entry key="SFcDataBusWithNameNotSupportScalarMin">Minimum ''{0}'' is not supported for bus data type and has been ignored in checking {1} of index {2,number,integer} in ''{3}''. Specify minimum on leaf elements of bus object ''{4}'' to enable this check and to avoid an error in a future release</entry>
    <entry key="SFcDataBusWitoutNameNotSupportScalarMin">Minimum ''{0}'' is not supported for bus data type and has been ignored in checking {1} of index {2,number,integer} in ''{3}''. Specify minimum on leaf bus elements to enable this check and to avoid an error in a future release</entry>
    <entry key="SFcDataBusWithNameNotSupportScalarMax">Maximum ''{0}'' is not supported for bus data type and has been ignored in checking {1} of index {2,number,integer} in ''{3}''. Specify maximum on leaf elements of bus object ''{4}'' to enable this check and to avoid an error in a future release</entry>
    <entry key="SFcDataBusWitoutNameNotSupportScalarMax">Maximum ''{0}'' is not supported for bus data type and has been ignored in checking {1} of index {2,number,integer} in ''{3}''. Specify maximum on leaf bus elements to enable this check and to avoid an error in a future release</entry>
    <entry key="SFcnRTPCompat_MustHaveNullData">Cannot register run-time parameter (index={0,number,integer}) for ''{1}'' from S-Function parameter {2,number,integer} in ''{3}''. Run-time parameters marked as {4} must have NULL data if the S-Function parameter is empty</entry>
    <entry key="SFcnRTPCompat_MustHaveSameComplexity">Cannot register run-time parameter (index={0,number,integer}) for ''{1}'' from S-Function parameter {2,number,integer} in ''{3}''. Run-time parameters marked as {4} must have the same complexity as the S-Function parameter</entry>
    <entry key="SFcnRTPCompat_MustHaveSameDimensions">Cannot register run-time parameter (index={0,number,integer}) for ''{1}'' from S-Function parameter {2,number,integer} in ''{3}''. Run-time parameters marked as {4} must have the same dimensions as the S-Function parameter</entry>
    <entry key="SFcnRTPCompat_MustMapOneToOne">Cannot register run-time parameter (index={0,number,integer}) for ''{1}'' in ''{2}''. Run-time parameters marked as {3} must map to exactly one S-Function parameter</entry>
    <entry key="SFcnRTPCompat_NotTransformed_MustHaveSameData">Cannot register run-time parameter (index={0,number,integer}) for ''{1}'' from S-Function parameter {2,number,integer} in ''{3}''. Run-time parameters marked as {4} must have the same data as the S-Function parameter</entry>
    <entry key="SFcnRTPCompat_NotTransformed_MustHaveSameDataPointer">Cannot register run-time parameter (index={0,number,integer}) for ''{1}'' from S-Function parameter {2,number,integer} in ''{3}''. Run-time parameters marked as {4} must have the same data pointer as the S-Function parameter</entry>
    <entry key="SFcnRTPCompat_NotTransformed_MustHaveSameDataType">Cannot register run-time parameter (index={0,number,integer}) for ''{1}'' from S-Function parameter {2,number,integer} in ''{3}''. Run-time parameters marked as {4} must have the same data type as the S-Function parameter</entry>
    <entry key="SFcnRTPCompat_TransformedTunable_MustBeSimpleCast">Cannot register run-time parameter (index={0,number,integer}) for ''{1}'' from S-Function parameter {2,number,integer} in ''{3}''. Run-time parameters marked as {4} must be a simple data type cast from the S-Function parameter</entry>
    <entry key="SFcnRTPCompat_TransformedTunable_OnlySupportDoubleParam">Cannot register run-time parameter (index={0,number,integer}) for ''{1}'' from S-Function parameter {2,number,integer} in ''{3}''. Run-time parameters marked as {4} only support double-precision (context-sensitive) S-Function parameters</entry>
    <entry key="SFcnReRegisteringDSM">The S-function ''{0}'' may not register the data store ''{1}'' for index {2,number,integer} because the data store ''{3}'' is already associated with that index</entry>
    <entry key="SFcnReadingFromWriteOnlyBlock">Block ''{0}'' registered that it only writes to data store {1,number,integer} but is now reading from it</entry>
    <entry key="SFcnRegGlobalDSMButNotInlinedForTLC">The S-function ''{0}'' must set the option SS_OPTION_USE_TLC_WITH_ACCELERATOR for use with model reference since it registers the usage of global data stores</entry>
    <entry key="SFcnRunExportedFcnError">S-function ''{0}'' had an error during function-call invocation on function-call on function-call input port {1,number,integer}, element {2,number,integer} at time {3}</entry>
    <entry key="SFcnRunTimeModelAPINotSupported">Error executing the model API call because the S-Function ''{0}'' in block ''{1}'' is configured to disallow model API calls, such as output, update and derivative</entry>
    <entry key="SFcnSkipSinkWithVarSampleTime">The S-Function ''{0}'' in ''{1}'' is treated as a sink block and is skipped in the generated code. However, since it has variable sample time, the time steps from simulation and code generation may be different</entry>
    <entry key="SFcnSupportRTW33Plus">Invalid value is passed to the method ssSetSupportDataTypeBeyond32BitsInRTW in S-function ''{0}''. The valid values are RTW_SUPPORT_BEYOND_32_BITS_NO, RTW_SUPPORT_BEYOND_32_BITS_FULLY, and RTW_SUPPORT_BEYOND_32_BITS_UP_TO_TARGET_LONG</entry>
    <entry key="SFcnUseTLCWithAccelOrMdlrefNotInlined">S-function ''{0}'' in ''{1}'' specified option SS_OPTION_USE_TLC_WITH_ACCELERATOR, however a ''{2}.tlc'' file could not be located in the current working directory, the S-function directory ''{3}'', or the directory ''{4}''</entry>
    <entry key="SFcnWritingFromReadOnlyBlock">Block ''{0}'' registered that it only reads from data store {1,number,integer} but is now writing to it</entry>
    <entry key="SFcnWroteTooManyRTWParams">S-function ''{0}'' wrote out more params (in mdlRTW) than it registered</entry>
    <entry key="SFcn_SetOutputDimsRTWCG_Needed">S-function ''{0}'' in ''{1}'' uses CGIR to generate code. Therefore, ''setOutputDimsRTWCGFcn'' field must be set before using ''ssAddOutputDimsDependencyRule'' to add dimensions dependency rule</entry>
    <entry key="SFcnmdlZeroCrossingsIgnored">mdlZeroCrossings functions are ignored in Simulink Coder for Level 1 S-functions. Please update ''{0}'' to a Level 2 S-function</entry>
    <entry key="SfcnClockTickStepSizeIsNotSpecified">The S-function ''{0}'' does not specify its clock tick step size</entry>
    <entry key="SfcnClockTickStepSizeIsNotPositive">The S-function ''{0}'' does not specify a positive clock tick step size</entry>
<entry key="SfcnElementIdxMustLessThanWidth">In S-function ''{0}'', the element {1,number,integer} of passed in must be less than or equal to the output port width {2,number,integer}</entry>
    <entry key="SfcnExpectedRealEDP">S-Function parameter {0,number,integer} in ''{1}'' is invalid. The S-Function ''{2}'' expects a non-complex parameter</entry>
    <entry key="SfcnIncorrectDimsForEDP">S-Function parameter {0,number,integer} in ''{1}'' is invalid. The S-Function ''{2}'' expects the dimensions of this parameter to be ''{3}''</entry>
    <entry key="SfcnIncorrectDtypeForEDP">S-Function parameter {0,number,integer} in ''{1}'' is invalid. The S-Function ''{2}'' expects the data type of this parameter to be ''{3}''</entry>
    <entry key="SfcnInterfaceInfoSignalNotFound">Invalid signal string ''{0}''</entry>
    <entry key="SfcnScopeSignalNotFound">The signal ''{0}'' could not be found and has been removed from ''{1}''. Reselect signals to be viewed using the signal selector of ''{2}''.</entry>
    <entry key="SfcnInvalidDimsSpecifiedForEDP">Invalid expected dimensions specified by S-function ''{0}'' for parameter {1,number,integer} in ''{2}''. S-Function parameter dimensions must all be greater than zero</entry>
    <entry key="SfcnInvalidDtypeForRTP">Parameter {0,number,integer} of S-function ''{1}'' has been specified to be tunable even though it does not resolve to a MATLAB vector or matrix containing data of one of the following datatypes: uint8, uint16, uint32, int8, int16, int32, single, or double. Only parameters which are arrays of these datatypes can be specified to be tunable. Use ssSetSFcnParamTunable in mdlInitializeSizes to make this parameter not tunable</entry>
    <entry key="SfcnInvalidNumDimsSpecifiedForEDP">Invalid expected number of dimensions specified by S-function ''{0}'' for parameter {1,number,integer} in ''{2}''. S-Function parameters must have at least two dimensions</entry>
    <entry key="SfcnInvalidStepSize">Asynchronous timer attribute defined in S-function ''{0}'' is invalid. Step size {1} must be a positive value</entry>
    <entry key="SfcnMissingReqTLCforConstTs">The S-function ''{0}'' in ''{1}'' does not have TLC. TLC is required for this S-function because it permits constant sample times on its ports</entry>
    <entry key="SfcnMissingReqTLCforElapseTime">The S-function ''{0}'' in ''{1}'' does not have TLC. TLC is required for this S-function because it accesses elapse time which it indicated by specifying ssSetNeedElapseTime(S,true) in the mdlInitializeSizes function</entry>
    <entry key="SfcnMissingReqTLCforTrigSS">The S-function ''{0}'' in ''{1}'' does not have TLC. TLC is required for this S-function because it has port-based sample times and has specified the option SS_OPTION_ALLOW_PORT_SAMPLE_TIME_IN_TRIGSS</entry>
    <entry key="SfcnNotManageOwnTime">Asynchronous task defined by S-function ''{0}'' specifies asynchronous timer attributes, but the task does not manage its own timer. S-function must call ssSetTimeSource(S, SL_TIMERSOURCE_SELF) before calling ssSetAsyncTimerAttributes or ssSetAsyncTimerDataType</entry>
    <entry key="SignalNotFound">Cannot log signal with path ''{0}'' and port index {1,number,integer} in ''{2}''. The most likely cause is that a selected test pointed signal is not loggable, or the test points in the referenced model have been changed. To find out whether a test pointed signal is not loggable, open the referenced model, use the Signal Properties dialog to configure the signal to log data, and simulate the referenced model. If the signal is not loggable, a descriptive error message will appear</entry>
    <entry key="ScopeModelRefSignalNotFound">The signal from block ''{0}'' and port {1,number,integer} could not be found and has been removed from ''{2}''. Verify the signal and model reference paths.  If needed, add a testpoint to the signal to be viewed. Reselect the signal using the signal selector of ''{3}''. </entry>
    <entry key="ScopeStateflowSignalNotFound">The signal ''{0}'' could not be found and has been removed from ''{1}''. Verify the signal and Stateflow chart paths.  If needed, add a testpoint to the signal to be viewed. Reselect the signal using the signal selector of ''{2}''. </entry>
    <entry key="StateflowSignalNotFound">Signal ''{0}'' was not found in ''{1}''</entry>
    <entry key="UnknownOptForGenericFcn">Unknown option specified with the generic function of S-function ''{0}'' in ''{1}''.  This may be caused by using an S-function generated in a more recent version of Simulink than the one you are currently using.</entry>
    <entry key="SfcnInvalidCallFromGeneratedCode">Nested S-function ''{0}'' is not allowed to call macros that use the generic function in the SimStruct. A possible cause is nonvirtual bus input or output signals in the nested S-function. See ''Limitations on Nesting S-Functions'' in the product documentation</entry> 
    
<!--Changes -->
<entry key="NonZeroContinuousStates">First set the number of continuous states to be greater than zero, then you can set the state attributes</entry>
<entry key="AsyncTSNotAllowedAtSfcnOutport"> Outport block ''{0}'' uses asynchronous sample time. However, this sample time is not supported when generating a SIL or PIL verification block. To avoid this error, do one of the following:\n* Use an alternative sample time, for example, discrete sample time.\n* Set "Configuration Parameters > All Parameters > Create block" to "None".\n\nAlternatively, consider running the model in top-model SIL or PIL mode.</entry>
<entry key="InternalErrorSfcnValidateDimsMethod">Unexpected or internal error encountered in ''{0}''. Please report this to MathWorks if you can reproduce it</entry>

  </message>
</rsccat>

<!-- LocalWords:  xml UTF bitfields dworks dlg sfunction CDATA sfun fcncall
     LocalWords:  overwritable SIL datatype nonsparse DState Addr DSM Async
     LocalWords:  datatypes TRIGSS TIMERSOURCE clocktick stepsize loggable
-->
